{"version":3,"file":"static/js/164.69f7464c.chunk.js","mappings":"+FAgDAA,EAAOC,QA5BS,SAASC,EAAWC,EAAQC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GAOzD,IAAKP,EAAW,CACd,IAAIQ,EACJ,QAAeC,IAAXR,EACFO,EAAQ,IAAIE,MACV,qIAGG,CACL,IAAIC,EAAO,CAACT,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GACvBK,EAAW,GACfJ,EAAQ,IAAIE,MACVT,EAAOY,QAAQ,OAAO,WAAa,OAAOF,EAAKC,IAAa,MAExDE,KAAO,qBACf,CAGA,MADAN,EAAMO,YAAc,EACdP,CACR,CACF,C,+IClCIQ,EAA4B,CAAEC,IAChCA,EAAiB,KAAI,OACrBA,EAAiB,KAAI,OACrBA,EAAiB,KAAI,OACrBA,EAAiB,KAAI,OACrBA,EAAiB,KAAI,OACrBA,EAAiB,KAAI,OACrBA,EAAqB,SAAI,WACzBA,EAAmB,OAAI,SACvBA,EAAkB,MAAI,QACtBA,EAAkB,MAAI,QACtBA,EAAqB,SAAI,yBAClBA,GAZuB,CAa7BD,GAAa,CAAC,GACbE,EACI,CAAEC,IAAK,CAAC,UAAW,YAAa,cADpCD,EAEM,CAAEE,KAAM,CAAC,wBAFfF,EAGI,CACJG,QAAS,GACTP,KAAM,CAAC,YAAa,SAAU,eAC9BQ,SAAU,CACR,UACA,WACA,SACA,WACA,eACA,iBACA,cACA,gBACA,sBACA,gBACA,oBACA,eACA,iBAIFC,EAAkBC,OAAOC,OAAOT,GAChCU,EAAgB,CAClBC,UAAW,YACXN,QAAS,UACTO,MAAO,YACPC,gBAAiB,kBACjBC,YAAa,cACb,aAAc,YACdC,SAAU,WACVC,SAAU,YAERC,EAAeT,OAAOU,QAAQR,GAAeS,QAC/C,CAACC,EAAKC,KAAmB,IAAhBC,EAAKC,GAAMF,EAElB,OADAD,EAAMG,GAASD,EACRF,CAAK,GAEd,CAAC,GAECI,EAAmB,UAGnBC,EACa,eADbA,EAEK,QAFLA,EAGyB,0BAHzBA,EAIsB,sBAJtBA,EAKc,gBALdA,EAMmB,oBAEnBC,EAAuBA,CAACC,EAAWrB,KACrC,IAAK,IAAIsB,EAAID,EAAUE,OAAS,EAAGD,GAAK,EAAGA,GAAK,EAAG,CACjD,MAAME,EAAQH,EAAUC,GACxB,GAAIpB,OAAOuB,UAAUC,eAAeC,KAAKH,EAAOxB,GAC9C,OAAOwB,EAAMxB,EAEjB,CACA,OAAO,IAAI,EAET4B,EAAyBP,IAC3B,IAAIQ,EAAiBT,EAAqBC,EAAW,SACrD,MAAMS,EAAoBV,EAAqBC,EAAWF,GAI1D,GAHIY,MAAMC,QAAQH,KAChBA,EAAiBA,EAAeI,KAAK,KAEnCH,GAAqBD,EACvB,OAAOC,EAAkBvC,QAAQ,OAAO,IAAMsC,IAEhD,MAAMK,EAAwBd,EAAqBC,EAAWF,GAC9D,OAAOU,GAAkBK,QAAyB,CAAM,EAEtDC,EAA0Bd,GAAcD,EAAqBC,EAAWF,IAAwC,MACnH,GACGiB,EAA6BA,CAACC,EAAShB,IAAcA,EAAUiB,QAAQd,GAAoC,qBAAnBA,EAAMa,KAA0BE,KAAKf,GAAUA,EAAMa,KAAUxB,QAAO,CAAC2B,EAAUC,KAAY,IAAMD,KAAaC,KAAY,CAAC,GACrNC,EAA0BA,CAACC,EAAmBtB,IAAcA,EAAUiB,QAAQd,GAA8C,qBAA7BA,EAAuB,OAAmBe,KAAKf,GAAUA,EAAuB,OAAGoB,UAAU/B,QAAO,CAACgC,EAAkBC,KACxN,IAAKD,EAAiBtB,OAAQ,CAC5B,MAAMwB,EAAO7C,OAAO6C,KAAKD,GACzB,IAAK,IAAIxB,EAAI,EAAGA,EAAIyB,EAAKxB,OAAQD,GAAK,EAAG,CACvC,MACM0B,EADeD,EAAKzB,GACiB2B,cAC3C,IAA0D,IAAtDN,EAAkBO,QAAQF,IAAiCF,EAAIE,GACjE,OAAOH,EAAiBM,OAAOL,EAEnC,CACF,CACA,OAAOD,CAAgB,GACtB,IAECO,EAAuBA,CAACC,EAASV,EAAmBtB,KACtD,MAAMiC,EAAmB,CAAC,EAC1B,OAAOjC,EAAUiB,QAAQd,IACvB,QAAIO,MAAMC,QAAQR,EAAM6B,MAGM,qBAAnB7B,EAAM6B,KAPTE,EAQD,WAADJ,OACSE,EAAO,oDAAAF,cAA0D3B,EAAM6B,GAAQ,KAT9EG,SAAmC,oBAAjBA,QAAQC,MAAuBD,QAAQC,KAAKF,KAYvE,GAZCA,KAYI,IACXhB,KAAKf,GAAUA,EAAM6B,KAAUT,UAAU/B,QAAO,CAAC6C,EAAcC,KAChE,MAAMC,EAAmB,CAAC,EAC1BD,EAAarB,QAAQQ,IACnB,IAAIe,EACJ,MAAMC,EAAQ5D,OAAO6C,KAAKD,GAC1B,IAAK,IAAIxB,EAAI,EAAGA,EAAIwC,EAAMvC,OAAQD,GAAK,EAAG,CACxC,MAAMyC,EAAeD,EAAMxC,GACrB0B,EAAwBe,EAAad,eACe,IAAtDN,EAAkBO,QAAQF,IAA2D,QAAxBa,GAAsF,cAA3Cf,EAAIe,GAAqBZ,eAA8D,QAA1BD,GAA0F,eAA7CF,EAAIE,GAAuBC,gBAC/OY,EAAsBb,IAEyB,IAA7CL,EAAkBO,QAAQa,IAA0C,cAAjBA,GAAkE,YAAjBA,GAA8D,aAAjBA,IACnJF,EAAsBE,EAE1B,CACA,IAAKF,IAAwBf,EAAIe,GAC/B,OAAO,EAET,MAAM5C,EAAQ6B,EAAIe,GAAqBZ,cAOvC,OANKK,EAAiBO,KACpBP,EAAiBO,GAAuB,CAAC,GAEtCD,EAAiBC,KACpBD,EAAiBC,GAAuB,CAAC,IAEtCP,EAAiBO,GAAqB5C,KACzC2C,EAAiBC,GAAqB5C,IAAS,GACxC,EAEG,IACX2B,UAAUoB,SAASlB,GAAQY,EAAaO,KAAKnB,KAChD,MAAMC,EAAO7C,OAAO6C,KAAKa,GACzB,IAAK,IAAItC,EAAI,EAAGA,EAAIyB,EAAKxB,OAAQD,GAAK,EAAG,CACvC,MAAMyC,EAAehB,EAAKzB,GACpB4C,EAAW,IACZZ,EAAiBS,MACjBH,EAAiBG,IAEtBT,EAAiBS,GAAgBG,CACnC,CACA,OAAOR,CAAY,GAClB,IAAId,SAAS,EAEduB,EAA0BA,CAAC9C,EAAW+C,KACxC,GAAIrC,MAAMC,QAAQX,IAAcA,EAAUE,OACxC,IAAK,IAAI8C,EAAQ,EAAGA,EAAQhD,EAAUE,OAAQ8C,GAAS,EAAG,CAExD,GADahD,EAAUgD,GACdD,GACP,OAAO,CAEX,CAEF,OAAO,CAAK,EAoCVE,EAAgBC,GAAkBxC,MAAMC,QAAQuC,GAAiBA,EAActC,KAAK,IAAMsC,EAU1FC,EAAcA,CAACC,EAAcC,IAC3B3C,MAAMC,QAAQyC,GACTA,EAAa5D,QAClB,CAAC8D,EAAKC,KAZYC,EAACrD,EAAOsD,KAC9B,MAAM/B,EAAO7C,OAAO6C,KAAKvB,GACzB,IAAK,IAAIF,EAAI,EAAGA,EAAIyB,EAAKxB,OAAQD,GAAK,EACpC,GAAIwD,EAAQ/B,EAAKzB,KAAOwD,EAAQ/B,EAAKzB,IAAIyD,SAASvD,EAAMuB,EAAKzB,KAC3D,OAAO,EAGX,OAAO,CAAK,EAMFuD,CAAkBD,EAAcF,GAClCC,EAAIK,SAASf,KAAKW,GAElBD,EAAIM,QAAQhB,KAAKW,GAEZD,IAET,CAAEK,SAAU,GAAIC,QAAS,KAGtB,CAAEA,QAASR,EAAcO,SAAU,IAExCE,EAAUA,CAACC,EAAKnE,KACX,IACFmE,EACH,CAACnE,QAAM,IAKPoE,EAAoB,CAAC,WAA2B,SAAuB,SACvEC,EAA0B,SAACC,GAC7B,OAAe,OADyBC,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,KAAAA,UAAA,IAE/BC,OAAOF,GAETE,OAAOF,GAAK/F,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,UAAUA,QAAQ,KAAM,SAC9H,EACIkG,EAAqCC,GAAexF,OAAO6C,KAAK2C,GAAY7E,QAAO,CAACyE,EAAKtE,KAC3F,MAAM2E,EAAkC,qBAApBD,EAAW1E,GAAuB,GAAHmC,OAAMnC,EAAG,MAAAmC,OAAKuC,EAAW1E,GAAI,QAAAmC,OAASnC,GACzF,OAAOsE,EAAM,GAAHnC,OAAMmC,EAAG,KAAAnC,OAAIwC,GAASA,CAAI,GACnC,IAwBCC,EAAuC,SAACF,GAAU,IAAEG,EAASN,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAKrF,OAAO6C,KAAK2C,GAAY7E,QAAO,CAACsE,EAAKnE,KAE9GmE,EADe/E,EAAcY,IACfA,GAAO0E,EAAW1E,GACzBmE,IACNU,EAAU,EASTC,EAA+BA,CAAChG,EAAMiG,IAASA,EAAKxD,KAAI,CAACO,EAAKxB,KAChE,MAAM0E,EAAY,CAChBhF,IAAKM,EACL,CAACJ,IAAmB,GAYtB,OAVAhB,OAAO6C,KAAKD,GAAKkB,SAASiC,IACxB,MACMC,EADS9F,EAAc6F,IACKA,EAClC,GAAwB,cAApBC,GAAwE,YAApBA,EAA8C,CACpG,MAAMC,EAAUrD,EAAIsD,WAAatD,EAAIuD,QACrCL,EAAUM,wBAA0B,CAAEC,OAAQJ,EAChD,MACEH,EAAUE,GAAmBpD,EAAImD,EACnC,IAEKO,EAAAA,cAAoB1G,EAAMkG,EAAU,IAEzCS,EAAmB,SAAC3G,EAAMiG,GAAwB,IAAlBW,IAAMnB,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,KAAAA,UAAA,GACxC,OAAQzF,GACN,IAAK,QACH,MAAO,CACL6G,YAAaA,IA7BeC,EAACC,EAAOC,EAAOpB,KACjD,MAIMlE,EAAQoE,EAAqCF,EAJjC,CAChB1E,IAAK8F,EACL,CAAC5F,IAAmB,IAGtB,MAAO,CAACsF,EAAAA,cAAoB,QAAqBhF,EAAOsF,GAAO,EAuBtCF,CAA8B9G,EAAMiG,EAAKe,MAAOf,EAAKgB,iBACxEC,SAAUA,IA1DUC,EAACnH,EAAMgH,EAAOpB,EAAYgB,KACpD,MAAMQ,EAAkBzB,EAAkCC,GACpDyB,EAAiB7C,EAAawC,GACpC,OAAOI,EAAkB,IAAH/D,OAAOrD,EAAI,KAAAqD,OAAIjC,EAAgB,YAAAiC,OAAW+D,EAAe,KAAA/D,OAAIkC,EACjF8B,EACAT,GACD,MAAAvD,OAAKrD,EAAI,SAAAqD,OAAUrD,EAAI,KAAAqD,OAAIjC,EAAgB,YAAAiC,OAAWkC,EACrD8B,EACAT,GACD,MAAAvD,OAAKrD,EAAI,IAAG,EAiDSmH,CAAsBnH,EAAMiG,EAAKe,MAAOf,EAAKgB,gBAAiBL,IAElF,IAAK,iBACL,IAAK,iBACH,MAAO,CACLC,YAAaA,IAAMf,EAAqCG,GACxDiB,SAAUA,IAAMvB,EAAkCM,IAEtD,QACE,MAAO,CACLY,YAAaA,IAAMb,EAA6BhG,EAAMiG,GACtDiB,SAAUA,IA1DS,SAAClH,EAAMiG,GAAI,IAAEW,IAAMnB,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,KAAAA,UAAA,GAAO,OAAKQ,EAAKlF,QAAO,CAACyE,EAAK8B,KAC1E,MAAMtE,EAAMsE,EACNC,EAAgBnH,OAAO6C,KAAKD,GAAKR,QACpC2D,KAA8B,cAAdA,GAA4D,YAAdA,KAC/DpF,QAAO,CAACyG,EAAQrB,KAChB,MAAMN,EAAiC,qBAAnB7C,EAAImD,GAA6BA,EAAY,GAAH9C,OAAM8C,EAAS,MAAA9C,OAAKkC,EAAwBvC,EAAImD,GAAYS,GAAO,KACjI,OAAOY,EAAS,GAAHnE,OAAMmE,EAAM,KAAAnE,OAAIwC,GAASA,CAAI,GACzC,IACG4B,EAAazE,EAAIsD,WAAatD,EAAIuD,SAAW,GAC7CmB,GAAqD,IAArCpC,EAAkBlC,QAAQpD,GAChD,MAAO,GAAPqD,OAAUmC,EAAG,KAAAnC,OAAIrD,EAAI,KAAAqD,OAAIjC,EAAgB,YAAAiC,OAAWkE,GAAalE,OAAGqE,EAAgB,KAAH,IAAArE,OAAcoE,EAAU,MAAApE,OAAKrD,EAAI,KAAG,GACpH,GAAG,CA+CkB2H,CAAqB3H,EAAMiG,EAAMW,IAGzD,EA6DIgB,EAlCoBlG,IACtB,MAAM,QACJmG,EAAO,eACPC,EAAc,OACdlB,GAAS,EAAI,eACbmB,EAAc,aACdC,EAAY,UACZC,EAAS,MACTjB,EAAQ,GAAE,gBACVC,EAAe,kBACfiB,GACExG,EACJ,IAAI,SAAEyG,EAAQ,SAAEC,EAAQ,WAAEC,GAAe3G,EACrC4G,EAAkB,CACpBzB,YAAaA,OAEbK,SAAUA,IAAM,IAKlB,OAHIgB,KACCI,kBAAiBH,WAAUC,WAAUC,cA7CnBE,KAAgD,IAA/C,SAAEH,EAAQ,SAAED,EAAQ,WAAEE,EAAU,OAAEzB,GAAQ2B,EAClE,MAAMC,EAAO9D,EAAY0D,EAAUtI,GAC7B2I,EAAO/D,EAAYyD,EAAUrI,GAC7B4I,EAAShE,EAAY2D,EAAYvI,GAgBvC,MAAO,CACLwI,gBAhBsB,CACtBzB,YAAaA,IAAM,IACdb,EAA6B,OAAmBwC,EAAKtD,aACrDc,EAA6B,OAAmByC,EAAKvD,aACrDc,EAA6B,SAAuB0C,EAAOxD,WAEhEgC,SAAUA,IACR,GAAA7D,OACGsD,EAAiB,OAAmB6B,EAAKtD,SAAU0B,GAAO,KAAAvD,OAAIsD,EAC/D,OACA8B,EAAKvD,SACL0B,GACD,KAAAvD,OAAIsD,EAAiB,SAAuB+B,EAAOxD,SAAU0B,KAKhEwB,SAAUI,EAAKrD,QACfgD,SAAUM,EAAKtD,QACfkD,WAAYK,EAAOvD,QACpB,EAqBwDwD,CAAmBjH,IAErE,CACLwD,SAAUoD,EACVM,KAAMjC,EAAiB,OAAmBkB,EAASjB,GACnDkB,eAAgBnB,EAAiB,iBAA6BmB,EAAgBlB,GAC9EmB,eAAgBpB,EAAiB,iBAA6BoB,EAAgBnB,GAC9E6B,KAAM9B,EAAiB,OAAmBwB,EAAUvB,GACpD4B,KAAM7B,EAAiB,OAAmByB,EAAUxB,GACpDiC,SAAUlC,EAAiB,WAA2BqB,EAAcpB,GACpE8B,OAAQ/B,EAAiB,SAAuB0B,EAAYzB,GAC5DkC,MAAOnC,EAAiB,QAAqBsB,EAAWrB,GACxDI,MAAOL,EAAiB,QAAqB,CAAEK,QAAOC,mBAAmBL,GAC1E,EAKCmC,EAAY,GACZC,IAAkC,qBAAXC,SAA0BA,OAAOC,WAAYD,OAAOC,SAASC,eACpFC,EAAa,MAmBfC,WAAAA,CAAYC,EAASC,IAAWC,EAAAA,EAAAA,GAAA,iBAlBpB,KAAEA,EAAAA,EAAAA,GAAA,iBACFR,IAAUQ,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,aAEd,CACNC,UAAYC,IACVC,KAAKL,QAAQM,OAASF,CAAW,EAEnCG,gBAAiB,CACfC,IAAKA,IAAMH,KAAKJ,UAAYR,EAAYY,KAAKZ,UAC7CgB,IAAMC,KACHL,KAAKJ,UAAYR,EAAYY,KAAKZ,WAAW5E,KAAK6F,EAAS,EAE9DC,OAASD,IACP,MAAMzF,GAASoF,KAAKJ,UAAYR,EAAYY,KAAKZ,WAAW3F,QAAQ4G,IACnEL,KAAKJ,UAAYR,EAAYY,KAAKZ,WAAWmB,OAAO3F,EAAO,EAAE,KAKlEoF,KAAKL,QAAUA,EACfK,KAAKJ,UAAYA,IAAa,EACzBA,IACHD,EAAQM,OAAShC,EAAe,CAC9BC,QAAS,GACTC,eAAgB,CAAC,EACjBvC,yBAAyB,EACzBwC,eAAgB,CAAC,EACjBI,SAAU,GACVC,SAAU,GACVJ,aAAc,GACdK,WAAY,GACZJ,UAAW,GACXjB,MAAO,GACPC,gBAAiB,CAAC,IAGxB,GAKEkD,EAAUC,EAAAA,cADK,CAAC,GAEhBC,GAAcC,EAAG,MAAMC,UAAwBC,EAAAA,UAGjDnB,WAAAA,CAAY3H,GACV+I,MAAM/I,IAAO8H,EAAAA,EAAAA,GAAA,0BACbG,KAAKe,WAAa,IAAItB,EAAWO,KAAKjI,MAAM4H,SAAW,CAAC,EAAGiB,EAAgBhB,UAC7E,CACAoB,MAAAA,GACE,OAAuBP,EAAAA,cAAqBD,EAAQS,SAAU,CAAEzJ,MAAOwI,KAAKe,WAAWvJ,OAASwI,KAAKjI,MAAMmJ,SAC7G,IACDrB,EAAAA,EAAAA,GAAAc,EAAA,YAToBtB,GAAUsB,GAgB3BQ,EAAaA,CAAC9K,EAAMiG,KACtB,MAAM8E,EAAc7B,SAAS8B,MAAQ9B,SAAS+B,cAAc,QACtDC,EAAWH,EAAYI,iBAAiB,GAAD9H,OAAIrD,EAAI,KAAAqD,OAAIjC,EAAgB,MACnEgK,EAAU,GAAGC,MAAMxJ,KAAKqJ,GACxBI,EAAU,GAChB,IAAIC,EAkCJ,OAjCItF,GAAQA,EAAKxE,QACfwE,EAAK/B,SAASlB,IACZ,MAAMwI,EAAatC,SAASC,cAAcnJ,GAC1C,IAAK,MAAMmG,KAAanD,EACtB,GAAI5C,OAAOuB,UAAUC,eAAeC,KAAKmB,EAAKmD,GAC5C,GAAkB,cAAdA,EACFqF,EAAWlF,UAAYtD,EAAIsD,eACtB,GAAkB,YAAdH,EACLqF,EAAWC,WACbD,EAAWC,WAAWlF,QAAUvD,EAAIuD,QAEpCiF,EAAWE,YAAYxC,SAASyC,eAAe3I,EAAIuD,cAEhD,CACL,MAAMV,EAAOM,EACPhF,EAA6B,qBAAd6B,EAAI6C,GAAwB,GAAK7C,EAAI6C,GAC1D2F,EAAWI,aAAazF,EAAWhF,EACrC,CAGJqK,EAAWI,aAAaxK,EAAkB,QACtCgK,EAAQS,MAAK,CAACC,EAAavH,KAC7BgH,EAAgBhH,EACTiH,EAAWO,YAAYD,MAE9BV,EAAQlB,OAAOqB,EAAe,GAE9BD,EAAQnH,KAAKqH,EACf,IAGJJ,EAAQlH,SAASlB,IAAG,IAAAgJ,EAAA,OAAmB,QAAnBA,EAAKhJ,EAAIiJ,kBAAU,IAAAD,OAAA,EAAdA,EAAgBE,YAAYlJ,EAAI,IACzDsI,EAAQpH,SAASlB,GAAQ+H,EAAYW,YAAY1I,KAC1C,CACLoI,UACAE,UACD,EAECa,EAAmBA,CAAC5I,EAASqC,KAC/B,MAAMwG,EAAalD,SAASmD,qBAAqB9I,GAAS,GAC1D,IAAK6I,EACH,OAEF,MAAME,EAAwBF,EAAWG,aAAanL,GAChDoL,EAAmBF,EAAwBA,EAAsBG,MAAM,KAAO,GAC9EC,EAAqB,IAAIF,GACzBG,EAAgBvM,OAAO6C,KAAK2C,GAClC,IAAK,MAAMO,KAAawG,EAAe,CACrC,MAAMxL,EAAQyE,EAAWO,IAAc,GACnCiG,EAAWG,aAAapG,KAAehF,GACzCiL,EAAWR,aAAazF,EAAWhF,IAEQ,IAAzCqL,EAAiBpJ,QAAQ+C,IAC3BqG,EAAiBrI,KAAKgC,GAExB,MAAMyG,EAAcF,EAAmBtJ,QAAQ+C,IAC1B,IAAjByG,GACFF,EAAmBxC,OAAO0C,EAAa,EAE3C,CACA,IAAK,IAAIpL,EAAIkL,EAAmBjL,OAAS,EAAGD,GAAK,EAAGA,GAAK,EACvD4K,EAAWS,gBAAgBH,EAAmBlL,IAE5CgL,EAAiB/K,SAAWiL,EAAmBjL,OACjD2K,EAAWS,gBAAgBzL,GAClBgL,EAAWG,aAAanL,KAAsBuL,EAAcxK,KAAK,MAC1EiK,EAAWR,aAAaxK,EAAkBuL,EAAcxK,KAAK,KAC/D,EAQE2K,EAAmBA,CAACC,EAAUC,KAChC,MAAM,QACJnF,EAAO,eACPC,EAAc,eACdC,EAAc,SACdI,EAAQ,SACRC,EAAQ,aACRJ,EAAY,oBACZiF,EAAmB,WACnB5E,EAAU,UACVJ,EAAS,MACTjB,EAAK,gBACLC,GACE8F,EACJZ,EAAiB,OAAmBrE,GACpCqE,EAAiB,OAAmBpE,GArBpBmF,EAAClG,EAAOpB,KACH,qBAAVoB,GAAyBkC,SAASlC,QAAUA,IACrDkC,SAASlC,MAAQxC,EAAawC,IAEhCmF,EAAiB,QAAqBvG,EAAW,EAkBjDsH,CAAYlG,EAAOC,GACnB,MAAMkG,EAAa,CACjBtF,QAASiD,EAAW,OAAmBjD,GACvCM,SAAU2C,EAAW,OAAmB3C,GACxCC,SAAU0C,EAAW,OAAmB1C,GACxCJ,aAAc8C,EAAW,WAA2B9C,GACpDK,WAAYyC,EAAW,SAAuBzC,GAC9CJ,UAAW6C,EAAW,QAAqB7C,IAEvCmF,EAAY,CAAC,EACbC,EAAc,CAAC,EACrBjN,OAAO6C,KAAKkK,GAAYjJ,SAAS3B,IAC/B,MAAM,QAAE+I,EAAO,QAAEF,GAAY+B,EAAW5K,GACpC+I,EAAQ7J,SACV2L,EAAU7K,GAAW+I,GAEnBF,EAAQ3J,SACV4L,EAAY9K,GAAW4K,EAAW5K,GAAS6I,QAC7C,IAEE4B,GACFA,IAEFC,EAAoBF,EAAUK,EAAWC,EAAY,EAEnDC,EAAkB,KAgBlBC,EAf6BR,IAC3BO,GACFE,qBAAqBF,GAEnBP,EAASU,MACXH,EAAkBI,uBAAsB,KACtCZ,EAAiBC,GAAU,KACzBO,EAAkB,IAAI,GACtB,KAGJR,EAAiBC,GACjBO,EAAkB,KACpB,EAKEK,GAAmB,cAAcC,EAAAA,UAAWvE,WAAAA,GAAA,SAAA5D,YAAA+D,EAAAA,EAAAA,GAAA,iBACnC,EAAK,CAChBqE,qBAAAA,CAAsBC,GACpB,OAAQC,IAAaD,EAAWnE,KAAKjI,MACvC,CACAsM,kBAAAA,GACErE,KAAKsE,YACP,CACAC,oBAAAA,GACE,MAAM,gBAAErE,GAAoBF,KAAKjI,MAAM4H,QACvCO,EAAgBI,OAAON,MACvBA,KAAKsE,YACP,CACAA,UAAAA,GACE,MAAM,gBAAEpE,EAAe,UAAEJ,GAAcE,KAAKjI,MAAM4H,QAClD,IAAII,EAAc,KAClB,MAAMyE,GAlbgB5M,EAmbpBsI,EAAgBC,MAAMrH,KAAKuH,IACzB,MAAMtI,EAAQ,IAAKsI,EAAStI,OAE5B,cADOA,EAAM4H,QACN5H,CAAK,IAtbe,CACjCmG,QAASjF,EAAwB,CAAC,QAAoBrB,GACtDuG,eAAgBxF,EAA2B,iBAA6Bf,GACxEkM,MAAOnM,EAAqBC,EAAWF,GACvCuF,OAAQtF,EAAqBC,EAAWF,GACxC0G,eAAgBzF,EAA2B,iBAA6Bf,GACxE4G,SAAU7E,EACR,OACA,CAAC,MAAiB,QAClB/B,GAEF6G,SAAU9E,EACR,OACA,CACE,OACA,UACA,aACA,WACA,YAEF/B,GAEFyG,aAAc1E,EAAqB,WAA2B,CAAC,aAA+B/B,GAC9F0L,oBAAqB5K,EAAuBd,GAC5C8G,WAAY/E,EACV,SACA,CAAC,MAAiB,aAClB/B,GAEF0G,UAAW3E,EAAqB,QAAqB,CAAC,WAA2B/B,GACjFyF,MAAOlF,EAAsBP,GAC7B0F,gBAAiB3E,EAA2B,kBAA+Bf,GAC3E2G,kBAAmB7D,EAAwB9C,EAAWF,KAhC9BE,MAyblB8I,EAAed,UACjBgE,EAAeY,GACNvG,IACT8B,EAAc9B,EAAeuG,IAE/B1E,EAAUC,EACZ,CAIA0E,IAAAA,GACE,GAAIzE,KAAK0E,SACP,OAEF1E,KAAK0E,UAAW,EAChB,MAAM,gBAAExE,GAAoBF,KAAKjI,MAAM4H,QACvCO,EAAgBE,IAAIJ,MACpBA,KAAKsE,YACP,CACAtD,MAAAA,GAEE,OADAhB,KAAKyE,OACE,IACT,GAIEE,IAAMC,EAAG,cAAcC,EAAAA,UAMzBX,qBAAAA,CAAsBC,GACpB,OAAQW,IAAYrJ,EAAQuE,KAAKjI,MAAO,cAAe0D,EAAQ0I,EAAW,cAC5E,CACAY,wBAAAA,CAAyBC,EAAOC,GAC9B,IAAKA,EACH,OAAO,KAET,OAAQD,EAAM3O,MACZ,IAAK,SACL,IAAK,WACH,MAAO,CACLsG,UAAWsI,GAEf,IAAK,QACH,MAAO,CACLrI,QAASqI,GAEb,QACE,MAAM,IAAItP,MAAM,IAAD+D,OACTsL,EAAM3O,KAAI,uGAGtB,CACA6O,wBAAAA,CAAyBF,EAAOG,EAAmBC,EAAeH,GAChE,MAAO,IACFE,EACH,CAACH,EAAM3O,MAAO,IACT8O,EAAkBH,EAAM3O,OAAS,GACpC,IACK+O,KACApF,KAAK+E,yBAAyBC,EAAOC,KAIhD,CACAI,qBAAAA,CAAsBL,EAAOM,EAAUF,EAAeH,GACpD,OAAQD,EAAM3O,MACZ,IAAK,QACH,MAAO,IACFiP,EACH,CAACN,EAAM3O,MAAO4O,EACd3H,gBAAiB,IAAK8H,IAE1B,IAAK,OACH,MAAO,IACFE,EACHnH,eAAgB,IAAKiH,IAEzB,IAAK,OACH,MAAO,IACFE,EACHlH,eAAgB,IAAKgH,IAEzB,QACE,MAAO,IACFE,EACH,CAACN,EAAM3O,MAAO,IAAK+O,IAG3B,CACAG,2BAAAA,CAA4BJ,EAAmBG,GAC7C,IAAIE,EAAoB,IAAKF,GAO7B,OANA7O,OAAO6C,KAAK6L,GAAmB5K,SAASkL,IACtCD,EAAoB,IACfA,EACH,CAACC,GAAiBN,EAAkBM,GACrC,IAEID,CACT,CACAE,qBAAAA,CAAsBV,EAAOC,GAW3B,OAVAU,IACEnP,EAAgB0L,MAAMnM,GAASiP,EAAM3O,OAASN,IACxB,oBAAfiP,EAAM3O,KAAsB,oIAAH,uBAAAqD,OAAgKlD,EAAgBgC,KAC9M,MACD,qDAAAkB,OAAoDsL,EAAM3O,KAAI,uDAEjEsP,KACGV,GAA4C,kBAAnBA,GAA+B3M,MAAMC,QAAQ0M,KAAoBA,EAAe/C,MAAM0D,GAAuC,kBAAhBA,IAAyB,0CAAAlM,OACtHsL,EAAM3O,KAAI,0DAAAqD,OAAyDsL,EAAM3O,KAAI,WAAAqD,OAAYsL,EAAM3O,KAAI,gDAExI,CACT,CACAwP,kBAAAA,CAAmB3E,EAAUoE,GAC3B,IAAIH,EAAoB,CAAC,EAqCzB,OApCAW,EAAAA,SAAgBvL,QAAQ2G,GAAW8D,IACjC,IAAKA,IAAUA,EAAMjN,MACnB,OAEF,MAAQmJ,SAAU+D,KAAmBc,GAAef,EAAMjN,MACpDqN,EAAgB3O,OAAO6C,KAAKyM,GAAY3O,QAAO,CAACsE,EAAKnE,KACzDmE,EAAIxE,EAAaK,IAAQA,GAAOwO,EAAWxO,GACpCmE,IACN,CAAC,GACJ,IAAI,KAAErF,GAAS2O,EAMf,OALoB,kBAAT3O,EACTA,EAAOA,EAAKkH,WAEZyC,KAAK0F,sBAAsBV,EAAOC,GAE5B5O,GACN,IAAK,yBACHiP,EAAWtF,KAAK6F,mBAAmBZ,EAAgBK,GACnD,MACF,IAAK,OACL,IAAK,OACL,IAAK,WACL,IAAK,SACL,IAAK,QACHH,EAAoBnF,KAAKkF,yBACvBF,EACAG,EACAC,EACAH,GAEF,MACF,QACEK,EAAWtF,KAAKqF,sBAAsBL,EAAOM,EAAUF,EAAeH,GAE1E,IAEKjF,KAAKuF,4BAA4BJ,EAAmBG,EAC7D,CACAtE,MAAAA,GACE,MAAM,SAAEE,KAAanJ,GAAUiI,KAAKjI,MACpC,IAAIuN,EAAW,IAAKvN,IAChB,WAAEgJ,GAAehJ,EAIrB,GAHImJ,IACFoE,EAAWtF,KAAK6F,mBAAmB3E,EAAUoE,IAE3CvE,KAAgBA,aAAsBtB,GAAa,CAErDsB,EAAa,IAAItB,EADJsB,EACoBpB,SAAS,UACnC2F,EAASvE,UAClB,CACA,OAAOA,EAA6B+E,EAAAA,cAAqB9B,GAAkB,IAAKsB,EAAU3F,QAASoB,EAAWvJ,QAA2BsO,EAAAA,cAAqBtF,EAAQwF,SAAU,MAAOrG,GAA4BmG,EAAAA,cAAqB9B,GAAkB,IAAKsB,EAAU3F,aAC3Q,IACDE,EAAAA,EAAAA,GAAA+E,EAAA,eA9IuB,CACpBd,OAAO,EACPlI,yBAAyB,EACzB2C,mBAAmB,IACpBqG,E,WC5oBH,IAAIqB,EAAoC,qBAAZC,QACxBC,EAAwB,oBAARC,IAChBC,EAAwB,oBAARC,IAChBC,EAAwC,oBAAhBC,eAAgCA,YAAYC,OAIxE,SAASC,EAAMvR,EAAGC,GAEhB,GAAID,IAAMC,EAAG,OAAO,EAEpB,GAAID,GAAKC,GAAiB,iBAALD,GAA6B,iBAALC,EAAe,CAC1D,GAAID,EAAEuK,cAAgBtK,EAAEsK,YAAa,OAAO,EAE5C,IAAI5H,EAAQD,EAAGyB,EA6BXqN,EA5BJ,GAAIrO,MAAMC,QAAQpD,GAAI,CAEpB,IADA2C,EAAS3C,EAAE2C,SACG1C,EAAE0C,OAAQ,OAAO,EAC/B,IAAKD,EAAIC,EAAgB,IAARD,KACf,IAAK6O,EAAMvR,EAAE0C,GAAIzC,EAAEyC,IAAK,OAAO,EACjC,OAAO,CACT,CAuBA,GAAIsO,GAAWhR,aAAaiR,KAAShR,aAAagR,IAAM,CACtD,GAAIjR,EAAEyR,OAASxR,EAAEwR,KAAM,OAAO,EAE9B,IADAD,EAAKxR,EAAEgC,YACEU,EAAI8O,EAAGE,QAAQC,UACjB1R,EAAE2R,IAAIlP,EAAEL,MAAM,IAAK,OAAO,EAEjC,IADAmP,EAAKxR,EAAEgC,YACEU,EAAI8O,EAAGE,QAAQC,UACjBJ,EAAM7O,EAAEL,MAAM,GAAIpC,EAAE+K,IAAItI,EAAEL,MAAM,KAAM,OAAO,EACpD,OAAO,CACT,CAEA,GAAI6O,GAAWlR,aAAamR,KAASlR,aAAakR,IAAM,CACtD,GAAInR,EAAEyR,OAASxR,EAAEwR,KAAM,OAAO,EAE9B,IADAD,EAAKxR,EAAEgC,YACEU,EAAI8O,EAAGE,QAAQC,UACjB1R,EAAE2R,IAAIlP,EAAEL,MAAM,IAAK,OAAO,EACjC,OAAO,CACT,CAGA,GAAI+O,GAAkBC,YAAYC,OAAOtR,IAAMqR,YAAYC,OAAOrR,GAAI,CAEpE,IADA0C,EAAS3C,EAAE2C,SACG1C,EAAE0C,OAAQ,OAAO,EAC/B,IAAKD,EAAIC,EAAgB,IAARD,KACf,GAAI1C,EAAE0C,KAAOzC,EAAEyC,GAAI,OAAO,EAC5B,OAAO,CACT,CAEA,GAAI1C,EAAEuK,cAAgBsH,OAAQ,OAAO7R,EAAE8R,SAAW7R,EAAE6R,QAAU9R,EAAE+R,QAAU9R,EAAE8R,MAK5E,GAAI/R,EAAEgS,UAAY1Q,OAAOuB,UAAUmP,SAAgC,oBAAdhS,EAAEgS,SAA+C,oBAAd/R,EAAE+R,QAAwB,OAAOhS,EAAEgS,YAAc/R,EAAE+R,UAC3I,GAAIhS,EAAEoI,WAAa9G,OAAOuB,UAAUuF,UAAkC,oBAAfpI,EAAEoI,UAAiD,oBAAfnI,EAAEmI,SAAyB,OAAOpI,EAAEoI,aAAenI,EAAEmI,WAKhJ,IADAzF,GADAwB,EAAO7C,OAAO6C,KAAKnE,IACL2C,UACCrB,OAAO6C,KAAKlE,GAAG0C,OAAQ,OAAO,EAE7C,IAAKD,EAAIC,EAAgB,IAARD,KACf,IAAKpB,OAAOuB,UAAUC,eAAeC,KAAK9C,EAAGkE,EAAKzB,IAAK,OAAO,EAKhE,GAAIoO,GAAkB9Q,aAAa+Q,QAAS,OAAO,EAGnD,IAAKrO,EAAIC,EAAgB,IAARD,KACf,IAAiB,WAAZyB,EAAKzB,IAA+B,QAAZyB,EAAKzB,IAA4B,QAAZyB,EAAKzB,KAAiB1C,EAAEiS,YAarEV,EAAMvR,EAAEmE,EAAKzB,IAAKzC,EAAEkE,EAAKzB,KAAM,OAAO,EAK7C,OAAO,CACT,CAEA,OAAO1C,IAAMA,GAAKC,IAAMA,CAC1B,CAGAL,EAAOC,QAAU,SAAiBG,EAAGC,GACnC,IACE,OAAOsR,EAAMvR,EAAGC,EAClB,CAAE,MAAOK,GACP,IAAMA,EAAM4R,SAAW,IAAIC,MAAM,oBAO/B,OADAvN,QAAQC,KAAK,mDACN,EAGT,MAAMvE,CACR,CACF,C,WCxIAV,EAAOC,QAAU,SAAsBuS,EAAMC,EAAMC,EAASC,GAC1D,IAAIC,EAAMF,EAAUA,EAAQvP,KAAKwP,EAAgBH,EAAMC,QAAQ,EAE/D,QAAY,IAARG,EACF,QAASA,EAGX,GAAIJ,IAASC,EACX,OAAO,EAGT,GAAoB,kBAATD,IAAsBA,GAAwB,kBAATC,IAAsBA,EACpE,OAAO,EAGT,IAAII,EAAQnR,OAAO6C,KAAKiO,GACpBM,EAAQpR,OAAO6C,KAAKkO,GAExB,GAAII,EAAM9P,SAAW+P,EAAM/P,OACzB,OAAO,EAMT,IAHA,IAAIgQ,EAAkBrR,OAAOuB,UAAUC,eAAe8P,KAAKP,GAGlDQ,EAAM,EAAGA,EAAMJ,EAAM9P,OAAQkQ,IAAO,CAC3C,IAAIzQ,EAAMqQ,EAAMI,GAEhB,IAAKF,EAAgBvQ,GACnB,OAAO,EAGT,IAAI0Q,EAASV,EAAKhQ,GACd2Q,EAASV,EAAKjQ,GAIlB,IAAY,KAFZoQ,EAAMF,EAAUA,EAAQvP,KAAKwP,EAAgBO,EAAQC,EAAQ3Q,QAAO,SAEtC,IAARoQ,GAAkBM,IAAWC,EACjD,OAAO,CAEX,CAEA,OAAO,CACT,C,8DCxCA,MAAMC,GAAsBC,EAAAA,EAAAA,eAAc,CACtCC,mBAAqBC,GAAMA,EAC3BC,UAAU,EACVC,cAAe,UCNbC,GAAgBL,EAAAA,EAAAA,eAAc,CAAC,G,wBCArC,MAAMM,GAAcN,EAAAA,EAAAA,eAAc,CAAEO,QAAQ,ICCtCC,EAAe/M,GAAQA,EAAI/F,QAAQ,kBAAmB,SAAS0D,cCA/DqP,EAA+B,QAAUD,EADjB,kB,cCA9B,MAAQE,SAAUC,EAAWC,OAAQC,IAAoBC,EAAAA,EAAAA,GAAoBC,gBAAgB,GCF7F,SAASC,EAAYC,GACjB,OAAQA,GACW,kBAARA,GACP5S,OAAOuB,UAAUC,eAAeC,KAAKmR,EAAK,UAClD,CCDA,SAASC,EAAeC,GACpB,MAAoB,kBAANA,GAAkBjR,MAAMC,QAAQgR,EAClD,CCLA,SAASC,EAAoBD,GACzB,OAAc,OAANA,GACS,kBAANA,GACY,oBAAZA,EAAEE,KACjB,CCJA,MAAMC,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,GCLpC,SAASE,EAAsB7R,GAC3B,OAAQyR,EAAoBzR,EAAM8R,UAC9BF,EAAazH,MAAMnM,GAASuT,EAAevR,EAAMhC,KACzD,CACA,SAAS+T,EAAc/R,GACnB,OAAOgS,QAAQH,EAAsB7R,IAAUA,EAAMiS,SACzD,CCNA,SAASC,EAAuBlS,GAC5B,MAAM,QAAEmS,EAAO,QAAEL,GCFrB,SAAgC9R,EAAO4H,GACnC,GAAIiK,EAAsB7R,GAAQ,CAC9B,MAAM,QAAEmS,EAAO,QAAEL,GAAY9R,EAC7B,MAAO,CACHmS,SAAqB,IAAZA,GAAqBZ,EAAeY,GACvCA,OACAxU,EACNmU,QAASP,EAAeO,GAAWA,OAAUnU,EAErD,CACA,OAAyB,IAAlBqC,EAAMoS,QAAoBxK,EAAU,CAAC,CAChD,CDTiCyK,CAAuBrS,GAAOsS,EAAAA,EAAAA,YAAW5B,IACtE,OAAO6B,EAAAA,EAAAA,UAAQ,KAAM,CAAGJ,UAASL,aAAY,CAACU,EAA0BL,GAAUK,EAA0BV,IAChH,CACA,SAASU,EAA0BC,GAC/B,OAAOlS,MAAMC,QAAQiS,GAAQA,EAAKhS,KAAK,KAAOgS,CAClD,CEVA,MAAMC,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,EAC5B,IAAK,MAAM5T,MAAOkT,EACdU,EAAmB5T,IAAO,CACtB6T,UAAYrT,GAAU0S,EAAalT,IAAK2K,MAAMnM,KAAWgC,EAAMhC,M,wBClBvE,MAAMsV,GAA2BjD,EAAAA,EAAAA,eAAc,CAAC,GCL1CkD,EAAwBC,OAAOC,IAAI,yBCuBzC,SAASC,EAAqBnU,GAAoF,IAAnF,kBAAEoU,EAAiB,oBAAEC,EAAmB,UAAEC,EAAS,eAAEC,EAAc,UAAEhL,GAAYvJ,EAC5GoU,GCtBJ,SAAsBI,GAClB,IAAK,MAAMvU,KAAOuU,EACdX,EAAmB5T,GAAO,IACnB4T,EAAmB5T,MACnBuU,EAASvU,GAGxB,CDeyBwU,CAAaL,GA2ClC,MAAMM,GAAsBC,EAAAA,EAAAA,aA1C5B,SAAyBlU,EAAOmU,GAK5B,IAAIC,EACJ,MAAMC,EAAiB,KAChB/B,EAAAA,EAAAA,YAAWlC,MACXpQ,EACHsU,SAAUC,EAAYvU,KAEpB,SAAEwQ,GAAa6D,EACfzM,EAAUsK,EAAuBlS,GACjCwU,EAAcV,EAAe9T,EAAOwQ,GAC1C,IAAKA,GAAYiE,EAAAA,EAAW,CAOxB7M,EAAQ8M,cErCpB,SAA0B5L,EAAW0L,EAAaxU,EAAO4T,GACrD,MAAQc,cAAeC,IAAWrC,EAAAA,EAAAA,YAAW5B,GACvCkE,GAActC,EAAAA,EAAAA,YAAW3B,GACzBkE,GAAkBvC,EAAAA,EAAAA,YAAWwC,EAAAA,GAC7BC,GAAsBzC,EAAAA,EAAAA,YAAWlC,GAAqBK,cACtDuE,GAAmBC,EAAAA,EAAAA,UAIzBrB,EAAsBA,GAAuBgB,EAAYM,UACpDF,EAAiB/T,SAAW2S,IAC7BoB,EAAiB/T,QAAU2S,EAAoB9K,EAAW,CACtD0L,cACAG,SACA3U,QACA6U,kBACAM,wBAAuBN,IACW,IAA5BA,EAAgB1C,QAEtB4C,yBAGR,MAAML,EAAgBM,EAAiB/T,SACvCmU,EAAAA,EAAAA,qBAAmB,KACfV,GAAiBA,EAAcW,OAAOrV,EAAO6U,EAAgB,IAMjE,MAAMS,GAAeL,EAAAA,EAAAA,QAAOjD,QAAQhS,EAAM8Q,KAAkCvJ,OAAOgO,kBAgCnF,OA/BAC,EAAAA,EAAAA,IAA0B,KACjBd,IAEL1D,EAAUyE,WAAWf,EAAczL,QAW/BqM,EAAarU,SAAWyT,EAAcgB,gBACtChB,EAAcgB,eAAeC,iBACjC,KAEJC,EAAAA,EAAAA,YAAU,KACDlB,IAELA,EAAcmB,kBACTP,EAAarU,SAAWyT,EAAcgB,gBACvChB,EAAcgB,eAAeC,iBAE7BL,EAAarU,UACbqU,EAAarU,SAAU,EAEvBsG,OAAOgO,iBAAkB,GAC7B,IAEGb,CACX,CF1BoCoB,CAAiBhN,EAAW0L,EAAaH,EAAgBT,GAKjF,MAAMmC,GAA2BzD,EAAAA,EAAAA,YAAWgB,GACtC0C,GAAW1D,EAAAA,EAAAA,YAAW3B,GAAaC,OACrChJ,EAAQ8M,gBACRN,EAAgBxM,EAAQ8M,cAAcV,aAEtCK,EAAgB2B,EAAUrC,EAAmBoC,GAErD,CAKA,OAAQ/Q,EAAAA,cAAoB0L,EAAcxH,SAAU,CAAEzJ,MAAOmI,GACzDwM,GAAiBxM,EAAQ8M,cAAiB1P,EAAAA,cAAoBoP,EAAe,CAAEM,cAAe9M,EAAQ8M,iBAAkBL,IAAqB,KAC7IR,EAAU/K,EAAW9I,EG1DjC,SAAsBwU,EAAaE,EAAeP,GAC9C,OAAO8B,EAAAA,EAAAA,cAAa3N,IAChBA,GAAYkM,EAAY0B,OAAS1B,EAAY0B,MAAM5N,GAC/CoM,IACApM,EACMoM,EAAcwB,MAAM5N,GACpBoM,EAAcyB,WAEpBhC,IAC2B,oBAAhBA,EACPA,EAAY7L,GAEP+I,EAAY8C,KACjBA,EAAYlT,QAAUqH,GAE9B,GAOJ,CAACoM,GACL,CHmCwC0B,CAAa5B,EAAa5M,EAAQ8M,cAAeP,GAAcK,EAAahE,EAAU5I,EAAQ8M,eAClI,IAGA,OADAT,EAAoBV,GAAyBzK,EACtCmL,CACX,CACA,SAASM,EAAW1N,GAAe,IAAd,SAAEyN,GAAUzN,EAC7B,MAAMwP,GAAgB/D,EAAAA,EAAAA,YAAWgE,EAAAA,GAAoBC,GACrD,OAAOF,QAA8B1Y,IAAb2W,EAClB+B,EAAgB,IAAM/B,EACtBA,CACV,CI5DA,SAASkC,EAAkBC,GACvB,SAASC,EAAO5N,GACZ,OAAO4K,EAAsB+C,EAAa3N,EADQ/E,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,GAE1D,CACA,GAAqB,qBAAV4S,MACP,OAAOD,EAMX,MAAME,EAAiB,IAAIvI,IAC3B,OAAO,IAAIsI,MAAMD,EAAQ,CAMrBtO,IAAKA,CAACyO,EAASrX,KAINoX,EAAe5H,IAAIxP,IACpBoX,EAAeE,IAAItX,EAAKkX,EAAOlX,IAE5BoX,EAAexO,IAAI5I,KAGtC,CCxCA,MAAMuX,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAelO,GACpB,MAKqB,kBAAdA,IAIHA,EAAUvF,SAAS,SAOvBwT,EAAqBrV,QAAQoH,IAAc,GAIvC,QAAQmO,KAAKnO,GAIrB,CC3BA,MAAMoO,EAAkB,CAAC,ECGzB,MAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAI7I,IAAI4I,GCtB/B,SAASE,EAAoB7X,EAAGD,GAAwB,IAAtB,OAAE4T,EAAM,SAAEmB,GAAU/U,EAClD,OAAQ6X,EAAepI,IAAIxP,IACvBA,EAAI8X,WAAW,YACbnE,QAAuBxV,IAAb2W,OACL4C,EAAgB1X,IAAgB,YAARA,EACvC,CCRA,MAAM+X,EAAiB9X,GAAUuS,QAAQvS,GAASA,EAAM+X,aCElDC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBX,EAAmBpX,OCRzC,MAAMgY,EAAyBC,GAAWxY,GAAuB,kBAARA,GAAoBA,EAAI8X,WAAWU,GACtFC,EAAoBF,EAAsB,MAC1CG,EAAwBH,EAAsB,UAC9CI,EAAsB1Y,KACAyY,EAAsBzY,IAIvC2Y,EAAuBnB,KAAKxX,EAAMsL,MAAM,MAAM,GAAGsN,QAEtDD,EAAyB,iFCPzBE,EAAiBA,CAAC7Y,EAAOnB,IACpBA,GAAyB,kBAAVmB,EAChBnB,EAAKia,UAAU9Y,GACfA,ECNJ+Y,EAAQA,CAACC,EAAKC,EAAKlH,IACjBA,EAAIkH,EACGA,EACPlH,EAAIiH,EACGA,EACJjH,ECHLmH,EAAS,CACX1B,KAAOzF,GAAmB,kBAANA,EACpBoH,MAAOC,WACPN,UAAY/G,GAAMA,GAEhBsH,EAAQ,IACPH,EACHJ,UAAY/G,GAAMgH,EAAM,EAAG,EAAGhH,IAE5BuH,EAAQ,IACPJ,EACHlV,QAAS,GCPPuV,EAAYxH,GAAMyH,KAAKC,MAAU,IAAJ1H,GAAc,IAC3C2H,EAAa,uBACbC,EAAa,8FACbC,GAAmB,+FACzB,SAASC,GAAS9H,GACd,MAAoB,kBAANA,CAClB,CCVA,MAAM+H,GAAkBC,IAAI,CACxBvC,KAAOzF,GAAM8H,GAAS9H,IAAMA,EAAEiI,SAASD,IAAiC,IAAxBhI,EAAEzG,MAAM,KAAKhL,OAC7D6Y,MAAOC,WACPN,UAAY/G,GAAC,GAAA7P,OAAQ6P,GAAC7P,OAAG6X,KAEvBE,GAAUH,GAAe,OACzBI,GAAUJ,GAAe,KACzBK,GAAKL,GAAe,MACpBM,GAAKN,GAAe,MACpBO,GAAKP,GAAe,MACpBQ,GAAqB,IACpBJ,GACHf,MAAQpH,GAAMmI,GAAQf,MAAMpH,GAAK,IACjC+G,UAAY/G,GAAMmI,GAAQpB,UAAc,IAAJ/G,ICblCwI,GAAM,IACLrB,EACHJ,UAAWU,KAAKC,OCAde,GAAmB,CAErBC,YAAaN,GACbO,eAAgBP,GAChBQ,iBAAkBR,GAClBS,kBAAmBT,GACnBU,gBAAiBV,GACjBW,aAAcX,GACdY,OAAQZ,GACRa,oBAAqBb,GACrBc,qBAAsBd,GACtBe,wBAAyBf,GACzBgB,uBAAwBhB,GAExBiB,MAAOjB,GACPkB,SAAUlB,GACVmB,OAAQnB,GACRoB,UAAWpB,GACX/K,KAAM+K,GACNqB,IAAKrB,GACLsB,MAAOtB,GACPuB,OAAQvB,GACRwB,KAAMxB,GAENyB,QAASzB,GACT0B,WAAY1B,GACZ2B,aAAc3B,GACd4B,cAAe5B,GACf6B,YAAa7B,GACb8B,OAAQ9B,GACR+B,UAAW/B,GACXgC,YAAahC,GACbiC,aAAcjC,GACdkC,WAAYlC,GAEZmC,OAAQrC,GACRsC,QAAStC,GACTuC,QAASvC,GACTwC,QAASxC,GACTX,MAAK,EACLoD,OAAQpD,EACRqD,OAAQrD,EACRsD,OAAQtD,EACRuD,KAAM5C,GACN6C,MAAO7C,GACP8C,MAAO9C,GACP+C,SAAU7C,GACV8C,WAAY9C,GACZ+C,WAAY/C,GACZgD,WAAYhD,GACZlC,EAAGkC,GACHjC,EAAGiC,GACHhC,EAAGgC,GACHiD,YAAajD,GACb/B,qBAAsB+B,GACtBkD,QAAShE,EACTiE,QAAShD,GACTiD,QAASjD,GACTkD,QAASrD,GAETsD,OAAQlD,GAERmD,YAAarE,EACbsE,cAAetE,EACfuE,WAAYrD,IC9DhB,SAASsD,GAAgB7Q,EAAO8Q,EAAcC,EAASC,GACnD,MAAM,MAAErW,EAAK,KAAEsW,EAAI,UAAEnF,EAAS,gBAAEoF,GAAoBlR,EAEpD,IAAImR,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,MAAMte,KAAO+d,EAAc,CAC5B,MAAM9d,EAAQ8d,EAAa/d,GAI3B,GAAIyY,EAAkBzY,GAAM,CACxBke,EAAKle,GAAOC,EACZ,QACJ,CAEA,MAAMse,EAAY9D,GAAiBza,GAC7Bwe,EAAc1F,EAAe7Y,EAAOse,GAC1C,GAAI3G,EAAepI,IAAIxP,GAAM,CAKzB,GAHAoe,GAAe,EACfrF,EAAU/Y,GAAOwe,GAEZF,EACD,SAEAre,KAAWse,EAAUta,SAAW,KAChCqa,GAAkB,EAC1B,MACSte,EAAI8X,WAAW,WAEpBuG,GAAqB,EACrBF,EAAgBne,GAAOwe,GAGvB5W,EAAM5H,GAAOwe,CAErB,CAiBA,GAhBKT,EAAahF,YACVqF,GAAgBH,EAChBrW,EAAMmR,UTtClB,SAAwBA,EAAShZ,EAAqE0e,EAAoBR,GAAmB,IAA1G,2BAAES,GAA6B,EAAI,mBAAEC,GAAqB,GAAO5e,EAE5F6e,EAAkB,GAKtB,IAAK,IAAIte,EAAI,EAAGA,EAAIgY,EAAehY,IAAK,CACpC,MAAMN,EAAM2X,EAAmBrX,GAC/B,QAAuBnC,IAAnB4a,EAAU/Y,GAAoB,CAC9B,MAAM6e,EAAgB5G,EAAejY,IAAQA,EAC7C4e,GAAmB,GAAJzc,OAAO0c,EAAa,KAAA1c,OAAI4W,EAAU/Y,GAAI,KACzD,CACJ,CAaA,OAZI0e,IAA+B3F,EAAUX,IACzCwG,GAAmB,iBAEvBA,EAAkBA,EAAgB/F,OAG9BoF,EACAW,EAAkBX,EAAkBlF,EAAW0F,EAAqB,GAAKG,GAEpED,GAAsBF,IAC3BG,EAAkB,QAEfA,CACX,CSW8BE,CAAe7R,EAAM8L,UAAWiF,EAASM,EAAiBL,GAEvErW,EAAMmR,YAKXnR,EAAMmR,UAAY,SAOtBsF,EAAoB,CACpB,MAAM,QAAEd,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAOU,EAC3DvW,EAAMuW,gBAAkB,GAAHhc,OAAMob,EAAO,KAAApb,OAAIqb,EAAO,KAAArb,OAAIsb,EACrD,CACJ,CCvEA,MAAMsB,GAAwBA,KAAA,CAC1BnX,MAAO,CAAC,EACRmR,UAAW,CAAC,EACZoF,gBAAiB,CAAC,EAClBD,KAAM,CAAC,ICEX,SAASc,GAAkBC,EAAQvP,EAAQlP,GACvC,IAAK,MAAMR,KAAO0P,EACTqI,EAAcrI,EAAO1P,KAAU6X,EAAoB7X,EAAKQ,KACzDye,EAAOjf,GAAO0P,EAAO1P,GAGjC,CAQA,SAASkf,GAAS1e,EAAOwU,EAAahE,GAClC,MACMpJ,EAAQ,CAAC,EAMf,OAFAoX,GAAkBpX,EALApH,EAAMoH,OAAS,CAAC,EAKEpH,GACpCtB,OAAOigB,OAAOvX,EAdlB,SAA+B7H,EAAwBiV,EAAahE,GAAU,IAA9C,kBAAEiN,GAAmBle,EACjD,OAAOgT,EAAAA,EAAAA,UAAQ,KACX,MAAM9F,EAAQ8R,KAEd,OADAjB,GAAgB7Q,EAAO+H,EAAa,CAAE0J,4BAA6B1N,GAAYiN,GACxE/e,OAAOigB,OAAO,CAAC,EAAGlS,EAAMiR,KAAMjR,EAAMrF,MAAM,GAClD,CAACoN,GACR,CAQyBoK,CAAuB5e,EAAOwU,EAAahE,IACzDpJ,CACX,CACA,SAASyX,GAAa7e,EAAOwU,EAAahE,GAEtC,MAAMsO,EAAY,CAAC,EACb1X,EAAQsX,GAAS1e,EAAOwU,EAAahE,GAoB3C,OAnBIxQ,EAAM6S,OAA+B,IAAvB7S,EAAM+e,eAEpBD,EAAUE,WAAY,EAEtB5X,EAAM6X,WACF7X,EAAM8X,iBACF9X,EAAM+X,mBACF,OAEZ/X,EAAMgY,aACa,IAAfpf,EAAM6S,KACA,OAAM,OAAAlR,OACgB,MAAf3B,EAAM6S,KAAe,IAAM,WAEzBlV,IAAnBqC,EAAMqf,WACLrf,EAAMsf,OAAStf,EAAMuf,YAAcvf,EAAMwf,YAC1CV,EAAUO,SAAW,GAEzBP,EAAU1X,MAAQA,EACX0X,CACX,CChDA,MAAMW,GAAmB,IAAIlR,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAASmR,GAAkBlgB,GACvB,OAAQA,EAAI8X,WAAW,UAClB9X,EAAI8X,WAAW,SAAmB,cAAR9X,GAC3BA,EAAI8X,WAAW,WACf9X,EAAI8X,WAAW,UACf9X,EAAI8X,WAAW,UACf9X,EAAI8X,WAAW,aACfmI,GAAiBzQ,IAAIxP,EAC7B,CCpDA,IAAImgB,GAAiBngB,IAASkgB,GAAkBlgB,GAoBhD,KAnBiCogB,GAyBLC,QAAQ,0BAA0Bpc,WArB1Dkc,GAAiBngB,GAAQA,EAAI8X,WAAW,OAASoI,GAAkBlgB,GAAOogB,GAAYpgB,GAsB1F,CACA,MAAOsgB,IACH,CA5BJ,IAAiCF,GCDjC,SAASG,GAAWC,EAAQC,EAAQpR,GAChC,MAAyB,kBAAXmR,EACRA,EACApG,GAAGrB,UAAU0H,EAASpR,EAAOmR,EACvC,CCJA,MAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mBCDX,SAASE,GAAc5T,EAAKlN,EAEfie,EAAS8C,EAAU7C,GAAmB,IAFrB,MAAE8C,EAAK,MAAEC,EAAK,UAAEC,EAAS,QAAE1D,EAAO,QAAEC,EAAO,WAAE0D,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,KAElHC,GAAQthB,EAMP,GALA+d,GAAgB7Q,EAAOoU,EAAQrD,EAASC,GAKpC6C,EAIA,YAHI7T,EAAMrF,MAAM0Z,UACZrU,EAAMsU,MAAMD,QAAUrU,EAAMrF,MAAM0Z,UAI1CrU,EAAMsU,MAAQtU,EAAMrF,MACpBqF,EAAMrF,MAAQ,CAAC,EACf,MAAM,MAAE2Z,EAAK,MAAE3Z,EAAK,WAAE4Z,GAAevU,EAKjCsU,EAAMxI,YACFyI,IACA5Z,EAAMmR,UAAYwI,EAAMxI,kBACrBwI,EAAMxI,WAGbyI,SACarjB,IAAZof,QAAqCpf,IAAZqf,GAAyB5V,EAAMmR,aACzDnR,EAAMuW,gBFzBd,SAAgCqD,EAAYjE,EAASC,GACjD,MAAMiE,EAAYlB,GAAWhD,EAASiE,EAAWtJ,EAAGsJ,EAAWnG,OACzDqG,EAAYnB,GAAW/C,EAASgE,EAAWrJ,EAAGqJ,EAAWjG,QAC/D,MAAO,GAAPpZ,OAAUsf,EAAS,KAAAtf,OAAIuf,EAC3B,CEqBgCC,CAAuBH,OAAwBrjB,IAAZof,EAAwBA,EAAU,QAAiBpf,IAAZqf,EAAwBA,EAAU,UAG1Hrf,IAAV4iB,IACAQ,EAAMrJ,EAAI6I,QACA5iB,IAAV6iB,IACAO,EAAMpJ,EAAI6I,QACI7iB,IAAd8iB,IACAM,EAAMhI,MAAQ0H,QAEC9iB,IAAf+iB,GD7BR,SAAsBK,EAAOhhB,GAAqD,IAA7CqhB,EAAOrd,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,EAAGkc,EAAMlc,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,EAAGsd,IAAWtd,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,KAAAA,UAAA,GAErEgd,EAAML,WAAa,EAGnB,MAAMnf,EAAO8f,EAAcnB,GAAWE,GAEtCW,EAAMxf,EAAK0e,QAAUrG,GAAGrB,WAAW0H,GAEnC,MAAMS,EAAa9G,GAAGrB,UAAUxY,GAC1B4gB,EAAc/G,GAAGrB,UAAU6I,GACjCL,EAAMxf,EAAK4e,OAAS,GAAHxe,OAAM+e,EAAU,KAAA/e,OAAIgf,EACzC,CCkBQW,CAAaP,EAAOL,EAAYC,EAAaC,GAAY,EAEjE,CC/CA,MAAMW,GAAuBA,KAAA,IACtBhD,KACHwC,MAAO,CAAC,ICJNT,GAAYhf,GAAuB,kBAARA,GAA0C,QAAtBA,EAAIG,cCMzD,SAAS+f,GAAYxhB,EAAOwU,EAAaiN,EAAW3Y,GAChD,MAAM4Y,GAAcnP,EAAAA,EAAAA,UAAQ,KACxB,MAAM9F,EAAQ8U,KAEd,OADAlB,GAAc5T,EAAO+H,EAAa,CAAE0J,4BAA4B,GAASoC,GAASxX,GAAY9I,EAAMyd,mBAC7F,IACAhR,EAAMsU,MACT3Z,MAAO,IAAKqF,EAAMrF,OACrB,GACF,CAACoN,IACJ,GAAIxU,EAAMoH,MAAO,CACb,MAAMua,EAAY,CAAC,EACnBnD,GAAkBmD,EAAW3hB,EAAMoH,MAAOpH,GAC1C0hB,EAAYta,MAAQ,IAAKua,KAAcD,EAAYta,MACvD,CACA,OAAOsa,CACX,CCdA,SAASE,KAA4C,IAA5BC,EAAkB9d,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,IAAAA,UAAA,GAsBvC,MArBkB8P,CAAC/K,EAAW9I,EAAOsR,EAAG/R,EAAoBiR,KAAa,IAA/B,aAAE+M,GAAche,EACtD,MAGMmiB,GAHiB1K,EAAelO,GAChC0Y,GACA3C,IAC6B7e,EAAOud,EAAc/M,EAAU1H,GAC5DgZ,EPoBd,SAAqB9hB,EAAO+hB,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAMtiB,KAAOQ,EAQF,WAARR,GAA4C,kBAAjBQ,EAAMrB,SAEjCghB,GAAcngB,KACU,IAAvBqiB,GAA+BnC,GAAkBlgB,KAChDuiB,IAAUrC,GAAkBlgB,IAE7BQ,EAAiB,WAAKR,EAAI8X,WAAW,aACtCwK,EAActiB,GAAOQ,EAAMR,IAGnC,OAAOsiB,CACX,COzC8BE,CAAYhiB,EAA4B,kBAAd8I,EAAwB+Y,GAClEI,EAAenZ,IAAcoZ,EAAAA,SAC7B,IAAKJ,KAAkBJ,EAAapQ,OACpC,CAAC,GAMD,SAAEnI,GAAanJ,EACfmiB,GAAmB5P,EAAAA,EAAAA,UAAQ,IAAOgF,EAAcpO,GAAYA,EAASf,MAAQe,GAAW,CAACA,IAC/F,OAAO1B,EAAAA,EAAAA,eAAcqB,EAAW,IACzBmZ,EACH9Y,SAAUgZ,GACZ,CAGV,CC9BA,SAASC,GAAWC,EAAO9iB,EAAmB+iB,EAAWC,GAAY,IAAxC,MAAEnb,EAAK,KAAEsW,GAAMne,EACxCb,OAAOigB,OAAO0D,EAAQjb,MAAOA,EAAOmb,GAAcA,EAAWC,oBAAoBF,IAEjF,IAAK,MAAM9iB,KAAOke,EACd2E,EAAQjb,MAAMqb,YAAYjjB,EAAKke,EAAKle,GAE5C,CCHA,MAAMkjB,GAAsB,IAAInU,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAASoU,GAAUN,EAASO,EAAaC,EAAYN,GACjDH,GAAWC,EAASO,OAAajlB,EAAW4kB,GAC5C,IAAK,MAAM/iB,KAAOojB,EAAY7B,MAC1BsB,EAAQnY,aAAcwY,GAAoB1T,IAAIxP,GAA0BA,EAAnBqR,EAAYrR,GAAYojB,EAAY7B,MAAMvhB,GAEvG,CCNA,SAASsjB,GAA4B9iB,EAAO+iB,GACxC,MAAM,MAAE3b,GAAUpH,EACZgjB,EAAY,CAAC,EACnB,IAAK,MAAMxjB,KAAO4H,GACVmQ,EAAcnQ,EAAM5H,KACnBujB,EAAU3b,OAASmQ,EAAcwL,EAAU3b,MAAM5H,KAClD6X,EAAoB7X,EAAKQ,MACzBgjB,EAAUxjB,GAAO4H,EAAM5H,IAG/B,OAAOwjB,CACX,CCVA,SAASF,GAA4B9iB,EAAO+iB,GACxC,MAAMC,EAAYC,GAA8BjjB,EAAO+iB,GACvD,IAAK,MAAMvjB,KAAOQ,EACd,GAAIuX,EAAcvX,EAAMR,KAAS+X,EAAcwL,EAAUvjB,IAAO,CAI5DwjB,GAHuD,IAArC7L,EAAmBzV,QAAQlC,GACvC,OAASA,EAAI0jB,OAAO,GAAGC,cAAgB3jB,EAAI4jB,UAAU,GACrD5jB,GACiBQ,EAAMR,EACjC,CAEJ,OAAOwjB,CACX,CCfA,SAASK,GAAwBrjB,EAAOsjB,EAAY5M,GAAkD,IAA1C6M,EAAaxf,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGyf,EAAezf,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,EAsB/F,MAlB0B,oBAAfuf,IACPA,EAAaA,OAAsB3lB,IAAX+Y,EAAuBA,EAAS1W,EAAM0W,OAAQ6M,EAAeC,IAM/D,kBAAfF,IACPA,EAAatjB,EAAMiS,UAAYjS,EAAMiS,SAASqR,IAOxB,oBAAfA,IACPA,EAAaA,OAAsB3lB,IAAX+Y,EAAuBA,EAAS1W,EAAM0W,OAAQ6M,EAAeC,IAElFF,CACX,C,eCvBA,MAAMG,GAAqBjS,GAChBjR,MAAMC,QAAQgR,GCCnBkS,GAAiBlS,GACZQ,QAAQR,GAAkB,kBAANA,GAAkBA,EAAEmS,KAAOnS,EAAEoS,SAEtDC,GAAgCrS,GAE3BiS,GAAkBjS,GAAKA,EAAEA,EAAEzR,OAAS,IAAM,EAAIyR,ECCzD,SAASsS,GAAmBrkB,GACxB,MAAMskB,EAAiBxM,EAAc9X,GAASA,EAAM2I,MAAQ3I,EAC5D,OAAOikB,GAAcK,GACfA,EAAeH,UACfG,CACV,CCMA,MAAMC,GAAsBC,GAAW,CAACjkB,EAAOwQ,KAC3C,MAAM5I,GAAU0K,EAAAA,EAAAA,YAAW5B,GACrBmE,GAAkBvC,EAAAA,EAAAA,YAAWwC,EAAAA,GAC7BoP,EAAOA,IAbjB,SAAkB3kB,EAA+DS,EAAO4H,EAASiN,GAAiB,IAA/F,4BAAEiO,EAA2B,kBAAEqB,EAAiB,QAAEC,GAAU7kB,EAC3E,MAAMkN,EAAQ,CACV8Q,aAAc8G,GAAiBrkB,EAAO4H,EAASiN,EAAiBiO,GAChEF,YAAauB,KAKjB,OAHIC,IACA3X,EAAMyJ,MAAS5N,GAAa8b,EAAQpkB,EAAOsI,EAAUmE,IAElDA,CACX,CAIuB6X,CAAUL,EAAQjkB,EAAO4H,EAASiN,GACrD,OAAOrE,EAAW0T,KAASK,EAAAA,GAAAA,GAAYL,EAAK,EAEhD,SAASG,GAAiBrkB,EAAO4H,EAASiN,EAAiB2P,GACvD,MAAM7lB,EAAS,CAAC,EACV8lB,EAAeD,EAAmBxkB,EAAO,CAAC,GAChD,IAAK,MAAMR,KAAOilB,EACd9lB,EAAOa,GAAOskB,GAAmBW,EAAajlB,IAElD,IAAI,QAAE2S,EAAO,QAAEL,GAAY9R,EAC3B,MAAM0kB,EAA0B7S,EAAsB7R,GAChD2kB,EAAkB5S,EAAc/R,GAClC4H,GACA+c,IACCD,IACiB,IAAlB1kB,EAAMoS,eACUzU,IAAZwU,IACAA,EAAUvK,EAAQuK,cACNxU,IAAZmU,IACAA,EAAUlK,EAAQkK,UAE1B,IAAI8S,IAA4B/P,IACE,IAA5BA,EAAgB1C,QAEtByS,EAA4BA,IAAyC,IAAZzS,EACzD,MAAM0S,EAAeD,EAA4B9S,EAAUK,EAC3D,GAAI0S,GACwB,mBAAjBA,IACNpT,EAAoBoT,GAAe,EACvBtkB,MAAMC,QAAQqkB,GAAgBA,EAAe,CAACA,IACtDriB,SAAS8gB,IACV,MAAMwB,EAAWzB,GAAwBrjB,EAAOsjB,GAChD,IAAKwB,EACD,OACJ,MAAM,cAAEC,EAAa,WAAEC,KAAevG,GAAWqG,EACjD,IAAK,MAAMtlB,KAAOif,EAAQ,CACtB,IAAIwG,EAAcxG,EAAOjf,GACzB,GAAIe,MAAMC,QAAQykB,GAAc,CAQ5BA,EAAcA,EAHAL,EACRK,EAAYllB,OAAS,EACrB,EAEV,CACoB,OAAhBklB,IACAtmB,EAAOa,GAAOylB,EAEtB,CACA,IAAK,MAAMzlB,KAAOulB,EACdpmB,EAAOa,GAAOulB,EAAcvlB,EAAI,GAE5C,CACA,OAAOb,CACX,C,eCtEA,MAAMumB,GAAkB,CACpBpR,eAAgBkQ,GAAmB,CAC/BlB,4BAA6BA,GAC7BqB,kBAAmB5C,GACnB6C,QAASA,CAACpkB,EAAOsI,EAAQ/I,KAAoC,IAAlC,YAAEqjB,EAAW,aAAErF,GAAche,EACpD4lB,GAAAA,GAAMC,MAAK,KACP,IACIxC,EAAY5B,WAEJ,oBADG1Y,EAAS+c,QAEV/c,EAAS+c,UACT/c,EAASgd,uBACvB,CACA,MAAO9nB,GAEHolB,EAAY5B,WAAa,CACrBtJ,EAAG,EACHC,EAAG,EACHkD,MAAO,EACPE,OAAQ,EAEhB,KAEJoK,GAAAA,GAAMlc,QAAO,KACToX,GAAcuC,EAAarF,EAAc,CAAEW,4BAA4B,GAASoC,GAAShY,EAASzG,SAAU7B,EAAMyd,mBAClHkF,GAAUra,EAAUsa,EAAY,GAClC,KC9BR2C,GAAmB,CACrBzR,eAAgBkQ,GAAmB,CAC/BlB,4BAA2B,GAC3BqB,kBAAmB5F,MCP3B,SAASiH,GAAY/G,EAAQgH,EAAWC,GAAsC,IAA7BlI,EAAOzZ,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAE4hB,SAAS,GAElE,OADAlH,EAAOmH,iBAAiBH,EAAWC,EAASlI,GACrC,IAAMiB,EAAOoH,oBAAoBJ,EAAWC,EACvD,CCHA,MAAMI,GAAoBC,GACI,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,UCXrB,SAASC,GAAiBJ,GAA2B,IAApBK,EAASriB,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,OACzC,MAAO,CACHsiB,MAAO,CACH3O,EAAGqO,EAAMK,EAAY,KACrBzO,EAAGoO,EAAMK,EAAY,MAGjC,CACA,MAAME,GAAkBZ,GACZK,GAAUD,GAAiBC,IAAUL,EAAQK,EAAOI,GAAiBJ,ICRjF,SAASQ,GAAgB9H,EAAQgH,EAAWC,EAASlI,GACjD,OAAOgI,GAAY/G,EAAQgH,EAAWa,GAAeZ,GAAUlI,EACnE,CCEA,MAAMgJ,GAAmBA,CAACppB,EAAGC,IAAOmU,GAAMnU,EAAED,EAAEoU,IACxCiV,GAAO,mBAAAC,EAAA3iB,UAAAhE,OAAI4mB,EAAY,IAAApmB,MAAAmmB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,GAAA7iB,UAAA6iB,GAAA,OAAKD,EAAatnB,OAAOmnB,GAAiB,ECRvE,SAASK,GAAW7oB,GAChB,IAAI8oB,EAAO,KACX,MAAO,KACH,MAAMC,EAAWA,KACbD,EAAO,IAAI,EAEf,OAAa,OAATA,IACAA,EAAO9oB,EACA+oB,EAEC,CAEpB,CACA,MAAMC,GAAuBH,GAAW,kBAClCI,GAAqBJ,GAAW,gBACtC,SAASK,GAAcrU,GACnB,IAAIiU,GAAO,EACX,GAAa,MAATjU,EACAiU,EAAOG,UAEN,GAAa,MAATpU,EACLiU,EAAOE,SAEN,CACD,MAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBN,EAAOA,KACHK,IACAC,GAAc,GAKdD,GACAA,IACAC,GACAA,IAEZ,CACA,OAAON,CACX,CACA,SAASO,KAGL,MAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,CClDA,MAAMC,GACF5f,WAAAA,CAAY6f,GACRvf,KAAKwf,WAAY,EACjBxf,KAAKuf,KAAOA,CAChB,CACAnS,MAAAA,GAAW,ECCf,SAASqS,GAAcF,EAAMG,GACzB,MAAMlC,EAAY,WAAakC,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAOpB,GAAgBiB,EAAKvmB,QAASwkB,GAXjBoC,CAAC9B,EAAO+B,KACxB,GAA0B,UAAtB/B,EAAMC,aAA2BqB,KACjC,OACJ,MAAMrnB,EAAQwnB,EAAKO,WACfP,EAAK9R,gBAAkB1V,EAAMgoB,YAC7BR,EAAK9R,eAAeuS,UAAU,aAAcN,GAE5C3nB,EAAM4nB,IACNzC,GAAAA,GAAM9P,QAAO,IAAMrV,EAAM4nB,GAAc7B,EAAO+B,IAClD,GAEyD,CACzDnC,SAAU6B,EAAKO,WAAWH,IAElC,CChBA,MAAMM,GAAgBA,CAACvT,EAAQ1H,MACtBA,IAGI0H,IAAW1H,GAITib,GAAcvT,EAAQ1H,EAAMkb,gB,cCL3C,SAASC,GAA0BpqB,EAAM0nB,GACrC,IAAKA,EACD,OACJ,MAAM2C,EAAwB,IAAIC,aAAa,UAAYtqB,GAC3D0nB,EAAQ2C,EAAuBlC,GAAiBkC,GACpD,CCVA,MAAME,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAwBC,IAC1B,MAAMC,EAAWL,GAAkBngB,IAAIugB,EAAMlK,QAC7CmK,GAAYA,EAASD,EAAM,EAEzBE,GAA4BzpB,IAC9BA,EAAQoD,QAAQkmB,GAAqB,EAqBzC,SAASI,GAAoBzG,EAAS7E,EAASoL,GAC3C,MAAMG,EApBV,SAAiCxpB,GAAuB,IAAtB,KAAEypB,KAASxL,GAASje,EAClD,MAAM0pB,EAAaD,GAAQxhB,SAItBihB,GAAUzZ,IAAIia,IACfR,GAAU3R,IAAImS,EAAY,CAAC,GAE/B,MAAMC,EAAgBT,GAAUrgB,IAAI6gB,GAC9BzpB,EAAM2pB,KAAKC,UAAU5L,GAQ3B,OAHK0L,EAAc1pB,KACf0pB,EAAc1pB,GAAO,IAAI6pB,qBAAqBR,GAA0B,CAAEG,UAASxL,KAEhF0L,EAAc1pB,EACzB,CAEsC8pB,CAAyB9L,GAG3D,OAFA+K,GAAkBzR,IAAIuL,EAASuG,GAC/BG,EAA0BQ,QAAQlH,GAC3B,KACHkG,GAAkBiB,OAAOnH,GACzB0G,EAA0BU,UAAUpH,EAAQ,CAEpD,CC3CA,MAAMqH,GAAiB,CACnBvf,KAAM,EACNwf,IAAK,GCAT,MAAMC,GAAoB,CACtB1W,OAAQ,CACJqU,QDAR,cAA4BA,GACxB5f,WAAAA,GACIoB,SAAShF,WACTkE,KAAK4hB,gBAAiB,EACtB5hB,KAAK6hB,UAAW,CACpB,CACAC,aAAAA,GACI9hB,KAAKkO,UACL,MAAM,SAAE6T,EAAW,CAAC,GAAM/hB,KAAKuf,KAAKO,YAC9B,KAAEiB,EAAMtN,OAAQuO,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASH,EACtDxM,EAAU,CACZwL,KAAMA,EAAOA,EAAK/nB,aAAUtD,EAC5BssB,aACAG,UAA6B,kBAAXF,EAAsBA,EAASR,GAAeQ,IA+BpE,OAAOpB,GAAoB7gB,KAAKuf,KAAKvmB,QAASuc,GA7BhBmL,IAC1B,MAAM,eAAE0B,GAAmB1B,EAI3B,GAAI1gB,KAAK6hB,WAAaO,EAClB,OAMJ,GALApiB,KAAK6hB,SAAWO,EAKZF,IAASE,GAAkBpiB,KAAK4hB,eAChC,OAEKQ,IACLpiB,KAAK4hB,gBAAiB,GAEtB5hB,KAAKuf,KAAK9R,gBACVzN,KAAKuf,KAAK9R,eAAeuS,UAAU,cAAeoC,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoBtiB,KAAKuf,KAAKO,WACjDa,EAAWyB,EAAiBC,EAAkBC,EACpD3B,GAAYA,EAASD,EAAM,GAGnC,CACAzS,KAAAA,GACIjO,KAAK8hB,eACT,CACA1U,MAAAA,GACI,GAAoC,qBAAzBgU,qBACP,OACJ,MAAM,MAAErpB,EAAK,UAAE+iB,GAAc9a,KAAKuf,KAC5BgD,EAAoB,CAAC,SAAU,SAAU,QAAQrgB,KAO/D,SAAiC5K,GAA0D,IAAzD,SAAEyqB,EAAW,CAAC,GAAGzqB,GAAIyqB,SAAUS,EAAe,CAAC,GAAG1mB,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpF,OAAQ/F,GAASgsB,EAAShsB,KAAUysB,EAAazsB,EACrD,CAToE0sB,CAAyB1qB,EAAO+iB,IACxFyH,GACAviB,KAAK8hB,eAEb,CACA5T,OAAAA,GAAY,ICxDZnD,IAAK,CACDuU,QHMR,cAA2BA,GACvB5f,WAAAA,GACIoB,SAAShF,WACTkE,KAAK0iB,qBAAuBC,GAAAA,EAC5B3iB,KAAK4iB,mBAAqBD,GAAAA,EAC1B3iB,KAAK6iB,0BAA4BF,GAAAA,EACjC3iB,KAAK8iB,kBAAoB,CAACC,EAAYC,KAClC,GAAIhjB,KAAKijB,WACL,OACJjjB,KAAK4iB,qBACL,MAAM7qB,EAAQiI,KAAKuf,KAAKO,WAgBlBoD,EAA0B5E,GAAgBhf,OAAQ,aAfhC6jB,CAACC,EAAUC,KAC/B,IAAKrjB,KAAKsjB,gBACN,OACJ,MAAM,MAAEjM,EAAK,YAAEkM,EAAW,gBAAEC,GAAoBxjB,KAAKuf,KAAKO,WAC1D5C,GAAAA,GAAM9P,QAAO,KAKRoW,GACIvD,GAAcjgB,KAAKuf,KAAKvmB,QAASoqB,EAAS5M,QAEzCa,GAASA,EAAM+L,EAAUC,GADzBE,GAAeA,EAAYH,EAAUC,EACJ,GACzC,GAEgF,CAAE3F,UAAW3lB,EAAMsf,OAAStf,EAAmB,eAC/H0rB,EAA8BnF,GAAgBhf,OAAQ,iBAAiB,CAACokB,EAAaC,IAAe3jB,KAAK4jB,YAAYF,EAAaC,IAAa,CAAEjG,UAAW3lB,EAAMwrB,aAAexrB,EAAuB,mBAC9MiI,KAAK4iB,mBAAqBpE,GAAK0E,EAAyBO,GACxDzjB,KAAK6jB,WAAWd,EAAYC,EAAU,EAE1ChjB,KAAK8jB,qBAAuB,KACxB,MAmBMC,EAAwBxG,GAAYvd,KAAKuf,KAAKvmB,QAAS,WAnBtCgrB,IACnB,GAAyB,UAArBA,EAAazsB,KAAmByI,KAAKijB,WACrC,OAWJjjB,KAAK4iB,qBACL5iB,KAAK4iB,mBAAqBrF,GAAYvd,KAAKuf,KAAKvmB,QAAS,SAXpCirB,IACM,UAAnBA,EAAW1sB,KAAoByI,KAAKsjB,iBAExCnD,GAA0B,MAAM,CAACrC,EAAO+B,KACpC,MAAM,MAAExI,GAAUrX,KAAKuf,KAAKO,WACxBzI,GACA6F,GAAAA,GAAM9P,QAAO,IAAMiK,EAAMyG,EAAO+B,IACpC,GACF,IAINM,GAA0B,QAAQ,CAACrC,EAAO+B,KACtC7f,KAAK6jB,WAAW/F,EAAO+B,EAAK,GAC9B,IAQAqE,EAAqB3G,GAAYvd,KAAKuf,KAAKvmB,QAAS,QALvCmrB,KACVnkB,KAAKijB,YAEV9C,GAA0B,UAAU,CAACuD,EAAaC,IAAe3jB,KAAK4jB,YAAYF,EAAaC,IAAY,IAG/G3jB,KAAK6iB,0BAA4BrE,GAAKuF,EAAuBG,EAAmB,CAExF,CACAL,UAAAA,CAAW/F,EAAO+B,GACd7f,KAAKijB,YAAa,EAClB,MAAM,WAAE3L,EAAU,SAAEC,GAAavX,KAAKuf,KAAKO,WAIvCvI,GAAYvX,KAAKuf,KAAK9R,gBACtBzN,KAAKuf,KAAK9R,eAAeuS,UAAU,YAAY,GAE/C1I,GACA4F,GAAAA,GAAM9P,QAAO,IAAMkK,EAAWwG,EAAO+B,IAE7C,CACAyD,aAAAA,GACItjB,KAAK4iB,qBACL5iB,KAAKijB,YAAa,EAKlB,OAJcjjB,KAAKuf,KAAKO,WACdvI,UAAYvX,KAAKuf,KAAK9R,gBAC5BzN,KAAKuf,KAAK9R,eAAeuS,UAAU,YAAY,IAE3CZ,IACZ,CACAwE,WAAAA,CAAY9F,EAAO+B,GACf,IAAK7f,KAAKsjB,gBACN,OACJ,MAAM,YAAEC,GAAgBvjB,KAAKuf,KAAKO,WAC9ByD,GACArG,GAAAA,GAAM9P,QAAO,IAAMmW,EAAYzF,EAAO+B,IAE9C,CACA5R,KAAAA,GACI,MAAMlW,EAAQiI,KAAKuf,KAAKO,WAClBsE,EAAwB9F,GAAgBvmB,EAAMyrB,gBAAkBlkB,OAASU,KAAKuf,KAAKvmB,QAAS,cAAegH,KAAK8iB,kBAAmB,CAAEpF,UAAW3lB,EAAMuf,YAAcvf,EAAsB,kBAC1LssB,EAAsB9G,GAAYvd,KAAKuf,KAAKvmB,QAAS,QAASgH,KAAK8jB,sBACzE9jB,KAAK0iB,qBAAuBlE,GAAK4F,EAAuBC,EAC5D,CACAnW,OAAAA,GACIlO,KAAK0iB,uBACL1iB,KAAK4iB,qBACL5iB,KAAK6iB,2BACT,IGzGAhY,MAAO,CACHyU,QCTR,cAA2BA,GACvB5f,WAAAA,GACIoB,SAAShF,WACTkE,KAAK0f,UAAW,CACpB,CACA4E,OAAAA,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBvkB,KAAKuf,KAAKvmB,QAAQwrB,QAAQ,iBAC/C,CACA,MAAOjvB,GACHgvB,GAAiB,CACrB,CACKA,GAAmBvkB,KAAKuf,KAAK9R,iBAElCzN,KAAKuf,KAAK9R,eAAeuS,UAAU,cAAc,GACjDhgB,KAAK0f,UAAW,EACpB,CACA+E,MAAAA,GACSzkB,KAAK0f,UAAa1f,KAAKuf,KAAK9R,iBAEjCzN,KAAKuf,KAAK9R,eAAeuS,UAAU,cAAc,GACjDhgB,KAAK0f,UAAW,EACpB,CACAzR,KAAAA,GACIjO,KAAKkO,QAAUsQ,GAAKjB,GAAYvd,KAAKuf,KAAKvmB,QAAS,SAAS,IAAMgH,KAAKskB,YAAY/G,GAAYvd,KAAKuf,KAAKvmB,QAAS,QAAQ,IAAMgH,KAAKykB,WACzI,CACAvW,OAAAA,GAAY,IDtBZpD,MAAO,CACHwU,QLQR,cAA2BA,GACvBrR,KAAAA,GACIjO,KAAKkO,QAAUsQ,GAAKiB,GAAczf,KAAKuf,MAAM,GAAOE,GAAczf,KAAKuf,MAAM,GACjF,CACArR,OAAAA,GAAY,KO5BhB,SAASwW,GAAe7d,EAAM8d,GAC1B,IAAKrsB,MAAMC,QAAQosB,GACf,OAAO,EACX,MAAMC,EAAaD,EAAK7sB,OACxB,GAAI8sB,IAAe/d,EAAK/O,OACpB,OAAO,EACX,IAAK,IAAID,EAAI,EAAGA,EAAI+sB,EAAY/sB,IAC5B,GAAI8sB,EAAK9sB,KAAOgP,EAAKhP,GACjB,OAAO,EAEf,OAAO,CACX,CCOA,SAASgtB,GAAepY,EAAe4O,EAAY5M,GAC/C,MAAM1W,EAAQ0U,EAAcqT,WAC5B,OAAO1E,GAAwBrjB,EAAOsjB,OAAuB3lB,IAAX+Y,EAAuBA,EAAS1W,EAAM0W,OAf5F,SAAoBhC,GAChB,MAAMzT,EAAU,CAAC,EAEjB,OADAyT,EAAc/V,OAAO6D,SAAQ,CAAC/C,EAAOD,IAASyB,EAAQzB,GAAOC,EAAM2I,QAC5DnH,CACX,CAWoG8rB,CAAWrY,GAP/G,SAAqBA,GACjB,MAAMsY,EAAW,CAAC,EAElB,OADAtY,EAAc/V,OAAO6D,SAAQ,CAAC/C,EAAOD,IAASwtB,EAASxtB,GAAOC,EAAM+X,gBAC7DwV,CACX,CAG+HxV,CAAY9C,GAC3I,C,eCfA,MAAMuY,GAAyBC,GAAsB,IAAVA,EACrCC,GAAyBC,GAAiBA,EAAe,ICPzDC,IACO,ECDPC,GAAsBC,GAAWhtB,MAAMC,QAAQ+sB,IAAgC,kBAAdA,EAAO,GCE9E,SAASC,GAAuBD,GAC5B,OAAOvb,SAASub,GACO,kBAAXA,GAAuBE,GAAqBF,IACpDD,GAAmBC,IAClBhtB,MAAMC,QAAQ+sB,IAAWA,EAAOG,MAAMF,IAC/C,CACA,MAAMG,GAAsBpuB,IAAA,IAAEnC,EAAGC,EAAGC,EAAGC,GAAEgC,EAAA,sBAAAoC,OAAqBvE,EAAC,MAAAuE,OAAKtE,EAAC,MAAAsE,OAAKrE,EAAC,MAAAqE,OAAKpE,EAAC,MAC3EkwB,GAAuB,CACzBG,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAQN,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CO,QAASP,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CQ,OAAQR,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDS,QAAST,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASU,GAAwBd,GAC7B,GAAKA,EAEL,OAAOD,GAAmBC,GACpBI,GAAoBJ,GACpBhtB,MAAMC,QAAQ+sB,GACVA,EAAOxsB,IAAIstB,IACXZ,GAAqBF,EACnC,CCRA,MAAMe,GAAaA,CAAC1oB,EAAG2oB,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAM3oB,GAAK,EAAM4oB,EAAK,EAAMD,IAAO3oB,EAAI,EAAM2oB,GACrG3oB,EACE6oB,GAAuB,KACvBC,GAA2B,GAkBjC,SAASC,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOnE,GAAAA,EACX,MAAMoE,EAAYC,GArBtB,SAAyBvX,EAAGwX,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACAvvB,EAAI,EACR,GACIuvB,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWd,GAAWe,EAAUT,EAAKE,GAAOpX,EACxC0X,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZpW,KAAKqW,IAAIF,GAAYX,MACxB3uB,EAAI4uB,IACV,OAAOW,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQlpB,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAI0oB,GAAWU,EAASppB,GAAIipB,EAAKE,EACxE,CC9CA,MAAMjB,GAASa,GAAY,IAAM,EAAG,EAAG,GACjCZ,GAAUY,GAAY,EAAG,EAAG,IAAM,GAClCX,GAAYW,GAAY,IAAM,EAAG,IAAM,GCJvCa,GAAiB3B,GACZttB,MAAMC,QAAQqtB,IAA4B,kBAAZA,EAAK,GCCxC4B,GAAgBlC,GAAYhd,GAAMA,GAAK,GAAMgd,EAAO,EAAIhd,GAAK,GAAK,EAAIgd,EAAO,GAAK,EAAIhd,KAAO,ECA7Fmf,GAAiBnC,GAAYhd,GAAM,EAAIgd,EAAO,EAAIhd,GCClD0d,GAAU1d,GAAM,EAAI0I,KAAK0W,IAAI1W,KAAK2W,KAAKrf,IACvC2d,GAAUwB,GAAczB,IACxB4B,GAAYJ,GAAaxB,ICDzBG,GAAUO,GAAY,IAAM,KAAM,IAAM,KACxCR,GAASuB,GAActB,IACvB0B,GAAYL,GAAatB,ICEzB4B,GAAe,CACjBnC,OAAQhD,GAAAA,EACRkD,OAAM,GACNE,UAAS,GACTD,QAAO,GACPE,OAAM,GACN4B,UAAS,GACT3B,QAAO,GACPC,OAAM,GACN2B,UAAS,GACT1B,QAAO,GACP4B,WCjBgBzf,IAAOA,GAAK,GAAK,EAAI,GAAM4d,GAAO5d,GAAK,IAAO,EAAI0I,KAAKgX,IAAI,GAAI,IAAM1f,EAAI,MDmBvF2f,GAA8B5M,IAChC,GAAI/iB,MAAMC,QAAQ8iB,GAAa,EAE3B1V,EAAAA,GAAAA,GAAgC,IAAtB0V,EAAWvjB,OAAc,2DACnC,MAAOowB,EAAIC,EAAIC,EAAIC,GAAMhN,EACzB,OAAOqL,GAAYwB,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,kBAAfhN,IAEZ1V,EAAAA,GAAAA,QAAuCjQ,IAA7BoyB,GAAazM,GAA2B,wBAAF3hB,OAA0B2hB,EAAU,MAC7EyM,GAAazM,IAEjBA,CAAU,EErBfiN,GAAWA,CAACC,EAAMC,EAAIhxB,KACxB,MAAMixB,EAAmBD,EAAKD,EAC9B,OAA4B,IAArBE,EAAyB,GAAKjxB,EAAQ+wB,GAAQE,CAAgB,ECOnEC,GAAYA,CAACH,EAAMC,EAAIF,IAClBC,GAAQC,EAAKD,GAAQD,ECrBhC,SAASK,GAASrgB,EAAGsgB,EAAGjrB,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACD2K,EAAc,GAATsgB,EAAItgB,GAAS3K,EACzBA,EAAI,GACGirB,EACPjrB,EAAI,EAAI,EACD2K,GAAKsgB,EAAItgB,IAAM,EAAI,EAAI3K,GAAK,EAChC2K,CACX,CCPA,MAAMugB,GAAgBA,CAACxyB,EAAMyyB,IAAcvf,GAChCQ,QAASsH,GAAS9H,IAAM6H,GAAiBpC,KAAKzF,IAAMA,EAAE8F,WAAWhZ,IACnEyyB,GAAYryB,OAAOuB,UAAUC,eAAeC,KAAKqR,EAAGuf,IAEvDC,GAAaA,CAACC,EAAOC,EAAOC,IAAW3f,IACzC,IAAK8H,GAAS9H,GACV,OAAOA,EACX,MAAOpU,EAAGC,EAAGC,EAAGwb,GAAStH,EAAEjC,MAAM4J,GACjC,MAAO,CACH,CAAC8X,GAAQpY,WAAWzb,GACpB,CAAC8zB,GAAQrY,WAAWxb,GACpB,CAAC8zB,GAAQtY,WAAWvb,GACpBwb,WAAiBnb,IAAVmb,EAAsBD,WAAWC,GAAS,EACpD,ECbCsY,GAAU,IACTzY,EACHJ,UAAY/G,GAAMyH,KAAKC,MAHL1H,IAAMgH,EAAM,EAAG,IAAKhH,GAGT6f,CAAa7f,KAExC8f,GAAO,CACTra,KAAM6Z,GAAc,MAAO,OAC3BlY,MAAOoY,GAAW,MAAO,QAAS,QAClCzY,UAAWhZ,IAAA,IAAC,IAAEgyB,EAAG,MAAEC,EAAK,KAAEC,EAAM3Y,MAAO4Y,EAAU,GAAGnyB,EAAA,MAAK,QACrD6xB,GAAQ7Y,UAAUgZ,GAClB,KACAH,GAAQ7Y,UAAUiZ,GAClB,KACAJ,GAAQ7Y,UAAUkZ,GAClB,KACAzY,EAASF,EAAMP,UAAUmZ,IACzB,GAAG,GCYX,MAAMC,GAAM,CACR1a,KAAM6Z,GAAc,KACpBlY,MAhCJ,SAAkBpH,GACd,IAAIogB,EAAI,GACJC,EAAI,GACJx0B,EAAI,GACJD,EAAI,GAmBR,OAjBIoU,EAAEzR,OAAS,GACX6xB,EAAIpgB,EAAE4R,UAAU,EAAG,GACnByO,EAAIrgB,EAAE4R,UAAU,EAAG,GACnB/lB,EAAImU,EAAE4R,UAAU,EAAG,GACnBhmB,EAAIoU,EAAE4R,UAAU,EAAG,KAInBwO,EAAIpgB,EAAE4R,UAAU,EAAG,GACnByO,EAAIrgB,EAAE4R,UAAU,EAAG,GACnB/lB,EAAImU,EAAE4R,UAAU,EAAG,GACnBhmB,EAAIoU,EAAE4R,UAAU,EAAG,GACnBwO,GAAKA,EACLC,GAAKA,EACLx0B,GAAKA,EACLD,GAAKA,GAEF,CACHm0B,IAAKO,SAASF,EAAG,IACjBJ,MAAOM,SAASD,EAAG,IACnBJ,KAAMK,SAASz0B,EAAG,IAClByb,MAAO1b,EAAI00B,SAAS10B,EAAG,IAAM,IAAM,EAE3C,EAIImb,UAAW+Y,GAAK/Y,WC/BdwZ,GAAO,CACT9a,KAAM6Z,GAAc,MAAO,OAC3BlY,MAAOoY,GAAW,MAAO,aAAc,aACvCzY,UAAWhZ,IAAwD,IAAvD,IAAEyyB,EAAG,WAAEC,EAAU,UAAEC,EAAWpZ,MAAO4Y,EAAU,GAAGnyB,EAC1D,MAAQ,QACJ0Z,KAAKC,MAAM8Y,GACX,KACArY,GAAQpB,UAAUS,EAASiZ,IAC3B,KACAtY,GAAQpB,UAAUS,EAASkZ,IAC3B,KACAlZ,EAASF,EAAMP,UAAUmZ,IACzB,GAAG,GCPTS,GAAiBA,CAAC3B,EAAMC,EAAIjf,KAC9B,MAAM4gB,EAAW5B,EAAOA,EAClB6B,EAAO7gB,GAAKif,EAAKA,EAAK2B,GAAYA,EACxC,OAAOC,EAAO,EAAI,EAAIpZ,KAAKqZ,KAAKD,EAAK,EAEnCE,GAAa,CAACZ,GAAKL,GAAMS,IAE/B,SAASS,GAAOC,GACZ,MAAMn0B,GAFYkT,EAEQihB,EAFFF,GAAWG,MAAMp0B,GAASA,EAAK2Y,KAAKzF,MAA1CA,OAGlB5D,EAAAA,GAAAA,GAAUoE,QAAQ1T,GAAO,IAAFqD,OAAM8wB,EAAK,yEAClC,IAAIE,EAAQr0B,EAAKsa,MAAM6Z,GAKvB,OAJIn0B,IAASyzB,KAETY,ELTR,SAAmBpzB,GAAwC,IAAvC,IAAEyyB,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAEpZ,GAAOvZ,EACrDyyB,GAAO,IACPC,GAAc,IACdC,GAAa,IACb,IAAIX,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GAAKQ,EAGA,CACD,MAAMpB,EAAIqB,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC1hB,EAAI,EAAI2hB,EAAYrB,EAC1BU,EAAMX,GAASrgB,EAAGsgB,EAAGmB,EAAM,EAAI,GAC/BR,EAAQZ,GAASrgB,EAAGsgB,EAAGmB,GACvBP,EAAOb,GAASrgB,EAAGsgB,EAAGmB,EAAM,EAAI,EACpC,MAVIT,EAAMC,EAAQC,EAAOS,EAWzB,MAAO,CACHX,IAAKtY,KAAKC,MAAY,IAANqY,GAChBC,MAAOvY,KAAKC,MAAc,IAARsY,GAClBC,KAAMxY,KAAKC,MAAa,IAAPuY,GACjB3Y,QAER,CKhBgB8Z,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAWA,CAACrC,EAAMC,KACpB,MAAMqC,EAAWN,GAAOhC,GAClBuC,EAASP,GAAO/B,GAChBuC,EAAU,IAAKF,GACrB,OAAQthB,IACJwhB,EAAQzB,IAAMY,GAAeW,EAASvB,IAAKwB,EAAOxB,IAAK/f,GACvDwhB,EAAQxB,MAAQW,GAAeW,EAAStB,MAAOuB,EAAOvB,MAAOhgB,GAC7DwhB,EAAQvB,KAAOU,GAAeW,EAASrB,KAAMsB,EAAOtB,KAAMjgB,GAC1DwhB,EAAQla,MAAQ6X,GAAUmC,EAASha,MAAOia,EAAOja,MAAOtH,GACjD8f,GAAK/Y,UAAUya,GACzB,EChCCP,GAAQ,CACVxb,KAAOzF,GAAM8f,GAAKra,KAAKzF,IAAMmgB,GAAI1a,KAAKzF,IAAMugB,GAAK9a,KAAKzF,GACtDoH,MAAQpH,GACA8f,GAAKra,KAAKzF,GACH8f,GAAK1Y,MAAMpH,GAEbugB,GAAK9a,KAAKzF,GACRugB,GAAKnZ,MAAMpH,GAGXmgB,GAAI/Y,MAAMpH,GAGzB+G,UAAY/G,GACD8H,GAAS9H,GACVA,EACAA,EAAEtR,eAAe,OACboxB,GAAK/Y,UAAU/G,GACfugB,GAAKxZ,UAAU/G,ICZjC,MAAMyhB,GAAe,SACfC,GAAc,QACdC,GAAY,MACZC,GAAqB,OACrBC,GAAc,MACdC,GAAe,mMACrB,SAASC,GAAoB9zB,GACzB,MAAM+zB,EAAgB/zB,EAAM+F,WACtBiuB,EAAgBD,EAAcjkB,MAAM+jB,KAAiB,GACrD30B,EAAS,GACT+0B,EAAU,CACZjB,MAAO,GACP9Z,OAAQ,GACRgb,IAAK,IAEHC,EAAQ,GACd,IAAK,IAAI9zB,EAAI,EAAGA,EAAI2zB,EAAc1zB,OAAQD,IAAK,CAC3C,MAAM+zB,EAAcJ,EAAc3zB,GAC9B2yB,GAAMxb,KAAK4c,IACXH,EAAQjB,MAAMhwB,KAAK3C,GACnB8zB,EAAMnxB,KAAKywB,IACXv0B,EAAO8D,KAAKgwB,GAAM7Z,MAAMib,KAEnBA,EAAYvc,WAAW8b,KAC5BM,EAAQC,IAAIlxB,KAAK3C,GACjB8zB,EAAMnxB,KAAK0wB,IACXx0B,EAAO8D,KAAKoxB,KAGZH,EAAQ/a,OAAOlW,KAAK3C,GACpB8zB,EAAMnxB,KAAKwwB,IACXt0B,EAAO8D,KAAKoW,WAAWgb,IAE/B,CAGA,MAAO,CAAEl1B,SAAQoM,MAFCyoB,EAAcz1B,QAAQu1B,GAAcD,IAC9BtoB,MAAMsoB,IACNK,UAASE,QACrC,CACA,SAASE,GAAkBtiB,GACvB,OAAO+hB,GAAoB/hB,GAAG7S,MAClC,CACA,SAASo1B,GAAkB7kB,GACvB,MAAM,MAAEnE,EAAK,MAAE6oB,GAAUL,GAAoBrkB,GACvC8kB,EAAcjpB,EAAMhL,OAC1B,OAAQyR,IACJ,IAAIyiB,EAAS,GACb,IAAK,IAAIn0B,EAAI,EAAGA,EAAIk0B,EAAal0B,IAE7B,GADAm0B,GAAUlpB,EAAMjL,QACHnC,IAAT6T,EAAE1R,GAAkB,CACpB,MAAMxB,EAAOs1B,EAAM9zB,GAEfm0B,GADA31B,IAAS20B,GACCja,EAASxH,EAAE1R,IAEhBxB,IAAS40B,GACJT,GAAMla,UAAU/G,EAAE1R,IAGlB0R,EAAE1R,EAEpB,CAEJ,OAAOm0B,CAAM,CAErB,CACA,MAAMC,GAAwB1iB,GAAmB,kBAANA,EAAiB,EAAIA,EAMhE,MAAM2iB,GAAU,CACZld,KA/EJ,SAAczF,GACV,IAAIsO,EAAIsU,EACR,OAAQC,MAAM7iB,IACV8H,GAAS9H,MACwB,QAA9BsO,EAAKtO,EAAEjC,MAAM4J,UAAgC,IAAP2G,OAAgB,EAASA,EAAG/f,SAAW,KAC3C,QAA9Bq0B,EAAK5iB,EAAEjC,MAAM6J,UAAgC,IAAPgb,OAAgB,EAASA,EAAGr0B,SAAW,GAChF,CACZ,EAyEI6Y,MAAOkb,GACPC,qBACAO,kBATJ,SAA2B9iB,GACvB,MAAM+iB,EAAST,GAAkBtiB,GAEjC,OADoBuiB,GAAkBviB,EAC/BgjB,CAAYD,EAAOxzB,IAAImzB,IAClC,GCxEA,SAASO,GAAar3B,EAAGC,GACrB,OAAQkT,GAAOA,EAAI,EAAIlT,EAAID,CAC/B,CACA,SAASuzB,GAAUvzB,EAAGC,GAClB,OAAQkT,GAAMmkB,GAAYt3B,EAAGC,EAAGkT,EACpC,CACA,SAASokB,GAASv3B,GACd,MAAiB,kBAANA,EACAuzB,GAEW,kBAANvzB,EACL+a,EAAmB/a,GACpBq3B,GACAhC,GAAMxb,KAAK7Z,GACPy1B,GACA+B,GAELr0B,MAAMC,QAAQpD,GACZy3B,GAEW,kBAANz3B,EACLq1B,GAAMxb,KAAK7Z,GAAKy1B,GAAWiC,GAE/BL,EACX,CACA,SAASI,GAASz3B,EAAGC,GACjB,MAAM42B,EAAS,IAAI72B,GACb23B,EAAYd,EAAOl0B,OACnBi1B,EAAa53B,EAAE2D,KAAI,CAACyQ,EAAG1R,IAAM60B,GAASnjB,EAATmjB,CAAYnjB,EAAGnU,EAAEyC,MACpD,OAAQyQ,IACJ,IAAK,IAAIzQ,EAAI,EAAGA,EAAIi1B,EAAWj1B,IAC3Bm0B,EAAOn0B,GAAKk1B,EAAWl1B,GAAGyQ,GAE9B,OAAO0jB,CAAM,CAErB,CACA,SAASa,GAAU13B,EAAGC,GAClB,MAAM42B,EAAS,IAAK72B,KAAMC,GACpB23B,EAAa,CAAC,EACpB,IAAK,MAAMx1B,KAAOy0B,OACCt2B,IAAXP,EAAEoC,SAAiC7B,IAAXN,EAAEmC,KAC1Bw1B,EAAWx1B,GAAOm1B,GAASv3B,EAAEoC,GAAXm1B,CAAiBv3B,EAAEoC,GAAMnC,EAAEmC,KAGrD,OAAQgS,IACJ,IAAK,MAAMhS,KAAOw1B,EACdf,EAAOz0B,GAAOw1B,EAAWx1B,GAAKgS,GAElC,OAAOyiB,CAAM,CAErB,CAcA,MAAMW,GAAaA,CAAC5U,EAAQvB,KACxB,MAAMwW,EAAWd,GAAQJ,kBAAkBtV,GACrCyW,EAAc3B,GAAoBvT,GAClCmV,EAAc5B,GAAoB9U,GAIxC,OAHuByW,EAAYxB,QAAQC,IAAI5zB,SAAWo1B,EAAYzB,QAAQC,IAAI5zB,QAC9Em1B,EAAYxB,QAAQjB,MAAM1yB,SAAWo1B,EAAYzB,QAAQjB,MAAM1yB,QAC/Dm1B,EAAYxB,QAAQ/a,OAAO5Y,QAAUo1B,EAAYzB,QAAQ/a,OAAO5Y,OAEzD0mB,GAAKoO,GArBpB,SAAoB7U,EAAQvB,GACxB,IAAIqB,EACJ,MAAMsV,EAAgB,GAChBC,EAAW,CAAE5C,MAAO,EAAGkB,IAAK,EAAGhb,OAAQ,GAC7C,IAAK,IAAI7Y,EAAI,EAAGA,EAAI2e,EAAO9f,OAAOoB,OAAQD,IAAK,CAC3C,MAAMxB,EAAOmgB,EAAOmV,MAAM9zB,GACpBw1B,EAActV,EAAO0T,QAAQp1B,GAAM+2B,EAAS/2B,IAC5Ci3B,EAAoD,QAArCzV,EAAKE,EAAOrhB,OAAO22B,UAAiC,IAAPxV,EAAgBA,EAAK,EACvFsV,EAAct1B,GAAKy1B,EACnBF,EAAS/2B,IACb,CACA,OAAO82B,CACX,CAS6BI,CAAWN,EAAaC,GAAcA,EAAYx2B,QAASs2B,KAGhFQ,EAAAA,GAAAA,IAAQ,EAAM,mBAAF9zB,OAAqBqe,EAAM,WAAAre,OAAU8c,EAAM,6KAChDgW,GAAazU,EAAQvB,GAChC,EClFJ,SAASkF,GAAI6M,EAAMC,EAAIlgB,GACnB,GAAoB,kBAATigB,GACO,kBAAPC,GACM,kBAANlgB,EACP,OAAOogB,GAAUH,EAAMC,EAAIlgB,GAG/B,OADcokB,GAASnE,EAChBkF,CAAMlF,EAAMC,EACvB,CC6BA,SAASkF,GAAYC,EAAO3B,GAAqD,IAA3Czb,MAAOqd,GAAU,EAAI,KAAEhI,EAAI,MAAE6H,GAAO3xB,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1E,MAAM+xB,EAAcF,EAAM71B,OAM1B,IALA6N,EAAAA,GAAAA,GAAUkoB,IAAgB7B,EAAOl0B,OAAQ,wDAKrB,IAAhB+1B,EACA,MAAO,IAAM7B,EAAO,GAEpB2B,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOx0B,UACnB6yB,EAAS,IAAIA,GAAQ7yB,WAEzB,MAAM20B,EA/CV,SAAsB9B,EAAQpG,EAAMmI,GAChC,MAAMD,EAAS,GACTE,EAAeD,GAAerS,GAC9BuS,EAAYjC,EAAOl0B,OAAS,EAClC,IAAK,IAAID,EAAI,EAAGA,EAAIo2B,EAAWp2B,IAAK,CAChC,IAAI41B,EAAQO,EAAahC,EAAOn0B,GAAIm0B,EAAOn0B,EAAI,IAC/C,GAAI+tB,EAAM,CACN,MAAMsI,EAAiB51B,MAAMC,QAAQqtB,GAAQA,EAAK/tB,IAAM8qB,GAAAA,EAAOiD,EAC/D6H,EAAQjP,GAAK0P,EAAgBT,EACjC,CACAK,EAAOtzB,KAAKizB,EAChB,CACA,OAAOK,CACX,CAkCmBK,CAAanC,EAAQpG,EAAM6H,GACpCQ,EAAYH,EAAOh2B,OACnBs2B,EAAgB7kB,IAClB,IAAI1R,EAAI,EACR,GAAIo2B,EAAY,EACZ,KAAOp2B,EAAI81B,EAAM71B,OAAS,KAClByR,EAAIokB,EAAM91B,EAAI,IADOA,KAKjC,MAAMw2B,EAAkB/F,GAASqF,EAAM91B,GAAI81B,EAAM91B,EAAI,GAAI0R,GACzD,OAAOukB,EAAOj2B,GAAGw2B,EAAgB,EAErC,OAAOT,EACArkB,GAAM6kB,EAAa7d,EAAMod,EAAM,GAAIA,EAAME,EAAc,GAAItkB,IAC5D6kB,CACV,CCpEA,SAASE,GAAcC,GACnB,MAAMvW,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQwW,GACxB,MAAMhe,EAAMwH,EAAOA,EAAOlgB,OAAS,GACnC,IAAK,IAAID,EAAI,EAAGA,GAAK22B,EAAW32B,IAAK,CACjC,MAAM42B,EAAiBnG,GAAS,EAAGkG,EAAW32B,GAC9CmgB,EAAOxd,KAAKkuB,GAAUlY,EAAK,EAAGie,GAClC,CACJ,CDLIC,CAAW1W,EAAQuW,EAAIz2B,OAAS,GACzBkgB,CACX,CEIA,SAAS2W,GAASr3B,GAA4E,IAA3E,SAAEs3B,EAAW,IAAKD,UAAWE,EAAc,MAAEC,EAAK,KAAElJ,EAAO,aAActuB,EAKxF,MAAMy3B,EAAkBxH,GAAc3B,GAChCA,EAAK9sB,IAAImvB,IACTA,GAA2BrC,GAK3BphB,EAAQ,CACVsC,MAAM,EACNtP,MAAOq3B,EAAe,IAKpBG,EC7BV,SAA8BhX,EAAQ4W,GAClC,OAAO5W,EAAOlf,KAAKm2B,GAAMA,EAAIL,GACjC,CD2B0BM,CAGtBJ,GAASA,EAAMh3B,SAAW+2B,EAAe/2B,OACnCg3B,EACAR,GAAcO,GAAiBD,GAC/BO,EAAoBzB,GAAYsB,EAAeH,EAAgB,CACjEjJ,KAAMttB,MAAMC,QAAQw2B,GACdA,GA9BSr4B,EA+BKm4B,EA/BGvJ,EA+BayJ,EA9BjCr4B,EAAOoC,KAAI,IAAMwsB,GAAUS,KAAWxlB,OAAO,EAAG7J,EAAOoB,OAAS,MAD3E,IAAuBpB,EAAQ4uB,EAiC3B,MAAO,CACH8J,mBAAoBR,EACpB/nB,KAAOlJ,IACH6G,EAAMhN,MAAQ23B,EAAkBxxB,GAChC6G,EAAMsC,KAAOnJ,GAAKixB,EACXpqB,GAGnB,CE1CA,SAAS6qB,GAAkBtK,EAAUuK,GACjC,OAAOA,EAAgBvK,GAAY,IAAOuK,GAAiB,CAC/D,CCNA,MAAMC,GAAyB,EAC/B,SAASC,GAAsBC,EAAc9xB,EAAG3E,GAC5C,MAAM02B,EAAQ1e,KAAKP,IAAI9S,EAAI4xB,GAAwB,GACnD,OAAOF,GAAkBr2B,EAAUy2B,EAAaC,GAAQ/xB,EAAI+xB,EAChE,CCFA,MAAMC,GAAU,KACVC,GAAc,IACdC,GAAc,GACdC,GAAa,IACbC,GAAa,EACnB,SAASC,GAAU14B,GAA6D,IACxE24B,EACAC,GAFY,SAAEtB,EAAW,IAAG,OAAEuB,EAAS,IAAI,SAAEpL,EAAW,EAAC,KAAEqL,EAAO,GAAI94B,GAG1Ek2B,EAAAA,GAAAA,GAAQoB,GAAY5J,GAAsB6K,IAAc,8CACxD,IAAIQ,EAAe,EAAIF,EAIvBE,EAAe9f,EAAMuf,GAAYC,GAAYM,GAC7CzB,EAAWre,EAAMqf,GAAaC,GAAa3K,GAAsB0J,IAC7DyB,EAAe,GAIfJ,EAAYK,IACR,MAAMC,EAAmBD,EAAeD,EAClCG,EAAQD,EAAmB3B,EAC3Bz5B,EAAIo7B,EAAmBxL,EACvB3vB,EAAIq7B,GAAgBH,EAAcD,GAClCh7B,EAAI2b,KAAK0f,KAAKF,GACpB,OAAOb,GAAWx6B,EAAIC,EAAKC,CAAC,EAEhC66B,EAAcI,IACV,MACME,EADmBF,EAAeD,EACPzB,EAC3Bt5B,EAAIk7B,EAAQzL,EAAWA,EACvBxvB,EAAIyb,KAAKgX,IAAIqI,EAAc,GAAKrf,KAAKgX,IAAIsI,EAAc,GAAK1B,EAC5Dp5B,EAAIwb,KAAK0f,KAAKF,GACd5G,EAAI6G,GAAgBzf,KAAKgX,IAAIsI,EAAc,GAAID,GAErD,QADgBJ,EAASK,GAAgBX,GAAU,GAAK,EAAI,KACzCr6B,EAAIC,GAAKC,GAAMo0B,CAAC,IAOvCqG,EAAYK,GACEtf,KAAK0f,KAAKJ,EAAe1B,KACxB0B,EAAevL,GAAY6J,EAAW,GACzCe,GAEZO,EAAcI,GACAtf,KAAK0f,KAAKJ,EAAe1B,IACIA,EAAWA,GAAvC7J,EAAWuL,KAI9B,MACMA,EAmBV,SAAyBL,EAAUC,EAAYS,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAI94B,EAAI,EAAGA,EAAIg5B,GAAgBh5B,IAChC+4B,GAAkBX,EAASW,GAAUV,EAAWU,GAEpD,OAAOA,CACX,CAzByBE,CAAgBb,EAAUC,EAD1B,EAAItB,GAGzB,GADAA,EAAW5J,GAAsB4J,GAC7BxC,MAAMkE,GACN,MAAO,CACHS,UAAW,IACXC,QAAS,GACTpC,YAGH,CACD,MAAMmC,EAAY/f,KAAKgX,IAAIsI,EAAc,GAAKF,EAC9C,MAAO,CACHW,YACAC,QAAwB,EAAfX,EAAmBrf,KAAKqZ,KAAK+F,EAAOW,GAC7CnC,WAER,CACJ,CACA,MAAMiC,GAAiB,GAQvB,SAASJ,GAAgBH,EAAcD,GACnC,OAAOC,EAAetf,KAAKqZ,KAAK,EAAIgG,EAAeA,EACvD,CClFA,MAAMY,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa5b,EAASjc,GAC3B,OAAOA,EAAK4I,MAAM3K,QAAyB7B,IAAjB6f,EAAQhe,IACtC,CAuBA,SAAS65B,GAAM95B,GAAkD,IAAjD,UAAEq3B,EAAS,UAAE0C,EAAS,UAAEC,KAAc/b,GAASje,EAC3D,MAAMygB,EAAS4W,EAAU,GACnBnY,EAASmY,EAAUA,EAAU72B,OAAS,GAKtC0M,EAAQ,CAAEsC,MAAM,EAAOtP,MAAOugB,IAC9B,UAAEgZ,EAAS,QAAEC,EAAO,KAAEZ,EAAI,SAAExB,EAAQ,SAAE7J,EAAQ,uBAAEwM,GA9B1D,SAA0Bhc,GACtB,IAAIic,EAAgB,CAChBzM,SAAU,EACVgM,UAAW,IACXC,QAAS,GACTZ,KAAM,EACNmB,wBAAwB,KACrBhc,GAGP,IAAK4b,GAAa5b,EAAS2b,KACvBC,GAAa5b,EAAS0b,IAAe,CACrC,MAAMQ,EAAUzB,GAAWza,GAC3Bic,EAAgB,IACTA,KACAC,EACHrB,KAAM,GAEVoB,EAAcD,wBAAyB,CAC3C,CACA,OAAOC,CACX,CASsFE,CAAiB,IAC5Fnc,EACHwP,UAAWG,GAAsB3P,EAAQwP,UAAY,KAEnD4M,EAAkB5M,GAAY,EAC9BsL,EAAeW,GAAW,EAAIhgB,KAAKqZ,KAAK0G,EAAYX,IACpDwB,EAAepb,EAASuB,EACxB8Z,EAAsB3M,GAAsBlU,KAAKqZ,KAAK0G,EAAYX,IAQlE0B,EAAkB9gB,KAAKqW,IAAIuK,GAAgB,EAGjD,IAAIG,EACJ,GAHAT,IAAcA,EAAYQ,EAAkB,IAAO,GACnDT,IAAcA,EAAYS,EAAkB,KAAQ,IAEhDzB,EAAe,EAAG,CAClB,MAAM2B,EAAcvB,GAAgBoB,EAAqBxB,GAEzD0B,EAAiBp0B,IACb,MAAMsyB,EAAWjf,KAAK0f,KAAKL,EAAewB,EAAsBl0B,GAChE,OAAQ6Y,EACJyZ,IACO0B,EACCtB,EAAewB,EAAsBD,GACrCI,EACAhhB,KAAK0W,IAAIsK,EAAcr0B,GACvBi0B,EAAe5gB,KAAKihB,IAAID,EAAcr0B,GAAG,CAE7D,MACK,GAAqB,IAAjB0yB,EAEL0B,EAAiBp0B,GAAM6Y,EACnBxF,KAAK0f,KAAKmB,EAAsBl0B,IAC3Bi0B,GACID,EAAkBE,EAAsBD,GAAgBj0B,OAEpE,CAED,MAAMu0B,EAAoBL,EAAsB7gB,KAAKqZ,KAAKgG,EAAeA,EAAe,GACxF0B,EAAiBp0B,IACb,MAAMsyB,EAAWjf,KAAK0f,KAAKL,EAAewB,EAAsBl0B,GAE1Dw0B,EAAWnhB,KAAKR,IAAI0hB,EAAoBv0B,EAAG,KACjD,OAAQ6Y,EACHyZ,IACK0B,EACEtB,EAAewB,EAAsBD,GACrC5gB,KAAKohB,KAAKD,GACVD,EACIN,EACA5gB,KAAKqhB,KAAKF,IAClBD,CAAiB,CAEjC,CACA,MAAO,CACH9C,mBAAoBmC,GAAyB3C,GAAmB,KAChE/nB,KAAOlJ,IACH,MAAM3E,EAAU+4B,EAAcp0B,GAC9B,GAAK4zB,EAqBD/sB,EAAMsC,KAAOnJ,GAAKixB,MArBO,CACzB,IAAIrT,EAAkBoW,EACZ,IAANh0B,IAOI4d,EADA8U,EAAe,EACGb,GAAsBuC,EAAep0B,EAAG3E,GAGxC,GAG1B,MAAMs5B,EAA2BthB,KAAKqW,IAAI9L,IAAoB+V,EACxDiB,EAA+BvhB,KAAKqW,IAAI7Q,EAASxd,IAAYq4B,EACnE7sB,EAAMsC,KACFwrB,GAA4BC,CACpC,CAKA,OADA/tB,EAAMhN,MAAQgN,EAAMsC,KAAO0P,EAASxd,EAC7BwL,CAAK,EAGxB,CC7HA,SAASguB,GAAOl7B,GAAiK,IAAhK,UAAEq3B,EAAS,SAAE5J,EAAW,EAAG,MAAE0N,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAEriB,EAAG,IAAEC,EAAG,UAAE4gB,EAAY,GAAG,UAAEC,GAAYh6B,EAC3K,MAAMygB,EAAS4W,EAAU,GACnBnqB,EAAQ,CACVsC,MAAM,EACNtP,MAAOugB,GAGL+a,EAAmBvpB,QACT7T,IAAR8a,EACOC,OACC/a,IAAR+a,GAEGO,KAAKqW,IAAI7W,EAAMjH,GAAKyH,KAAKqW,IAAI5W,EAAMlH,GAD/BiH,EAC0CC,EAEzD,IAAIsiB,EAAYN,EAAQ1N,EACxB,MAAMiO,EAAQjb,EAASgb,EACjBvc,OAA0B9gB,IAAjBm9B,EAA6BG,EAAQH,EAAaG,GAK7Dxc,IAAWwc,IACXD,EAAYvc,EAASuB,GACzB,MAAMkb,EAAat1B,IAAOo1B,EAAY/hB,KAAK0f,KAAK/yB,EAAI+0B,GAC9CQ,EAAcv1B,GAAM6Y,EAASyc,EAAUt1B,GACvCw1B,EAAiBx1B,IACnB,MAAM6yB,EAAQyC,EAAUt1B,GAClBib,EAASsa,EAAWv1B,GAC1B6G,EAAMsC,KAAOkK,KAAKqW,IAAImJ,IAAUa,EAChC7sB,EAAMhN,MAAQgN,EAAMsC,KAAO0P,EAASoC,CAAM,EAQ9C,IAAIwa,EACAC,EACJ,MAAMC,EAAsB31B,IAjCL4L,SAkCA/E,EAAMhN,WAlCS9B,IAAR8a,GAAqBjH,EAAIiH,QAAiB9a,IAAR+a,GAAqBlH,EAAIkH,KAoCrF2iB,EAAsBz1B,EACtB01B,EAAWjC,GAAO,CACdzC,UAAW,CAACnqB,EAAMhN,MAAOs7B,EAAgBtuB,EAAMhN,QAC/CutB,SAAUyK,GAAsB0D,EAAYv1B,EAAG6G,EAAMhN,OACrDw5B,QAAS2B,EACT5B,UAAW6B,EACXvB,YACAC,cACF,EAGN,OADAgC,EAAmB,GACZ,CACHlE,mBAAoB,KACpBvoB,KAAOlJ,IAOH,IAAI41B,GAAkB,EAUtB,OATKF,QAAoC39B,IAAxB09B,IACbG,GAAkB,EAClBJ,EAAcx1B,GACd21B,EAAmB31B,SAMKjI,IAAxB09B,GAAqCz1B,EAAIy1B,EAClCC,EAASxsB,KAAKlJ,EAAIy1B,KAGxBG,GAAmBJ,EAAcx1B,GAC3B6G,EACX,EAGZ,C,eCjFA,IAAIgvB,GACJ,SAASC,KACLD,QAAM99B,CACV,CASA,MAAMg+B,GAAO,CACTF,IAAKA,UACW99B,IAAR89B,IACAE,GAAK7kB,IAAI8kB,GAAAA,UAAUC,cAAgBC,GAAAA,EAAmBC,gBAChDH,GAAAA,UAAUI,UACVC,YAAYR,OAEfA,IAEX3kB,IAAMolB,IACFT,GAAMS,EACN9qB,eAAesqB,GAAU,GCvB3BS,GAAmB9mB,IACrB,MAAM+mB,EAAgB78B,IAAA,IAAC,UAAEy8B,GAAWz8B,EAAA,OAAK8V,EAAO2mB,EAAU,EAC1D,MAAO,CACHtqB,MAAOA,IAAMyT,GAAAA,GAAM9P,OAAO+mB,GAAe,GACzCC,KAAMA,KAAMC,EAAAA,GAAAA,IAAYF,GAKxBX,IAAKA,IAAOG,GAAAA,UAAUC,aAAeD,GAAAA,UAAUI,UAAYL,GAAKF,MACnE,ECTCc,GAAuB,IAC7B,SAASC,GAAsBC,GAC3B,IAAI5F,EAAW,EAEf,IAAIpqB,EAAQgwB,EAAU3tB,KAAK+nB,GAC3B,MAAQpqB,EAAMsC,MAAQ8nB,EAAW0F,IAC7B1F,GAHa,GAIbpqB,EAAQgwB,EAAU3tB,KAAK+nB,GAE3B,OAAOA,GAAY0F,GAAuBG,IAAW7F,CACzD,CCHA,MAAMjD,GAAQ,CACV+I,MAAOlC,GACPA,QAAO,GACPmC,MAAOhG,GACPA,UAAWA,GACXyC,OAAMA,IAEJwD,GAAqBljB,GAAYA,EAAU,IAQjD,SAASmjB,GAAYv9B,GAA2M,IAGxNw9B,EACAC,GAJc,SAAEC,GAAW,EAAI,MAAEC,EAAQ,EAAC,OAAEC,EAAShB,GAAiBvF,UAAWwG,EAAW,KAAE9+B,EAAO,YAAW,OAAE++B,EAAS,EAAC,YAAEC,EAAc,EAAC,WAAEC,EAAa,OAAM,OAAEC,EAAM,OAAEC,EAAM,WAAEC,EAAU,SAAEC,KAAangB,GAASje,EACtNq+B,EAAQ,EACRC,GAAa,EAOjB,MAAMC,EAAwBA,KAC1Bd,EAAyB,IAAIe,SAASC,IAClCjB,EAAyBiB,CAAO,GAClC,EAIN,IAAIC,EADJH,IAEA,MAAMI,EAAmBtK,GAAMt1B,IAASs4B,GAKxC,IAAIuH,EACAD,IAAqBtH,IACK,kBAAnBwG,EAAY,KAInBe,EAAwB1X,GAAKoW,GAAmBlZ,GAAIyZ,EAAY,GAAIA,EAAY,KAChFA,EAAc,CAAC,EAAG,MAEtB,MAAMX,EAAYyB,EAAiB,IAAK1gB,EAASoZ,UAAWwG,IAC5D,IAAIgB,EACe,WAAfb,IACAa,EAAoBF,EAAiB,IAC9B1gB,EACHoZ,UAAW,IAAIwG,GAAah8B,UAC5B4rB,WAAYxP,EAAQwP,UAAY,MAGxC,IAAIqR,EAAY,OACZC,EAAW,KACXC,EAAY,KACZC,EAAa,KASoB,OAAjC/B,EAAUpF,oBAA+BgG,IACzCZ,EAAUpF,mBAAqBmF,GAAsBC,IAEzD,MAAM,mBAAEpF,GAAuBoF,EAC/B,IAAIgC,EAAmB/B,IACnBgC,EAAgBhC,IACO,OAAvBrF,IACAoH,EAAmBpH,EAAqBiG,EACxCoB,EAAgBD,GAAoBpB,EAAS,GAAKC,GAEtD,IAAIqB,EAAc,EAClB,MAAMC,EAAQ5C,IACV,GAAkB,OAAduC,EACA,OAOAX,EAAQ,IACRW,EAAYtlB,KAAKR,IAAI8lB,EAAWvC,IAChC4B,EAAQ,IACRW,EAAYtlB,KAAKR,IAAIujB,EAAY0C,EAAgBd,EAAOW,IAExDI,EADa,OAAbL,EACcA,EAMArlB,KAAKC,MAAM8iB,EAAYuC,GAAaX,EAGtD,MAAMiB,EAAmBF,EAAczB,GAASU,GAAS,EAAI,GAAK,GAC5DkB,EAAiBlB,GAAS,EAAIiB,EAAmB,EAAIA,EAAmBH,EAC9EC,EAAc1lB,KAAKP,IAAImmB,EAAkB,GAKvB,aAAdR,GAAyC,OAAbC,IAC5BK,EAAcD,GAElB,IAAIK,EAAUJ,EACVK,EAAiBvC,EACrB,GAAIY,EAAQ,CAMR,MAAM9M,EAAWtX,KAAKR,IAAIkmB,EAAaD,GAAiBD,EAKxD,IAAIQ,EAAmBhmB,KAAKimB,MAAM3O,GAK9B4O,EAAoB5O,EAAW,GAK9B4O,GAAqB5O,GAAY,IAClC4O,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBhmB,KAAKR,IAAIwmB,EAAkB5B,EAAS,GAIhCrrB,QAAQitB,EAAmB,KAE3B,YAAf1B,GACA4B,EAAoB,EAAIA,EACpB7B,IACA6B,GAAqB7B,EAAcmB,IAGnB,WAAflB,IACLyB,EAAiBZ,IAGzBW,EAAUvmB,EAAM,EAAG,EAAG2mB,GAAqBV,CAC/C,CAMA,MAAMhyB,EAAQqyB,EACR,CAAE/vB,MAAM,EAAOtP,MAAO29B,EAAY,IAClC4B,EAAelwB,KAAKiwB,GACtBZ,IACA1xB,EAAMhN,MAAQ0+B,EAAsB1xB,EAAMhN,QAE9C,IAAI,KAAEsP,GAAStC,EACVqyB,GAAyC,OAAvBzH,IACnBtoB,EAAO6uB,GAAS,EAAIe,GAAeD,EAAgBC,GAAe,GAEtE,MAAMS,EAAmC,OAAbd,IACT,aAAdD,GAA2C,YAAdA,GAA2BtvB,GAO7D,OANI4uB,GACAA,EAASlxB,EAAMhN,OAEf2/B,GACAC,IAEG5yB,CAAK,EAEV6yB,EAAsBA,KACxBrB,GAAmBA,EAAgB5B,OACnC4B,OAAkBtgC,CAAS,EAEzBsT,EAASA,KACXotB,EAAY,OACZiB,IACAvC,IACAe,IACAS,EAAYC,EAAa,IAAI,EAE3Ba,EAASA,KACXhB,EAAY,WACZX,GAAcA,IACd4B,IACAvC,GAAwB,EAEtBwC,EAAOA,KACT,GAAI1B,EACA,OACCI,IACDA,EAAkBd,EAAOyB,IAC7B,MAAMnD,EAAMwC,EAAgBxC,MAC5B+B,GAAUA,IACO,OAAbc,EACAC,EAAY9C,EAAM6C,EAEZC,GAA2B,aAAdF,IACnBE,EAAY9C,GAEE,aAAd4C,GACAP,IAEJU,EAAaD,EACbD,EAAW,KAKXD,EAAY,UACZJ,EAAgBvsB,OAAO,EAEvBurB,GACAsC,IAEJ,MAAMC,EAAW,CACbC,KAAIA,CAACzB,EAAS0B,IACH1C,EAAuByC,KAAKzB,EAAS0B,GAEhD,QAAI/D,GACA,OAAOxO,GAAsBwR,EACjC,EACA,QAAIhD,CAAKO,GACLA,EAAUjP,GAAsBiP,GAChCyC,EAAczC,EACG,OAAboC,GAAsBL,GAA6B,IAAVL,EAIzCW,EAAYN,EAAgBxC,MAAQS,EAAU0B,EAH9CU,EAAWpC,CAKnB,EACA,YAAIrF,GACA,MAAMA,EAA4C,OAAjC4F,EAAUpF,mBACrBmF,GAAsBC,GACtBA,EAAUpF,mBAChB,OAAOlK,GAAsB0J,EACjC,EACA,SAAI+G,GACA,OAAOA,CACX,EACA,SAAIA,CAAM+B,GACFA,IAAa/B,GAAUK,IAE3BL,EAAQ+B,EACRH,EAAS7D,KAAOxO,GAAsBwR,GAC1C,EACA,SAAIlyB,GACA,OAAO4xB,CACX,EACAkB,OACAK,MAAOA,KACHvB,EAAY,SACZC,EAAWK,CAAW,EAE1BtC,KAAMA,KACFwB,GAAa,EACK,SAAdQ,IAEJA,EAAY,OACZZ,GAAUA,IACVxsB,IAAQ,EAEZA,OAAQA,KACe,OAAfutB,GACAI,EAAKJ,GACTvtB,GAAQ,EAEZ4uB,SAAUA,KACNxB,EAAY,UAAU,EAE1ByB,OAASf,IACLR,EAAY,EACLK,EAAKG,KAGpB,OAAOS,CACX,CClSA,MAAMO,GCTN,SAAcnX,GACV,IAAIiQ,EACJ,MAAO,UACYl7B,IAAXk7B,IACAA,EAASjQ,KACNiQ,EAEf,CDEsBmH,EAAK,IAAMthC,OAAOwB,eAAeC,KAAKgO,QAAQlO,UAAW,aAIzEggC,GAAoB,IAAI1xB,IAAI,CAC9B,UACA,WACA,SACA,cAgBJ,SAAS2xB,GAA2BzgC,EAAO0gC,EAAS5gC,GAAwC,IAAtC,SAAEo+B,EAAQ,WAAED,KAAelgB,GAASje,EAOtF,KAN+BwgC,MAC3BE,GAAkBjxB,IAAImxB,KACrB3iB,EAAQ8f,aACc,WAAvB9f,EAAQ+f,YACY,IAApB/f,EAAQyb,SACS,YAAjBzb,EAAQlf,MAER,OAAO,EAIX,IACIy+B,EACAC,EAFAa,GAAa,EAQbuC,GAAgB,EAKpB,MAAMtC,EAAwBA,KAC1Bd,EAAyB,IAAIe,SAASC,IAClCjB,EAAyBiB,CAAO,GAClC,EAGNF,IACA,IAAI,UAAElH,EAAS,SAAEC,EAAW,IAAG,KAAEhJ,EAAI,MAAEkJ,GAAUvZ,EAIjD,GAvCkC6iB,EAACF,EAAW3iB,IAA6B,WAAjBA,EAAQlf,MACpD,oBAAd6hC,IACC3S,GAAuBhQ,EAAQqQ,MAqC5BwS,CAA8BF,EAAW3iB,GAAU,CACnD,MAAM8iB,EAAkBxD,GAAa,IAC9Btf,EACH6f,OAAQ,EACRH,MAAO,IAEX,IAAIzwB,EAAQ,CAAEsC,MAAM,EAAOtP,MAAOm3B,EAAU,IAC5C,MAAM2J,EAAwB,GAK9B,IAAI36B,EAAI,EACR,MAAQ6G,EAAMsC,MAAQnJ,EArDV,KAsDR6G,EAAQ6zB,EAAgBR,OAAOl6B,GAC/B26B,EAAsB99B,KAAKgK,EAAMhN,OACjCmG,GA7DQ,GA+DZmxB,OAAQp5B,EACRi5B,EAAY2J,EACZ1J,EAAWjxB,EAjEC,GAkEZioB,EAAO,QACX,CACA,MAAMlb,EE1FV,SAAsB0P,EAAS8d,EAAWvJ,GAAwF,IAA7E,MAAEsG,EAAQ,EAAC,SAAErG,EAAQ,OAAEwG,EAAS,EAAC,WAAEE,EAAa,OAAM,KAAE1P,EAAI,MAAEkJ,GAAQhzB,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3H,MAAMy8B,EAAkB,CAAE,CAACL,GAAYvJ,GACnCG,IACAyJ,EAAgBvgB,OAAS8W,GAC7B,MAAMxJ,EAASc,GAAwBR,GAMvC,OAFIttB,MAAMC,QAAQ+sB,KACdiT,EAAgBjT,OAASA,GACtBlL,EAAQvQ,QAAQ0uB,EAAiB,CACpCtD,QACArG,WACAtJ,OAAShtB,MAAMC,QAAQ+sB,GAAmB,SAATA,EACjCkT,KAAM,OACNC,WAAYrD,EAAS,EACrBsD,UAA0B,YAAfpD,EAA2B,YAAc,UAE5D,CFwEsBqD,CAAanhC,EAAMohC,MAAM5/B,QAASk/B,EAAWvJ,EAAW,IACnEpZ,EACHqZ,WASAhJ,KAAMA,EACNkJ,UAEE+J,EAAkBA,KACpBV,GAAgB,EAChBztB,EAAU1B,QAAQ,EAEhB8vB,EAAaA,KACfX,GAAgB,EAChBjb,GAAAA,GAAM9P,OAAOyrB,GACb/D,IACAe,GAAuB,EAU3BnrB,EAAUquB,SAAW,KACbZ,IAEJ3gC,EAAMqX,IG/Hd,SAA0B8f,EAASr3B,GAAmC,IAAjC,OAAE89B,EAAM,WAAEE,EAAa,QAAQh+B,EAIhE,OAAOq3B,EAHOyG,GAAyB,SAAfE,GAAyBF,EAAS,IAAM,EAC1D,EACAzG,EAAU72B,OAAS,EAE7B,CH0HkBkhC,CAAiBrK,EAAWpZ,IACtCkgB,GAAcA,IACdqD,IAAY,EAoEhB,MA/DiB,CACbtB,KAAIA,CAACzB,EAAS0B,IACH1C,EAAuByC,KAAKzB,EAAS0B,GAEhDwB,eAAeC,IACXxuB,EAAUwuB,SAAWA,EACrBxuB,EAAUquB,SAAW,KACdpW,GAAAA,GAEX,QAAI+Q,GACA,OAAOxO,GAAsBxa,EAAUgsB,aAAe,EAC1D,EACA,QAAIhD,CAAKO,GACLvpB,EAAUgsB,YAAc1R,GAAsBiP,EAClD,EACA,SAAI0B,GACA,OAAOjrB,EAAUyuB,YACrB,EACA,SAAIxD,CAAM+B,GACNhtB,EAAUyuB,aAAezB,CAC7B,EACA,YAAI9I,GACA,OAAO1J,GAAsB0J,EACjC,EACA0I,KAAMA,KACE1B,IAEJlrB,EAAU4sB,QAIVjD,EAAAA,GAAAA,IAAYwE,GAAgB,EAEhClB,MAAOA,IAAMjtB,EAAUitB,QACvBvD,KAAMA,KAEF,GADAwB,GAAa,EACe,SAAxBlrB,EAAU0rB,UACV,OASJ,MAAM,YAAEM,GAAgBhsB,EACxB,GAAIgsB,EAAa,CACb,MAAM2B,EAAkBxD,GAAa,IAC9Btf,EACHyf,UAAU,IAEdx9B,EAAM4hC,gBAAgBf,EAAgBR,OAAOnB,EAlKzC,IAkKoEl/B,MAAO6gC,EAAgBR,OAAOnB,GAAal/B,MAlK/G,GAmKR,CACAshC,GAAY,EAEhBlB,SAAUA,KACFO,GAEJztB,EAAU0sB,QAAQ,EAEtBpuB,OAAQ8vB,EAGhB,CIpMA,MAAMO,GAAoB,CACtBhjC,KAAM,SACN06B,UAAW,IACXC,QAAS,GACTM,UAAW,IAQTgI,GAAsB,CACxBjjC,KAAM,YACNu4B,SAAU,IAMRhJ,GAAO,CACTvvB,KAAM,YACNuvB,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBgJ,SAAU,IAER2K,GAAuBA,CAACC,EAAQliC,KAAoB,IAAlB,UAAEq3B,GAAWr3B,EACjD,OAAIq3B,EAAU72B,OAAS,EACZwhC,GAEFnqB,EAAepI,IAAIyyB,GACjBA,EAASnqB,WAAW,SAxBG,CAClChZ,KAAM,SACN06B,UAAW,IACXC,QAAoB,IAsBarC,EAAU,GAtBnB,EAAI3d,KAAKqZ,KAAK,KAAO,GAC7CiH,UAAW,IAsBD+H,GAEHzT,EAAI,ECzBT6T,GAAeA,CAACliC,EAAKC,IAEX,WAARD,MAKiB,kBAAVC,IAAsBc,MAAMC,QAAQf,OAE1B,kBAAVA,IACN00B,GAAQld,KAAKxX,IAAoB,MAAVA,GACvBA,EAAM6X,WAAW,UChBpBqqB,GAAc,IAAIpzB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASqzB,GAAmBpwB,GACxB,MAAOxT,EAAMyB,GAAS+R,EAAE7H,MAAM,GAAI,GAAGoB,MAAM,KAC3C,GAAa,gBAAT/M,EACA,OAAOwT,EACX,MAAOmH,GAAUlZ,EAAM8P,MAAM4J,IAAe,GAC5C,IAAKR,EACD,OAAOnH,EACX,MAAMgI,EAAO/Z,EAAM1B,QAAQ4a,EAAQ,IACnC,IAAIkpB,EAAeF,GAAY3yB,IAAIhR,GAAQ,EAAI,EAG/C,OAFI2a,IAAWlZ,IACXoiC,GAAgB,KACb7jC,EAAO,IAAM6jC,EAAeroB,EAAO,GAC9C,CACA,MAAMsoB,GAAgB,oBAChBhhC,GAAS,IACRqzB,GACHG,kBAAoB9iB,IAChB,MAAMuwB,EAAYvwB,EAAEjC,MAAMuyB,IAC1B,OAAOC,EAAYA,EAAUhhC,IAAI6gC,IAAoBnhC,KAAK,KAAO+Q,CAAC,GClBpEwwB,GAAoB,IACnB/nB,GAEHwY,MAAK,GACLwP,gBAAiBxP,GACjByP,aAAczP,GACdgO,KAAMhO,GACN0P,OAAQ1P,GAER2P,YAAa3P,GACb4P,eAAgB5P,GAChB6P,iBAAkB7P,GAClB8P,kBAAmB9P,GACnB+P,gBAAiB/P,GACjB3xB,OAAM,GACN2hC,aAAc3hC,IAKZ4hC,GAAuBljC,GAAQwiC,GAAkBxiC,GCvBvD,SAAS80B,GAAkB90B,EAAKC,GAC5B,IAAIkjC,EAAmBD,GAAoBljC,GAI3C,OAHImjC,IAAqB7hC,KACrB6hC,EAAmBxO,IAEhBwO,EAAiBrO,kBAClBqO,EAAiBrO,kBAAkB70B,QACnC9B,CACV,CCTA,MAAMilC,GAAqBpxB,GAAM,aAAayF,KAAKzF,GCDnD,SAASqxB,GAAOpjC,GACZ,MAAqB,kBAAVA,EACU,IAAVA,EAEQ,OAAVA,EACY,SAAVA,GAA8B,MAAVA,GAAiBmjC,GAAkBnjC,QAD7D,CAGT,CCDA,SAASqjC,GAAmB9d,EAAYxlB,GACpC,OAAOwlB,EAAWxlB,IAAQwlB,EAAoB,SAAKA,CACvD,CCEA,MAAM+d,GAAqB,SAAC5C,EAAW1gC,EAAOgf,GAA4B,IAApBuG,EAAUjhB,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChE,OAAQ25B,IACJ,MAAMsF,EAAkBF,GAAmB9d,EAAYmb,IAAc,CAAC,EAMhEjD,EAAQ8F,EAAgB9F,OAASlY,EAAWkY,OAAS,EAK3D,IAAI,QAAE6B,EAAU,GAAM/Z,EACtB+Z,GAAoB9R,GAAsBiQ,GAC1C,MAAMtG,ECvBd,SAAsBn3B,EAAO0gC,EAAW1hB,EAAQuG,GAC5C,MAAMie,EAAqBvB,GAAavB,EAAW1hB,GACnD,IAAImY,EAEAA,EADAr2B,MAAMC,QAAQie,GACF,IAAIA,GAGJ,CAAC,KAAMA,GAEvB,MAAMykB,OAAoCvlC,IAApBqnB,EAAWwL,KAAqBxL,EAAWwL,KAAO/wB,EAAM2I,MAC9E,IAAI+6B,EACJ,MAAMC,EAAsB,GAC5B,IAAK,IAAItjC,EAAI,EAAGA,EAAI82B,EAAU72B,OAAQD,IAIb,OAAjB82B,EAAU92B,KACV82B,EAAU92B,GAAW,IAANA,EAAUojC,EAAgBtM,EAAU92B,EAAI,IAEvD+iC,GAAOjM,EAAU92B,KACjBsjC,EAAoB3gC,KAAK3C,GAGD,kBAAjB82B,EAAU92B,IACA,SAAjB82B,EAAU92B,IACO,MAAjB82B,EAAU92B,KACVqjC,EAA0BvM,EAAU92B,IAG5C,GAAImjC,GACAG,EAAoBrjC,QACpBojC,EACA,IAAK,IAAIrjC,EAAI,EAAGA,EAAIsjC,EAAoBrjC,OAAQD,IAE5C82B,EADcwM,EAAoBtjC,IACfw0B,GAAkB6L,EAAWgD,GAGxD,OAAOvM,CACX,CDf0ByM,CAAa5jC,EAAO0gC,EAAW1hB,EAAQukB,GAMnDM,EAAiB1M,EAAU,GAC3B2M,EAAiB3M,EAAUA,EAAU72B,OAAS,GAC9CyjC,EAAqB9B,GAAavB,EAAWmD,GAC7CL,EAAqBvB,GAAavB,EAAWoD,IACnD9N,EAAAA,GAAAA,GAAQ+N,IAAuBP,EAAoB,6BAAFthC,OAA+Bw+B,EAAS,WAAAx+B,OAAU2hC,EAAc,UAAA3hC,OAAS4hC,EAAc,OAAA5hC,OAAM2hC,EAAc,+DAAA3hC,OAA8D2hC,EAAc,8BAAA3hC,OAA6B4hC,EAAc,+BACnR,IAAI/lB,EAAU,CACVoZ,YACA5J,SAAUvtB,EAAM+X,cAChBqW,KAAM,aACHmV,EACH9F,OAAQ6B,EACRpB,SAAWnsB,IACP/R,EAAMqX,IAAItF,GACVwxB,EAAgBrF,UAAYqF,EAAgBrF,SAASnsB,EAAE,EAE3DksB,WAAYA,KACRA,IACAsF,EAAgBtF,YAAcsF,EAAgBtF,YAAY,GAwBlE,GDrER,SAA4Bn+B,GAA2I,IAA1I,KAAEkkC,EAAMvG,MAAOwG,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAExG,EAAM,WAAEE,EAAU,YAAED,EAAW,KAAE9M,EAAI,QAAEuO,KAAY/Z,GAAYzlB,EACjK,QAASb,OAAO6C,KAAKyjB,GAAYjlB,MACrC,CCkDa+jC,CAAoBd,KACrBxlB,EAAU,IACHA,KACAgkB,GAAqBrB,EAAW3iB,KAQvCA,EAAQqZ,WACRrZ,EAAQqZ,SAAW5J,GAAsBzP,EAAQqZ,WAEjDrZ,EAAQ8f,cACR9f,EAAQ8f,YAAcrQ,GAAsBzP,EAAQ8f,eAEnDkG,IACAP,GACD5V,KACyB,IAAzB2V,EAAgB1kC,MAChBw9B,GAAAA,EAAmBiI,eAKnB,OEhFZ,SAA+BxkC,GAA8C,IAA7C,UAAEq3B,EAAS,MAAEsG,EAAK,SAAES,EAAQ,WAAED,GAAan+B,EACvE,MAAMykC,EAAWA,KACbrG,GAAYA,EAAS/G,EAAUA,EAAU72B,OAAS,IAClD29B,GAAcA,IAQP,CACH/B,KAAM,EACNiC,MAAO,EACP/G,SAAU,EACV0I,KAAO3U,GAAAA,EACPgV,MAAQhV,GAAAA,EACRyR,KAAOzR,GAAAA,EACP6U,KAAOzB,IACHA,IACOD,QAAQC,WAEnB/sB,OAAS2Z,GAAAA,EACTiV,SAAWjV,GAAAA,IAGnB,OAAOsS,EACDJ,GAAa,CACXlG,UAAW,CAAC,EAAG,GACfC,SAAU,EACVqG,QACAQ,WAAYsG,IAEdA,GACV,CF8CmBC,CAAuB5W,GACxB,IAAK7P,EAAS0f,MAAO,GACrB1f,GAKV,IAMCwH,EAAWkf,WACRzkC,EAAMohC,OACNphC,EAAMohC,MAAM5/B,mBAAmBkjC,cAK9B1kC,EAAMohC,MAAM9Y,WAAW4V,SAAU,CAClC,MAAMyG,EAAuBlE,GAA2BzgC,EAAO0gC,EAAW3iB,GAC1E,GAAI4mB,EACA,OAAOA,CACf,CAIA,OAAOtH,GAAatf,EAAQ,CAEpC,EG/GA,SAAS6mB,GAAwB5kC,GAC7B,OAAOuS,QAAQuF,EAAc9X,IAAUA,EAAM4I,IACjD,CCDA,MAAMi8B,GAAqB9yB,GAAM,iBAAiByF,KAAKzF,GCHvD,SAAS+yB,GAAc/N,EAAKgO,IACG,IAAvBhO,EAAI90B,QAAQ8iC,IACZhO,EAAI/zB,KAAK+hC,EACjB,CACA,SAASC,GAAWjO,EAAKgO,GACrB,MAAM3hC,EAAQ2zB,EAAI90B,QAAQ8iC,GACtB3hC,GAAS,GACT2zB,EAAIhuB,OAAO3F,EAAO,EAC1B,CCNA,MAAM6hC,GACF/8B,WAAAA,GACIM,KAAK08B,cAAgB,EACzB,CACAt8B,GAAAA,CAAIqd,GAEA,OADA6e,GAAct8B,KAAK08B,cAAejf,GAC3B,IAAM+e,GAAWx8B,KAAK08B,cAAejf,EAChD,CACAkf,MAAAA,CAAOxnC,EAAGC,EAAGC,GACT,MAAMunC,EAAmB58B,KAAK08B,cAAc5kC,OAC5C,GAAK8kC,EAEL,GAAyB,IAArBA,EAIA58B,KAAK08B,cAAc,GAAGvnC,EAAGC,EAAGC,QAG5B,IAAK,IAAIwC,EAAI,EAAGA,EAAI+kC,EAAkB/kC,IAAK,CAKvC,MAAM4lB,EAAUzd,KAAK08B,cAAc7kC,GACnC4lB,GAAWA,EAAQtoB,EAAGC,EAAGC,EAC7B,CAER,CACAwnC,OAAAA,GACI,OAAO78B,KAAK08B,cAAc5kC,MAC9B,CACAglC,KAAAA,GACI98B,KAAK08B,cAAc5kC,OAAS,CAChC,EC1BJ,MAIMilC,GAAsB,CACxB/jC,aAAStD,GAOb,MAAMsnC,GASFt9B,WAAAA,CAAY+E,GAAoB,IAAAw4B,EAAA,SAAd1nB,EAAOzZ,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,EApBhBtE,MAyBTwI,KAAKk9B,QAAU,SAQfl9B,KAAKm9B,kBAAmB,EAIxBn9B,KAAKo9B,OAAS,CAAC,EACfp9B,KAAKq9B,gBAAkB,SAAC9zB,GAAqB,IAAlBvI,IAAMlF,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,KAAAA,UAAA,GAC7B,MAAM46B,EAAchD,GAAKF,MAMrByJ,EAAKK,YAAc5G,GACnBuG,EAAKM,oBAETN,EAAKtY,KAAOsY,EAAKjkC,QACjBikC,EAAKO,WAAWj0B,GAEZ0zB,EAAKjkC,UAAYikC,EAAKtY,MAAQsY,EAAKG,OAAOK,QAC1CR,EAAKG,OAAOK,OAAOd,OAAOM,EAAKjkC,SAG/BgI,GAAUi8B,EAAKG,OAAOM,eACtBT,EAAKG,OAAOM,cAAcf,OAAOM,EAAKjkC,QAE9C,EACAgH,KAAK29B,aAAc,EACnB39B,KAAKw9B,WAAW/4B,GAChBzE,KAAKm9B,kBA7DI3lC,EA6DuBwI,KAAKhH,SA5DjCozB,MAAMxb,WAAWpZ,KA6DrBwI,KAAK44B,MAAQrjB,EAAQqjB,KACzB,CACA4E,UAAAA,CAAWxkC,GACPgH,KAAKhH,QAAUA,EACfgH,KAAKs9B,UAAY5J,GAAKF,KAC1B,CACA+J,iBAAAA,GAAiD,IAA/BK,EAAc9hC,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAGkE,KAAKhH,QACpCgH,KAAK49B,eAAiBA,EACtB59B,KAAK69B,cAAgB79B,KAAKs9B,SAC9B,CAyCAQ,QAAAA,CAASC,GAIL,OAAO/9B,KAAKg+B,GAAG,SAAUD,EAC7B,CACAC,EAAAA,CAAGxgB,EAAWmD,GACL3gB,KAAKo9B,OAAO5f,KACbxd,KAAKo9B,OAAO5f,GAAa,IAAIif,IAEjC,MAAMwB,EAAcj+B,KAAKo9B,OAAO5f,GAAWpd,IAAIugB,GAC/C,MAAkB,WAAdnD,EACO,KACHygB,IAKA/gB,GAAAA,GAAMC,MAAK,KACFnd,KAAKo9B,OAAOK,OAAOZ,WACpB78B,KAAKo0B,MACT,GACF,EAGH6J,CACX,CACAC,cAAAA,GACI,IAAK,MAAMC,KAAiBn+B,KAAKo9B,OAC7Bp9B,KAAKo9B,OAAOe,GAAerB,OAEnC,CAMAsB,MAAAA,CAAOC,EAAeC,GAClBt+B,KAAKq+B,cAAgBA,EACrBr+B,KAAKs+B,kBAAoBA,CAC7B,CAgBAzvB,GAAAA,CAAItF,GAAkB,IAAfvI,IAAMlF,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,KAAAA,UAAA,GACJkF,GAAWhB,KAAKq+B,cAIjBr+B,KAAKq+B,cAAc90B,EAAGvJ,KAAKq9B,iBAH3Br9B,KAAKq9B,gBAAgB9zB,EAAGvI,EAKhC,CACAo4B,eAAAA,CAAgBzU,EAAM3rB,EAASw3B,GAC3BxwB,KAAK6O,IAAI7V,GACTgH,KAAK2kB,UAAOjvB,EACZsK,KAAK49B,eAAiBjZ,EACtB3kB,KAAK69B,cAAgB79B,KAAKs9B,UAAY9M,CAC1C,CAKA+N,IAAAA,CAAKh1B,GACDvJ,KAAKq9B,gBAAgB9zB,GACrBvJ,KAAK2kB,KAAOpb,EACZvJ,KAAK69B,cAAgB79B,KAAK49B,oBAAiBloC,EAC3CsK,KAAKo0B,OACDp0B,KAAKs+B,mBACLt+B,KAAKs+B,mBACb,CAQAn+B,GAAAA,GAII,OAHI48B,GAAoB/jC,SACpB+jC,GAAoB/jC,QAAQwB,KAAKwF,MAE9BA,KAAKhH,OAChB,CAIAwlC,WAAAA,GACI,OAAOx+B,KAAK2kB,IAChB,CAQApV,WAAAA,GACI,MAAMmnB,EAAchD,GAAKF,MACzB,IAAKxzB,KAAKm9B,uBACkBznC,IAAxBsK,KAAK49B,gBACLlH,EAAc12B,KAAKs9B,UAjOJ,GAkOf,OAAO,EAEX,MAAM9M,EAAQxf,KAAKR,IAAIxQ,KAAKs9B,UAAYt9B,KAAK69B,cApO1B,IAsOnB,OAAOxO,GAAkBze,WAAW5Q,KAAKhH,SACrC4X,WAAW5Q,KAAK49B,gBAAiBpN,EACzC,CAaA/mB,KAAAA,CAAMg1B,GAEF,OADAz+B,KAAKo0B,OACE,IAAI0B,SAASC,IAChB/1B,KAAK29B,aAAc,EACnB39B,KAAK0K,UAAY+zB,EAAe1I,GAC5B/1B,KAAKo9B,OAAOsB,gBACZ1+B,KAAKo9B,OAAOsB,eAAe/B,QAC/B,IACDnF,MAAK,KACAx3B,KAAKo9B,OAAOuB,mBACZ3+B,KAAKo9B,OAAOuB,kBAAkBhC,SAElC38B,KAAK4+B,gBAAgB,GAE7B,CAMAxK,IAAAA,GACQp0B,KAAK0K,YACL1K,KAAK0K,UAAU0pB,OACXp0B,KAAKo9B,OAAOyB,iBACZ7+B,KAAKo9B,OAAOyB,gBAAgBlC,UAGpC38B,KAAK4+B,gBACT,CAMAE,WAAAA,GACI,QAAS9+B,KAAK0K,SAClB,CACAk0B,cAAAA,UACW5+B,KAAK0K,SAChB,CAUAq0B,OAAAA,GACI/+B,KAAKk+B,iBACLl+B,KAAKo0B,OACDp0B,KAAKs+B,mBACLt+B,KAAKs+B,mBAEb,EAEJ,SAASU,GAAYv6B,EAAM8Q,GACvB,OAAO,IAAIynB,GAAYv4B,EAAM8Q,EACjC,CCvTA,MAAM0pB,GAAiB11B,GAAOlT,GAASA,EAAK2Y,KAAKzF,GCK3C21B,GAAsB,CAACxuB,EAAQiB,GAAID,GAASD,GAASI,GAAID,GCLlD,CACT5C,KAAOzF,GAAY,SAANA,EACboH,MAAQpH,GAAMA,IDOZ41B,GAA0B51B,GAAM21B,GAAoBzU,KAAKwU,GAAc11B,IEJvE61B,GAAa,IAAIF,GAAqB1U,GAAO0B,ICKnD,SAASmT,GAAe5yB,EAAelV,EAAKC,GACpCiV,EAAc6yB,SAAS/nC,GACvBkV,EAAc8yB,SAAShoC,GAAKsX,IAAIrX,GAGhCiV,EAAc+yB,SAASjoC,EAAKynC,GAAYxnC,GAEhD,CACA,SAASioC,GAAUhzB,EAAe4O,GAC9B,MAAMwB,EAAWgI,GAAepY,EAAe4O,GAC/C,IAAI,cAAEyB,EAAgB,CAAC,EAAC,WAAEC,EAAa,CAAC,KAAMvG,GAAWqG,EAAWpQ,EAAcizB,qBAAqB7iB,GAAU,GAAS,CAAC,EAC3HrG,EAAS,IAAKA,KAAWsG,GACzB,IAAK,MAAMvlB,KAAOif,EAAQ,CAEtB6oB,GAAe5yB,EAAelV,EADhBqkB,GAA6BpF,EAAOjf,IAEtD,CACJ,CAuEA,SAASooC,GAAwBpoC,EAAKwlB,GAClC,IAAKA,EACD,OAEJ,OADwBA,EAAWxlB,IAAQwlB,EAAoB,SAAKA,GAC7CwL,IAC3B,CC3FA,SAASqX,GAAoBtoC,EAAoCC,GAAK,IAAxC,cAAEsoC,EAAa,eAAEC,GAAgBxoC,EAC3D,MAAMyoC,EAAcF,EAAc5nC,eAAeV,KAAgC,IAAxBuoC,EAAevoC,GAExE,OADAuoC,EAAevoC,IAAO,EACfwoC,CACX,CACA,SAASC,GAAoBxoC,EAAOgf,GAChC,MAAMxd,EAAUxB,EAAM2I,MACtB,IAAI7H,MAAMC,QAAQie,GAOd,OAAOxd,IAAYwd,EANnB,IAAK,IAAI3e,EAAI,EAAGA,EAAI2e,EAAO1e,OAAQD,IAC/B,GAAI2e,EAAO3e,KAAOmB,EACd,OAAO,CAMvB,CACA,SAASinC,GAAcxzB,EAAe4O,GAA0D,IAA9C,MAAE4Z,EAAQ,EAAC,mBAAEiL,EAAkB,KAAE7pC,GAAMyF,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,GACrF,WAAEihB,EAAatQ,EAAc8sB,uBAAsB,cAAEzc,KAAkBtG,GAAW/J,EAAcizB,qBAAqBrkB,GACzH,MAAM8kB,EAAa1zB,EAAc8yB,SAAS,cACtCW,IACAnjB,EAAamjB,GACjB,MAAME,EAAa,GACbC,EAAqBhqC,GACvBoW,EAAcgB,gBACdhB,EAAcgB,eAAe6yB,WAAWjqC,GAC5C,IAAK,MAAMkB,KAAOif,EAAQ,CACtB,MAAMhf,EAAQiV,EAAc8yB,SAAShoC,GAC/BylB,EAAcxG,EAAOjf,GAC3B,IAAKC,QACe9B,IAAhBsnB,GACCqjB,GACGT,GAAqBS,EAAoB9oC,GAC7C,SAEJ,MAAMwjC,EAAkB,CACpB9F,QACA6B,QAAS,KACN+D,GAAmB9d,GAAc,CAAC,EAAGxlB,IAM5C,GAAI+H,OAAOihC,wBAAyB,CAChC,MAAMC,EAAW/zB,EAAcqT,WAAWjX,GAC1C,GAAI23B,EAAU,CACV,MAAM1J,EAAUx3B,OAAOihC,wBAAwBC,EAAUjpC,EAAKC,EAAO0lB,GAAAA,IACrD,OAAZ4Z,IACAiE,EAAgBjE,QAAUA,EAC1BiE,EAAgBkB,WAAY,EAEpC,CACJ,CACA,IAAIwE,GAAW1F,EAAgBkB,YAC1B+D,GAAoBxoC,EAAOwlB,GAahC,GAZ6B,WAAzB+d,EAAgB1kC,OACfmB,EAAM+X,eAAiBwrB,EAAgBhW,YACxC0b,GAAU,GAOVjpC,EAAMkT,YACN+1B,GAAU,GAEVA,EACA,SACJjpC,EAAMiS,MAAMqxB,GAAmBvjC,EAAKC,EAAOwlB,EAAavQ,EAAci0B,oBAAsBvxB,EAAepI,IAAIxP,GACzG,CAAElB,MAAM,GACR0kC,IACN,MAAMrwB,EAAYlT,EAAMkT,UACpB0xB,GAAwB+D,KACxBA,EAAW//B,IAAI7I,GACfmT,EAAU8sB,MAAK,IAAM2I,EAAW7/B,OAAO/I,MAE3C6oC,EAAW5lC,KAAKkQ,EACpB,CAMA,OALIoS,GACAgZ,QAAQpU,IAAI0e,GAAY5I,MAAK,KACzB1a,GAAiB2iB,GAAUhzB,EAAeqQ,EAAc,IAGzDsjB,CACX,CCjGA,SAASO,GAAel0B,EAAem0B,GAAuB,IAAdrrB,EAAOzZ,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAM+gB,EAAWgI,GAAepY,EAAem0B,EAASrrB,EAAQ9G,QAChE,IAAI,WAAEsO,EAAatQ,EAAc8sB,wBAA0B,CAAC,GAAM1c,GAAY,CAAC,EAC3EtH,EAAQ2qB,qBACRnjB,EAAaxH,EAAQ2qB,oBAMzB,MAAMW,EAAehkB,EACf,IAAMiZ,QAAQpU,IAAIue,GAAcxzB,EAAeoQ,EAAUtH,IACzD,IAAMugB,QAAQC,UAKd+K,EAAqBr0B,EAAcs0B,iBAAmBt0B,EAAcs0B,gBAAgBn6B,KACpF,WAAsB,IAArBo6B,EAAYllC,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,EACd,MAAM,cAAE4/B,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsB7e,EAClE,OAkBZ,SAAyBtQ,EAAem0B,GAAgF,IAAvElF,EAAa5/B,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,EAAG6/B,EAAe7/B,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,EAAG8/B,EAAgB9/B,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,EAAGyZ,EAAOzZ,UAAAhE,OAAA,EAAAgE,UAAA,QAAApG,EAClH,MAAM0qC,EAAa,GACba,GAAsBx0B,EAAcs0B,gBAAgBn6B,KAAO,GAAK+0B,EAChEuF,EAA+C,IAArBtF,EAC1B,WAAM,OAAJ9/B,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,GAAU6/B,CAAe,EAC9B,WAAM,OAAKsF,GAATnlC,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,GAA+B6/B,CAAe,EAUzD,OATArjC,MAAMiwB,KAAK9b,EAAcs0B,iBACpBI,KAAKC,IACL7mC,SAAQ,CAACyK,EAAOnN,KACjBmN,EAAM23B,OAAO,iBAAkBiE,GAC/BR,EAAW5lC,KAAKmmC,GAAe37B,EAAO47B,EAAS,IACxCrrB,EACH0f,MAAOyG,EAAgBwF,EAAwBrpC,KAChD2/B,MAAK,IAAMxyB,EAAM23B,OAAO,oBAAqBiE,KAAU,IAEvD9K,QAAQpU,IAAI0e,EACvB,CAlCmBiB,CAAgB50B,EAAem0B,EAASlF,EAAgBsF,EAAcrF,EAAiBC,EAAkBrmB,EACpH,EACE,IAAMugB,QAAQC,WAKd,KAAEyF,GAASze,EACjB,GAAIye,EAAM,CACN,MAAO8F,EAAOC,GAAiB,mBAAT/F,EAChB,CAACqF,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOS,IAAQ9J,MAAK,IAAM+J,KAC9B,CAEI,OAAOzL,QAAQpU,IAAI,CAACmf,IAAgBC,EAAmBvrB,EAAQ0f,QAEvE,CAkBA,SAASmM,GAAgBjsC,EAAGC,GACxB,OAAOD,EAAEqsC,iBAAiBpsC,EAC9B,CCpDA,MAAMqsC,GAAuB,IAAI/3B,GAAsBvQ,UACjDuoC,GAAoBh4B,EAAqB5R,OAC/C,SAAS6pC,GAAYl1B,GACjB,OAAQ2zB,GAAetK,QAAQpU,IAAI0e,EAAWtnC,KAAIxB,IAAA,IAAC,UAAEoT,EAAS,QAAE6K,GAASje,EAAA,OCP7E,SAA8BmV,EAAe4O,GAA0B,IAE/D3Q,EAFiD6K,EAAOzZ,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFA2Q,EAAckwB,OAAO,iBAAkBthB,GAEnC/iB,MAAMC,QAAQ8iB,GAAa,CAC3B,MAAM+kB,EAAa/kB,EAAWviB,KAAK8nC,GAAYD,GAAel0B,EAAem0B,EAASrrB,KACtF7K,EAAYorB,QAAQpU,IAAI0e,EAC5B,MACK,GAA0B,kBAAf/kB,EACZ3Q,EAAYi2B,GAAel0B,EAAe4O,EAAY9F,OAErD,CACD,MAAMqsB,EAA2C,oBAAfvmB,EAC5BwJ,GAAepY,EAAe4O,EAAY9F,EAAQ9G,QAClD4M,EACN3Q,EAAYorB,QAAQpU,IAAIue,GAAcxzB,EAAem1B,EAAoBrsB,GAC7E,CACA,OAAO7K,EAAU8sB,MAAK,IAAM/qB,EAAckwB,OAAO,oBAAqBthB,IAC1E,CDVkFwmB,CAAqBp1B,EAAe/B,EAAW6K,EAAQ,IACzI,CACA,SAASusB,GAAqBr1B,GAC1B,IAAI5C,EAAU83B,GAAYl1B,GAC1B,MAAMjI,EA6RC,CACHqF,QAASk4B,IAAgB,GACzBC,YAAaD,KACbhiB,WAAYgiB,KACZxqB,SAAUwqB,KACVE,UAAWF,KACXG,WAAYH,KACZp3B,KAAMo3B,MAnSV,IAAII,GAAkB,EAKtB,MAAMC,EAA0BA,CAAClnC,EAAKmgB,KAClC,MAAMwB,EAAWgI,GAAepY,EAAe4O,GAC/C,GAAIwB,EAAU,CACV,MAAM,WAAEE,EAAU,cAAED,KAAkBtG,GAAWqG,EACjD3hB,EAAM,IAAKA,KAAQsb,KAAWsG,EAClC,CACA,OAAO5hB,CAAG,EAmBd,SAASwS,EAAe6H,EAAS8sB,GAC7B,MAAMtqC,EAAQ0U,EAAcqT,WACtBngB,EAAU8M,EAAc61B,mBAAkB,IAAS,CAAC,EAKpDlC,EAAa,GAKbmC,EAAc,IAAIj8B,IAMxB,IAAIk8B,EAAkB,CAAC,EAKnBC,EAAsBhO,IAO1B,IAAK,IAAI58B,EAAI,EAAGA,EAAI6pC,GAAmB7pC,IAAK,CACxC,MAAMxB,EAAOorC,GAAqB5pC,GAC5B6qC,EAAYl+B,EAAMnO,GAClBmU,OAAuB9U,IAAhBqC,EAAM1B,GAAsB0B,EAAM1B,GAAQsJ,EAAQtJ,GACzDssC,EAAgBr5B,EAAekB,GAK/Bo4B,EAAcvsC,IAASgsC,EAAoBK,EAAUhjB,SAAW,MAClD,IAAhBkjB,IACAH,EAAsB5qC,GAO1B,IAAIgrC,EAAcr4B,IAAS7K,EAAQtJ,IAASmU,IAASzS,EAAM1B,IAASssC,EAepE,GAXIE,GACAV,GACA11B,EAAcq2B,yBACdD,GAAc,GAMlBH,EAAU7C,cAAgB,IAAK2C,IAI7BE,EAAUhjB,UAA4B,OAAhBkjB,IAElBp4B,IAASk4B,EAAUK,UAErBv5B,EAAoBgB,IACJ,mBAATA,EACP,SAQJ,IAAIw4B,EADqBC,GAAuBP,EAAUK,SAAUv4B,IAG/DnU,IAASgsC,GACNK,EAAUhjB,WACTmjB,GACDF,GAEH9qC,EAAI4qC,GAAuBE,EAC5BO,GAAuB,EAK3B,MAAMC,EAAiB7qC,MAAMC,QAAQiS,GAAQA,EAAO,CAACA,GAKrD,IAAI44B,EAAiBD,EAAe/rC,OAAOgrC,EAAyB,CAAC,IACjD,IAAhBQ,IACAQ,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMX,EAC9BY,EAAU,IACTD,KACAD,GAEDG,EAAiBhsC,IACnByrC,GAAoB,EAChBT,EAAYx7B,IAAIxP,KAChB2rC,GAAuB,EACvBX,EAAYhhB,OAAOhqB,IAEvBmrC,EAAU5C,eAAevoC,IAAO,CAAI,EAExC,IAAK,MAAMA,KAAO+rC,EAAS,CACvB,MAAMz8B,EAAOu8B,EAAe7rC,GACtBotB,EAAO0e,EAAmB9rC,GAEhC,GAAIirC,EAAgBvqC,eAAeV,GAC/B,SAIJ,IAAIisC,GAAkB,EAElBA,EADAhoB,GAAkB3U,IAAS2U,GAAkBmJ,IAC1BD,GAAe7d,EAAM8d,GAGtB9d,IAAS8d,EAE3B6e,OACa9tC,IAATmR,EAEA08B,EAAchsC,GAIdgrC,EAAYniC,IAAI7I,QAGN7B,IAATmR,GAAsB07B,EAAYx7B,IAAIxP,GAK3CgsC,EAAchsC,GAOdmrC,EAAU7C,cAActoC,IAAO,CAEvC,CAKAmrC,EAAUK,SAAWv4B,EACrBk4B,EAAUW,mBAAqBD,EAI3BV,EAAUhjB,WACV8iB,EAAkB,IAAKA,KAAoBY,IAE3CjB,GAAmB11B,EAAcS,wBACjC81B,GAAoB,IAKpBA,GAAuBH,IAAeK,GACtC9C,EAAW5lC,QAAQ2oC,EAAerqC,KAAK4R,IAAS,CAC5CA,UAAWA,EACX6K,QAAS,CAAElf,UAASkf,OAGhC,CAMA,GAAIgtB,EAAY37B,KAAM,CAClB,MAAM68B,EAAoB,CAAC,EAC3BlB,EAAYhoC,SAAShD,IACjB,MAAMmsC,EAAiBj3B,EAAck3B,cAAcpsC,QAC5B7B,IAAnBguC,IACAD,EAAkBlsC,GAAOmsC,EAC7B,IAEJtD,EAAW5lC,KAAK,CAAEkQ,UAAW+4B,GACjC,CACA,IAAIG,EAAgB75B,QAAQq2B,EAAWtoC,QAOvC,OANIqqC,IACmB,IAAlBpqC,EAAMmS,SAAqBnS,EAAMmS,UAAYnS,EAAM8R,SACnD4C,EAAcq2B,yBACfc,GAAgB,GAEpBzB,GAAkB,EACXyB,EAAgB/5B,EAAQu2B,GAActK,QAAQC,SACzD,CAkBA,MAAO,CACHroB,iBACAsS,UAhBJ,SAAmB3pB,EAAMqpB,EAAUnK,GAC/B,IAAIsC,EAEJ,GAAIrT,EAAMnO,GAAMqpB,WAAaA,EACzB,OAAOoW,QAAQC,UAEsB,QAAxCle,EAAKpL,EAAcs0B,uBAAoC,IAAPlpB,GAAyBA,EAAGtd,SAASyK,IAAY,IAAI6S,EAAI,OAAuC,QAA/BA,EAAK7S,EAAMyI,sBAAmC,IAAPoK,OAAgB,EAASA,EAAGmI,UAAU3pB,EAAMqpB,EAAS,IAC9Mlb,EAAMnO,GAAMqpB,SAAWA,EACvB,MAAM0gB,EAAa1yB,EAAe6H,EAASlf,GAC3C,IAAK,MAAMkB,KAAOiN,EACdA,EAAMjN,GAAKsoC,cAAgB,CAAC,EAEhC,OAAOO,CACX,EAIIyD,mBArPJ,SAA4BC,GACxBj6B,EAAUi6B,EAAar3B,EAC3B,EAoPI6zB,SAAUA,IAAM97B,EAExB,CACA,SAASy+B,GAAuBte,EAAM9d,GAClC,MAAoB,kBAATA,EACAA,IAAS8d,IAEXrsB,MAAMC,QAAQsO,KACX6d,GAAe7d,EAAM8d,EAGrC,CACA,SAASod,KACL,MAAO,CACHriB,SAFyB5jB,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,IAAAA,UAAA,GAGzB+jC,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBuD,mBAAoB,CAAC,EAE7B,CExSA,IAAI/0B,GAAK,ECCT,MAAM8xB,GAAa,CACf11B,UAAW,CACP4U,QCDR,cAA+BA,GAM3B5f,WAAAA,CAAY6f,GACRze,MAAMye,GACNA,EAAK9R,iBAAmB8R,EAAK9R,eAAiBq0B,GAAqBviB,GACvE,CACAwkB,mCAAAA,GACI,MAAM,QAAEl6B,GAAY7J,KAAKuf,KAAKO,WAC9B9f,KAAKkO,UACD1E,EAAoBK,KACpB7J,KAAKkO,QAAUrE,EAAQm6B,UAAUhkC,KAAKuf,MAE9C,CAIAtR,KAAAA,GACIjO,KAAK+jC,qCACT,CACA32B,MAAAA,GACI,MAAM,QAAEvD,GAAY7J,KAAKuf,KAAKO,YACtBjW,QAASo6B,GAAgBjkC,KAAKuf,KAAKzE,WAAa,CAAC,EACrDjR,IAAYo6B,GACZjkC,KAAK+jC,qCAEb,CACA71B,OAAAA,GAAY,ID3BZvD,KAAM,CACF2U,QDLR,cAAmCA,GAC/B5f,WAAAA,GACIoB,SAAShF,WACTkE,KAAKsO,GAAKA,IACd,CACAlB,MAAAA,GACI,IAAKpN,KAAKuf,KAAK3S,gBACX,OACJ,MAAM,UAAEs3B,EAAS,eAAEC,EAAc,OAAE11B,GAAWzO,KAAKuf,KAAK3S,iBAChDs3B,UAAWE,GAAkBpkC,KAAKuf,KAAK8kB,qBAAuB,CAAC,EACvE,IAAKrkC,KAAKuf,KAAK9R,gBAAkBy2B,IAAcE,EAC3C,OAEJ,MAAME,EAAgBtkC,KAAKuf,KAAK9R,eAAeuS,UAAU,QAASkkB,EAAW,CAAEz1B,OAAmB,OAAXA,QAA8B,IAAXA,EAAoBA,EAASzO,KAAKuf,KAAKO,WAAWrR,SACxJ01B,IAAmBD,GACnBI,EAAc9M,MAAK,IAAM2M,EAAenkC,KAAKsO,KAErD,CACAL,KAAAA,GACI,MAAM,SAAEs2B,GAAavkC,KAAKuf,KAAK3S,iBAAmB,CAAC,EAC/C23B,IACAvkC,KAAKkO,QAAUq2B,EAASvkC,KAAKsO,IAErC,CACAJ,OAAAA,GAAY,KG3BVsG,GAAWA,CAACrf,EAAGC,IAAM4b,KAAKqW,IAAIlyB,EAAIC,GCWxC,MAAMovC,GACF9kC,WAAAA,CAAYoe,EAAO2mB,GAAgF,IAAtE,mBAAEp8B,EAAkB,cAAEq8B,EAAa,iBAAEC,GAAmB,GAAO7oC,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,EAgE5F,GA5DAkE,KAAK+iB,WAAa,KAIlB/iB,KAAK4kC,cAAgB,KAIrB5kC,KAAK6kC,kBAAoB,KAIzB7kC,KAAKykC,SAAW,CAAC,EAIjBzkC,KAAK0kC,cAAgBplC,OACrBU,KAAK8kC,YAAc,KACf,IAAM9kC,KAAK4kC,gBAAiB5kC,KAAK6kC,kBAC7B,OACJ,MAAMhlB,EAAOklB,GAAW/kC,KAAK6kC,kBAAmB7kC,KAAKglC,SAC/CC,EAAmC,OAApBjlC,KAAK+iB,WAIpBmiB,EDxClB,SAAoB/vC,EAAGC,GAEnB,MAAM+vC,EAAS3wB,GAASrf,EAAEsa,EAAGra,EAAEqa,GACzB21B,EAAS5wB,GAASrf,EAAEua,EAAGta,EAAEsa,GAC/B,OAAOsB,KAAKqZ,KAAK8a,GAAU,EAAIC,GAAU,EAC7C,CCmC4CC,CAAWxlB,EAAK7H,OAAQ,CAAEvI,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAKu1B,IAAiBC,EAClB,OACJ,MAAM,MAAE9mB,GAAUyB,GACZ,UAAEkU,GAAcJ,GAAAA,UACtB3zB,KAAKglC,QAAQxqC,KAAK,IAAK4jB,EAAO2V,cAC9B,MAAM,QAAEuR,EAAO,OAAEC,GAAWvlC,KAAKykC,SAC5BQ,IACDK,GAAWA,EAAQtlC,KAAK4kC,cAAe/kB,GACvC7f,KAAK+iB,WAAa/iB,KAAK4kC,eAE3BW,GAAUA,EAAOvlC,KAAK4kC,cAAe/kB,EAAK,EAE9C7f,KAAKwlC,kBAAoB,CAAC1nB,EAAO+B,KAC7B7f,KAAK4kC,cAAgB9mB,EACrB9d,KAAK6kC,kBAAoBY,GAAe5lB,EAAM7f,KAAKqI,oBAEnD6U,GAAAA,GAAM9P,OAAOpN,KAAK8kC,aAAa,EAAK,EAExC9kC,KAAK0lC,gBAAkB,CAAC5nB,EAAO+B,KAC3B7f,KAAK2lC,MACL,MAAM,MAAEC,EAAK,aAAEC,EAAY,gBAAEC,GAAoB9lC,KAAKykC,SAGtD,GAFIzkC,KAAK2kC,kBACLmB,GAAmBA,KACjB9lC,KAAK4kC,gBAAiB5kC,KAAK6kC,kBAC7B,OACJ,MAAMkB,EAAUhB,GAA0B,kBAAfjnB,EAAMznB,KAC3B2J,KAAK6kC,kBACLY,GAAe5lB,EAAM7f,KAAKqI,oBAAqBrI,KAAKglC,SACtDhlC,KAAK+iB,YAAc6iB,GACnBA,EAAM9nB,EAAOioB,GAEjBF,GAAgBA,EAAa/nB,EAAOioB,EAAQ,GAG3CloB,GAAiBC,GAClB,OACJ9d,KAAK2kC,iBAAmBA,EACxB3kC,KAAKykC,SAAWA,EAChBzkC,KAAKqI,mBAAqBA,EAC1BrI,KAAK0kC,cAAgBA,GAAiBplC,OACtC,MACM0mC,EAAcP,GADPvnB,GAAiBJ,GACW9d,KAAKqI,qBACxC,MAAE+V,GAAU4nB,GACZ,UAAEjS,GAAcJ,GAAAA,UACtB3zB,KAAKglC,QAAU,CAAC,IAAK5mB,EAAO2V,cAC5B,MAAM,eAAEkS,GAAmBxB,EAC3BwB,GACIA,EAAenoB,EAAOinB,GAAWiB,EAAahmC,KAAKglC,UACvDhlC,KAAKkmC,gBAAkB1nB,GAAKF,GAAgBte,KAAK0kC,cAAe,cAAe1kC,KAAKwlC,mBAAoBlnB,GAAgBte,KAAK0kC,cAAe,YAAa1kC,KAAK0lC,iBAAkBpnB,GAAgBte,KAAK0kC,cAAe,gBAAiB1kC,KAAK0lC,iBAC9O,CACAS,cAAAA,CAAe1B,GACXzkC,KAAKykC,SAAWA,CACpB,CACAkB,GAAAA,GACI3lC,KAAKkmC,iBAAmBlmC,KAAKkmC,mBAC7B7R,EAAAA,GAAAA,IAAYr0B,KAAK8kC,YACrB,EAEJ,SAASW,GAAe5lB,EAAMxX,GAC1B,OAAOA,EAAqB,CAAE+V,MAAO/V,EAAmBwX,EAAKzB,QAAWyB,CAC5E,CACA,SAASumB,GAAcjxC,EAAGC,GACtB,MAAO,CAAEqa,EAAGta,EAAEsa,EAAIra,EAAEqa,EAAGC,EAAGva,EAAEua,EAAIta,EAAEsa,EACtC,CACA,SAASq1B,GAAUztC,EAAY0tC,GAAS,IAApB,MAAE5mB,GAAO9mB,EACzB,MAAO,CACH8mB,QACAoS,MAAO4V,GAAchoB,EAAOioB,GAAgBrB,IAC5ChtB,OAAQouB,GAAchoB,EAAOkoB,GAAiBtB,IAC9CjgB,SAAUxV,GAAYy1B,EAAS,IAEvC,CACA,SAASsB,GAAiBtB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASqB,GAAgBrB,GACrB,OAAOA,EAAQA,EAAQltC,OAAS,EACpC,CACA,SAASyX,GAAYy1B,EAASuB,GAC1B,GAAIvB,EAAQltC,OAAS,EACjB,MAAO,CAAE2X,EAAG,EAAGC,EAAG,GAEtB,IAAI7X,EAAImtC,EAAQltC,OAAS,EACrB0uC,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBrB,GAClC,KAAOntC,GAAK,IACR2uC,EAAmBxB,EAAQntC,KACvB4uC,EAAU1S,UAAYyS,EAAiBzS,UACvC/O,GAAsBuhB,MAG1B1uC,IAEJ,IAAK2uC,EACD,MAAO,CAAE/2B,EAAG,EAAGC,EAAG,GAEtB,MAAMgkB,EAAOxO,GAAsBuhB,EAAU1S,UAAYyS,EAAiBzS,WAC1E,GAAa,IAATL,EACA,MAAO,CAAEjkB,EAAG,EAAGC,EAAG,GAEtB,MAAM6L,EAAkB,CACpB9L,GAAIg3B,EAAUh3B,EAAI+2B,EAAiB/2B,GAAKikB,EACxChkB,GAAI+2B,EAAU/2B,EAAI82B,EAAiB92B,GAAKgkB,GAQ5C,OANInY,EAAgB9L,IAAMglB,MACtBlZ,EAAgB9L,EAAI,GAEpB8L,EAAgB7L,IAAM+kB,MACtBlZ,EAAgB7L,EAAI,GAEjB6L,CACX,CCvJA,SAASmrB,GAAWC,GAChB,OAAOA,EAAKl2B,IAAMk2B,EAAKn2B,GAC3B,CACA,SAASo2B,GAAOpvC,GAAuC,IAAhCgf,EAAM1a,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,EAAG+qC,EAAW/qC,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,IAC7C,OAAOkV,KAAKqW,IAAI7vB,EAAQgf,IAAWqwB,CACvC,CACA,SAASC,GAActW,EAAOvpB,EAAQuP,GAAsB,IAAduB,EAAMjc,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,GACnD00B,EAAMzY,OAASA,EACfyY,EAAMuW,YAAcre,GAAUzhB,EAAOuJ,IAAKvJ,EAAOwJ,IAAK+f,EAAMzY,QAC5DyY,EAAM1f,MAAQ41B,GAAWlwB,GAAUkwB,GAAWz/B,IAC1C2/B,GAAOpW,EAAM1f,MAAO,EAAG,OAAWsb,MAAMoE,EAAM1f,UAC9C0f,EAAM1f,MAAQ,GAClB0f,EAAMwW,UACFte,GAAUlS,EAAOhG,IAAKgG,EAAO/F,IAAK+f,EAAMzY,QAAUyY,EAAMuW,aACxDH,GAAOpW,EAAMwW,YAAc5a,MAAMoE,EAAMwW,cACvCxW,EAAMwW,UAAY,EAC1B,CACA,SAASC,GAAazW,EAAOvpB,EAAQuP,EAAQuB,GACzC+uB,GAActW,EAAM/gB,EAAGxI,EAAOwI,EAAG+G,EAAO/G,EAAGsI,EAASA,EAAOjD,aAAUpf,GACrEoxC,GAActW,EAAM9gB,EAAGzI,EAAOyI,EAAG8G,EAAO9G,EAAGqI,EAASA,EAAOhD,aAAUrf,EACzE,CACA,SAASwxC,GAAiB1wB,EAAQ2wB,EAAUz6B,GACxC8J,EAAOhG,IAAM9D,EAAO8D,IAAM22B,EAAS32B,IACnCgG,EAAO/F,IAAM+F,EAAOhG,IAAMk2B,GAAWS,EACzC,CAKA,SAASC,GAAyB5wB,EAAQtL,EAAQwB,GAC9C8J,EAAOhG,IAAMtF,EAAOsF,IAAM9D,EAAO8D,IACjCgG,EAAO/F,IAAM+F,EAAOhG,IAAMk2B,GAAWx7B,EACzC,CACA,SAASm8B,GAAqB7wB,EAAQtL,EAAQwB,GAC1C06B,GAAyB5wB,EAAO/G,EAAGvE,EAAOuE,EAAG/C,EAAO+C,GACpD23B,GAAyB5wB,EAAO9G,EAAGxE,EAAOwE,EAAGhD,EAAOgD,EACxD,CCRA,SAAS43B,GAA4BX,EAAMn2B,EAAKC,GAC5C,MAAO,CACHD,SAAa9a,IAAR8a,EAAoBm2B,EAAKn2B,IAAMA,OAAM9a,EAC1C+a,SAAa/a,IAAR+a,EACCk2B,EAAKl2B,IAAMA,GAAOk2B,EAAKl2B,IAAMk2B,EAAKn2B,UAClC9a,EAEd,CAcA,SAAS6xC,GAA4BC,EAAYC,GAC7C,IAAIj3B,EAAMi3B,EAAgBj3B,IAAMg3B,EAAWh3B,IACvCC,EAAMg3B,EAAgBh3B,IAAM+2B,EAAW/2B,IAO3C,OAJIg3B,EAAgBh3B,IAAMg3B,EAAgBj3B,IACtCg3B,EAAW/2B,IAAM+2B,EAAWh3B,OAC3BA,EAAKC,GAAO,CAACA,EAAKD,IAEhB,CAAEA,MAAKC,MAClB,CAuCA,MAAMi3B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHt3B,IAAKu3B,GAAoBH,EAAaC,GACtCp3B,IAAKs3B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC9HA,MAMMC,GAAcA,KAAA,CAChBx4B,EAPoB,CACpBu3B,UAAW,EACXl2B,MAAO,EACPiH,OAAQ,EACRgvB,YAAa,GAIbr3B,EARoB,CACpBs3B,UAAW,EACXl2B,MAAO,EACPiH,OAAQ,EACRgvB,YAAa,KAOXmB,GAAYA,KAAA,CACdz4B,EAFe,CAASe,IAAK,EAAGC,IAAK,GAGrCf,EAHe,CAASc,IAAK,EAAGC,IAAK,KCVzC,SAAS03B,GAASxnB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASynB,GAAuB9wC,GAAgC,IAA/B,IAAE0b,EAAG,KAAEG,EAAI,MAAEF,EAAK,OAAEC,GAAS5b,EAC1D,MAAO,CACHmY,EAAG,CAAEe,IAAK2C,EAAM1C,IAAKwC,GACrBvD,EAAG,CAAEc,IAAKwC,EAAKvC,IAAKyC,GAE5B,CCVA,SAASm1B,GAAgBv3B,GACrB,YAAiBpb,IAAVob,GAAiC,IAAVA,CAClC,CACA,SAASw3B,GAAQhxC,GAA4B,IAA3B,MAAEwZ,EAAK,OAAEoD,EAAM,OAAEC,GAAQ7c,EACvC,OAAS+wC,GAAgBv3B,KACpBu3B,GAAgBn0B,KAChBm0B,GAAgBl0B,EACzB,CACA,SAASwB,GAAajf,GAClB,OAAQ4xC,GAAS5xC,IACb6xC,GAAe7xC,IACfA,EAAOiZ,GACPjZ,EAAOod,QACPpd,EAAOqd,SACPrd,EAAOsd,OACf,CACA,SAASu0B,GAAe7xC,GACpB,OAAO8xC,GAAc9xC,EAAO+Y,IAAM+4B,GAAc9xC,EAAOgZ,EAC3D,CACA,SAAS84B,GAAchxC,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAASixC,GAAWrqB,EAAOtN,EAAOi2B,GAG9B,OAAOA,EADQj2B,GADYsN,EAAQ2oB,EAGvC,CAIA,SAAS2B,GAAgBtqB,EAAO4oB,EAAWl2B,EAAOi2B,EAAa4B,GAI3D,YAHiBjzC,IAAbizC,IACAvqB,EAAQqqB,GAAWrqB,EAAOuqB,EAAU5B,IAEjC0B,GAAWrqB,EAAOtN,EAAOi2B,GAAeC,CACnD,CAIA,SAAS4B,GAAejC,GAAuD,IAAjDK,EAASlrC,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,EAAGgV,EAAKhV,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,EAAGirC,EAAWjrC,UAAAhE,OAAA,EAAAgE,UAAA,QAAApG,EAAEizC,EAAQ7sC,UAAAhE,OAAA,EAAAgE,UAAA,QAAApG,EACzEixC,EAAKn2B,IAAMk4B,GAAgB/B,EAAKn2B,IAAKw2B,EAAWl2B,EAAOi2B,EAAa4B,GACpEhC,EAAKl2B,IAAMi4B,GAAgB/B,EAAKl2B,IAAKu2B,EAAWl2B,EAAOi2B,EAAa4B,EACxE,CAIA,SAASE,GAAcC,EAAGxxC,GAAY,IAAV,EAAEmY,EAAC,EAAEC,GAAGpY,EAChCsxC,GAAeE,EAAIr5B,EAAGA,EAAEu3B,UAAWv3B,EAAEqB,MAAOrB,EAAEs3B,aAC9C6B,GAAeE,EAAIp5B,EAAGA,EAAEs3B,UAAWt3B,EAAEoB,MAAOpB,EAAEq3B,YAClD,CAuDA,SAASgC,GAAcj4B,GACnB,OAAIk4B,OAAOC,UAAUn4B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAASo4B,GAAcvC,EAAMnyB,GACzBmyB,EAAKn2B,IAAMm2B,EAAKn2B,IAAMgE,EACtBmyB,EAAKl2B,IAAMk2B,EAAKl2B,IAAM+D,CAC1B,CAMA,SAAS20B,GAAcxC,EAAMyC,EAAUxqC,GAA8B,IAA3BrH,EAAK8xC,EAAUC,GAAU1qC,EAC/D,MAAM2qC,OAAuC7zC,IAA1B0zC,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EvC,EAAcre,GAAUie,EAAKn2B,IAAKm2B,EAAKl2B,IAAK84B,GAElDX,GAAejC,EAAMyC,EAAW7xC,GAAM6xC,EAAWC,GAAWtC,EAAaqC,EAAWt4B,MACxF,CAIA,MAAM04B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKx4B,GACvB64B,GAAcL,EAAIr5B,EAAGa,EAAWk5B,IAChCL,GAAcL,EAAIp5B,EAAGY,EAAWm5B,GACpC,CCpHA,SAASE,GAAmBtpC,EAAUolC,GAClC,OAAO2C,GHeX,SAA4BhqB,EAAOqnB,GAC/B,IAAKA,EACD,OAAOrnB,EACX,MAAMwrB,EAAUnE,EAAe,CAAEh2B,EAAG2O,EAAMjL,KAAMzD,EAAG0O,EAAMpL,MACnD62B,EAAcpE,EAAe,CAAEh2B,EAAG2O,EAAMnL,MAAOvD,EAAG0O,EAAMlL,SAC9D,MAAO,CACHF,IAAK42B,EAAQl6B,EACbyD,KAAMy2B,EAAQn6B,EACdyD,OAAQ22B,EAAYn6B,EACpBuD,MAAO42B,EAAYp6B,EAE3B,CG1BmCq6B,CAAmBzpC,EAASgd,wBAAyBooB,GACxF,CCJA,MAAMsE,GAAmBzyC,IAAiB,IAAhB,QAAE0B,GAAS1B,EACjC,OAAO0B,EAAUA,EAAQgxC,cAAcC,YAAc,IAAI,ECiBvDC,GAAsB,IAAI3pB,QAKhC,MAAM4pB,GACFzqC,WAAAA,CAAY+M,GAIRzM,KAAKoqC,eAAiB,KACtBpqC,KAAKqqC,YAAa,EAClBrqC,KAAKsqC,iBAAmB,KACxBtqC,KAAK+mC,YAAc,CAAEt3B,EAAG,EAAGC,EAAG,GAI9B1P,KAAKuqC,aAAc,EACnBvqC,KAAKwqC,uBAAwB,EAI7BxqC,KAAKyqC,QAAUvC,KACfloC,KAAKyM,cAAgBA,CACzB,CACAhD,KAAAA,CAAMihC,GAA4C,IAA/B,aAAEC,GAAe,GAAO7uC,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,EAI3C,MAAM,gBAAE8Q,GAAoB5M,KAAKyM,cACjC,GAAIG,IAAiD,IAA9BA,EAAgBs3B,UACnC,OACJ,MA4FM,iBAAES,GAAqB3kC,KAAK8f,WAClC9f,KAAK4qC,WAAa,IAAIpG,GAAWkG,EAAa,CAC1CzE,eA9FoBnoB,IACpB,MAAM,iBAAE6mB,GAAqB3kC,KAAK8f,WAGlC6kB,EAAmB3kC,KAAK6qC,iBAAmB7qC,KAAK8qC,gBAC5CH,GACA3qC,KAAK2qC,aAAazsB,GAAiBJ,EAAO,QAAQM,MACtD,EAwFAknB,QAtFYA,CAACxnB,EAAO+B,KAEpB,MAAM,KAAEjV,EAAI,gBAAEmgC,EAAe,YAAEC,GAAgBhrC,KAAK8f,WACpD,GAAIlV,IAASmgC,IACL/qC,KAAKoqC,gBACLpqC,KAAKoqC,iBACTpqC,KAAKoqC,eAAiBnrB,GAAcrU,IAE/B5K,KAAKoqC,gBACN,OAERpqC,KAAKqqC,YAAa,EAClBrqC,KAAKsqC,iBAAmB,KACxBtqC,KAAKirC,qBACDjrC,KAAKyM,cAAc6N,aACnBta,KAAKyM,cAAc6N,WAAW4wB,oBAAqB,EACnDlrC,KAAKyM,cAAc6N,WAAW9D,YAAS9gB,GAK3CyyC,IAAUxB,IACN,IAAI3tC,EAAUgH,KAAKmrC,mBAAmBxE,GAAMxmC,OAAS,EAIrD,GAAIuR,GAAQ1C,KAAKhW,GAAU,CACvB,MAAM,WAAEshB,GAAeta,KAAKyM,cAC5B,GAAI6N,GAAcA,EAAWpP,OAAQ,CACjC,MAAMkgC,EAAe9wB,EAAWpP,OAAOmgC,UAAU1E,GACjD,GAAIyE,EAAc,CAEdpyC,EADe0tC,GAAW0E,IACNx6B,WAAW5X,GAAW,IAC9C,CACJ,CACJ,CACAgH,KAAK+mC,YAAYJ,GAAQ3tC,CAAO,IAGhCgyC,GACA9tB,GAAAA,GAAM9P,QAAO,IAAM49B,EAAYltB,EAAO+B,KAAO,GAAO,GAExD,MAAM,eAAEpS,GAAmBzN,KAAKyM,cAChCgB,GAAkBA,EAAeuS,UAAU,aAAa,EAAK,EA4C7DulB,OA1CWA,CAACznB,EAAO+B,KAEnB,MAAM,gBAAEkrB,EAAe,kBAAEO,EAAiB,gBAAEC,EAAe,OAAEC,GAAYxrC,KAAK8f,WAE9E,IAAKirB,IAAoB/qC,KAAKoqC,eAC1B,OACJ,MAAM,OAAEpyB,GAAW6H,EAEnB,GAAIyrB,GAA+C,OAA1BtrC,KAAKsqC,iBAM1B,OALAtqC,KAAKsqC,iBAmWrB,SAA6BtyB,GAA4B,IAApByzB,EAAa3vC,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,GAC7C48B,EAAY,KACZ1nB,KAAKqW,IAAIrP,EAAOtI,GAAK+7B,EACrB/S,EAAY,IAEP1nB,KAAKqW,IAAIrP,EAAOvI,GAAKg8B,IAC1B/S,EAAY,KAEhB,OAAOA,CACX,CA5WwCgT,CAAoB1zB,QAEd,OAA1BhY,KAAKsqC,kBACLiB,GAAmBA,EAAgBvrC,KAAKsqC,mBAKhDtqC,KAAK2rC,WAAW,IAAK9rB,EAAKzB,MAAOpG,GACjChY,KAAK2rC,WAAW,IAAK9rB,EAAKzB,MAAOpG,GAOjChY,KAAKyM,cAAczL,SAKnBwqC,GAAUA,EAAO1tB,EAAO+B,EAAK,EAa7BgmB,aAXiBA,CAAC/nB,EAAO+B,IAAS7f,KAAKo0B,KAAKtW,EAAO+B,GAYnDimB,gBAXoBA,IAAMqC,IAAUxB,IACpC,IAAI9uB,EACJ,MAAwC,WAAjC7X,KAAK4rC,kBAAkBjF,KAC0B,QAAlD9uB,EAAK7X,KAAKmrC,mBAAmBxE,GAAMj8B,iBAA8B,IAAPmN,OAAgB,EAASA,EAAGyf,OAAO,KASpG,CACCjvB,mBAAoBrI,KAAKyM,cAAco/B,wBACvClH,mBACAD,cAAeqF,GAAiB/pC,KAAKyM,gBAE7C,CACA2nB,IAAAA,CAAKtW,EAAO+B,GACR,MAAMwqB,EAAarqC,KAAKqqC,WAExB,GADArqC,KAAKgJ,UACAqhC,EACD,OACJ,MAAM,SAAEtlB,GAAalF,EACrB7f,KAAKy+B,eAAe1Z,GACpB,MAAM,UAAE+mB,GAAc9rC,KAAK8f,WACvBgsB,GACA5uB,GAAAA,GAAM9P,QAAO,IAAM0+B,EAAUhuB,EAAO+B,IAE5C,CACA7W,MAAAA,GACIhJ,KAAKqqC,YAAa,EAClB,MAAM,WAAE/vB,EAAU,eAAE7M,GAAmBzN,KAAKyM,cACxC6N,IACAA,EAAW4wB,oBAAqB,GAEpClrC,KAAK4qC,YAAc5qC,KAAK4qC,WAAWjF,MACnC3lC,KAAK4qC,gBAAal1C,EAClB,MAAM,gBAAEq1C,GAAoB/qC,KAAK8f,YAC5BirB,GAAmB/qC,KAAKoqC,iBACzBpqC,KAAKoqC,iBACLpqC,KAAKoqC,eAAiB,MAE1B38B,GAAkBA,EAAeuS,UAAU,aAAa,EAC5D,CACA2rB,UAAAA,CAAWhF,EAAMoF,EAAQ/zB,GACrB,MAAM,KAAEpN,GAAS5K,KAAK8f,WAEtB,IAAK9H,IAAWg0B,GAAWrF,EAAM/7B,EAAM5K,KAAKsqC,kBACxC,OACJ,MAAM2B,EAAYjsC,KAAKmrC,mBAAmBxE,GAC1C,IAAI9/B,EAAO7G,KAAK+mC,YAAYJ,GAAQ3uB,EAAO2uB,GAEvC3mC,KAAKuqC,aAAevqC,KAAKuqC,YAAY5D,KACrC9/B,ERtLZ,SAA0BuX,EAAK9mB,EAAgBmzC,GAAS,IAAvB,IAAEj6B,EAAG,IAAEC,GAAKnZ,EAazC,YAZY5B,IAAR8a,GAAqB4N,EAAQ5N,EAE7B4N,EAAQqsB,EACF/hB,GAAUlY,EAAK4N,EAAOqsB,EAAQj6B,KAC9BQ,KAAKP,IAAI2N,EAAO5N,QAET9a,IAAR+a,GAAqB2N,EAAQ3N,IAElC2N,EAAQqsB,EACF/hB,GAAUjY,EAAK2N,EAAOqsB,EAAQh6B,KAC9BO,KAAKR,IAAI4N,EAAO3N,IAEnB2N,CACX,CQwKmB8tB,CAAiBrlC,EAAM7G,KAAKuqC,YAAY5D,GAAO3mC,KAAKyqC,QAAQ9D,KAEvEsF,EAAUp9B,IAAIhI,EAClB,CACAokC,kBAAAA,GACI,IAAIpzB,EACJ,MAAM,gBAAEs0B,EAAe,YAAEvE,GAAgB5nC,KAAK8f,WACxC5U,EAASlL,KAAKyM,cAAc6N,aAC7Bta,KAAKyM,cAAc6N,WAAWpP,OAC7BlL,KAAKyM,cAAc6N,WAAW8xB,SAAQ,GACG,QAAxCv0B,EAAK7X,KAAKyM,cAAc6N,kBAA+B,IAAPzC,OAAgB,EAASA,EAAG3M,OAC7EmhC,EAAkBrsC,KAAKuqC,YACzB4B,GAAmB/iC,EAAY+iC,GAC1BnsC,KAAKuqC,cACNvqC,KAAKuqC,YAAcvqC,KAAKssC,yBAKxBtsC,KAAKuqC,eADL4B,IAAmBjhC,IRxKnC,SAAiCmgC,EAASzsC,GAAgC,IAA9B,IAAEoU,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,GAAOrU,EACpE,MAAO,CACH6Q,EAAG63B,GAA4B+D,EAAU57B,EAAG0D,EAAMF,GAClDvD,EAAG43B,GAA4B+D,EAAU37B,EAAGsD,EAAKE,GAEzD,CQoKmCq5B,CAAwBrhC,EAAOmgC,UAAWc,GAMrEnsC,KAAKyqC,QRjHb,WAA0D,IAA9B7C,EAAW9rC,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG4rC,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHj4B,EAAGk4B,GAAmBC,EAAa,OAAQ,SAC3Cl4B,EAAGi4B,GAAmBC,EAAa,MAAO,UAElD,CQsGuB4E,CAAmB5E,GAK9ByE,IAAoBrsC,KAAKuqC,aACzBr/B,GACAlL,KAAKuqC,cACJvqC,KAAKwqC,uBACNrC,IAAUxB,IACF3mC,KAAKmrC,mBAAmBxE,KACxB3mC,KAAKuqC,YAAY5D,GR1IrC,SAA+Bz7B,EAAQq/B,GACnC,MAAMkC,EAAsB,CAAC,EAO7B,YANwB/2C,IAApB60C,EAAY/5B,MACZi8B,EAAoBj8B,IAAM+5B,EAAY/5B,IAAMtF,EAAOsF,UAE/B9a,IAApB60C,EAAY95B,MACZg8B,EAAoBh8B,IAAM85B,EAAY95B,IAAMvF,EAAOsF,KAEhDi8B,CACX,CQiI6CC,CAAsBxhC,EAAOmgC,UAAU1E,GAAO3mC,KAAKuqC,YAAY5D,IAC5F,GAGZ,CACA2F,qBAAAA,GACI,MAAQH,gBAAiB5B,EAAW,yBAAEoC,GAA6B3sC,KAAK8f,WACxE,IAAKyqB,IAAgBnhC,EAAYmhC,GAC7B,OAAO,EACX,MAAMqC,EAAqBrC,EAAYvxC,SACvC2M,EAAAA,GAAAA,GAAiC,OAAvBinC,EAA6B,0GACvC,MAAM,WAAEtyB,GAAeta,KAAKyM,cAE5B,IAAK6N,IAAeA,EAAWpP,OAC3B,OAAO,EACX,MAAM2hC,EF7Od,SAAwBzyB,EAAS0yB,EAAoBzkC,GACjD,MAAM0kC,EAAcpD,GAAmBvvB,EAAS/R,IAC1C,OAAE2kC,GAAWF,EAKnB,OAJIE,IACA9D,GAAc6D,EAAYt9B,EAAGu9B,EAAOh1B,OAAOvI,GAC3Cy5B,GAAc6D,EAAYr9B,EAAGs9B,EAAOh1B,OAAOtI,IAExCq9B,CACX,CEqO+BE,CAAeL,EAAoBtyB,EAAWyG,KAAM/gB,KAAKyM,cAAco/B,yBAC9F,IAAIqB,ERnLZ,SAAiC7B,EAAWwB,GACxC,MAAO,CACHp9B,EAAG83B,GAA4B8D,EAAU57B,EAAGo9B,EAAep9B,GAC3DC,EAAG63B,GAA4B8D,EAAU37B,EAAGm9B,EAAen9B,GAEnE,CQ8KkCy9B,CAAwB7yB,EAAWpP,OAAOmgC,UAAWwB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EL/OpC,SAAgC/tC,GAAW,IAAV,EAAE6Q,EAAC,EAAEC,GAAG9Q,EACrC,MAAO,CAAEoU,IAAKtD,EAAEc,IAAKyC,MAAOxD,EAAEgB,IAAKyC,OAAQxD,EAAEe,IAAK0C,KAAM1D,EAAEe,IAC9D,CK6O6D68B,CAAwBH,IACzEltC,KAAKwqC,wBAA0B4C,EAC3BA,IACAF,EAAsB9E,GAAwBgF,GAEtD,CACA,OAAOF,CACX,CACAzO,cAAAA,CAAe1Z,GACX,MAAM,KAAEna,EAAI,aAAE0iC,EAAY,YAAE1F,EAAW,eAAE2F,EAAc,iBAAE5I,EAAgB,oBAAE6I,GAAyBxtC,KAAK8f,WACnGyqB,EAAcvqC,KAAKuqC,aAAe,CAAC,EACnCkD,EAAqBtF,IAAUxB,IACjC,IAAKqF,GAAWrF,EAAM/7B,EAAM5K,KAAKsqC,kBAC7B,OAEJ,IAAIvtB,EAAcwtB,GAAeA,EAAY5D,IAAU,CAAC,EACpDhC,IACA5nB,EAAa,CAAEvM,IAAK,EAAGC,IAAK,IAOhC,MAAMmiB,EAAkBgV,EAAc,IAAM,IACtCjV,EAAgBiV,EAAc,GAAK,IACnCpV,EAAU,CACZn8B,KAAM,UACN0uB,SAAUuoB,EAAevoB,EAAS4hB,GAAQ,EAC1C/T,kBACAD,gBACAD,aAAc,IACdrB,UAAW,EACXC,UAAW,MACRic,KACAxwB,GAKP,OAAO/c,KAAK0tC,wBAAwB/G,EAAMnU,EAAQ,IAGtD,OAAOsD,QAAQpU,IAAI+rB,GAAoBjW,KAAKgW,EAChD,CACAE,uBAAAA,CAAwB/G,EAAM5pB,GAC1B,MAAMkvB,EAAYjsC,KAAKmrC,mBAAmBxE,GAC1C,OAAOsF,EAAUxiC,MAAMqxB,GAAmB6L,EAAMsF,EAAW,EAAGlvB,GAClE,CACA+tB,aAAAA,GACI3C,IAAUxB,GAAS3mC,KAAKmrC,mBAAmBxE,GAAMvS,QACrD,CACAyW,cAAAA,GACI1C,IAAUxB,IAAW,IAAI9uB,EAAI,OAA0D,QAAlDA,EAAK7X,KAAKmrC,mBAAmBxE,GAAMj8B,iBAA8B,IAAPmN,OAAgB,EAASA,EAAG8f,OAAO,GACtI,CACAiU,iBAAAA,CAAkBjF,GACd,IAAI9uB,EACJ,OAA0D,QAAlDA,EAAK7X,KAAKmrC,mBAAmBxE,GAAMj8B,iBAA8B,IAAPmN,OAAgB,EAASA,EAAGrT,KAClG,CAOA2mC,kBAAAA,CAAmBxE,GACf,MAAMgH,EAAU,QAAUhH,EAAKzrB,cACzBnjB,EAAQiI,KAAKyM,cAAcqT,WAC3B8tB,EAAsB71C,EAAM41C,GAClC,OAAOC,GAED5tC,KAAKyM,cAAc8yB,SAASoH,GAAO5uC,EAAMmS,QAAUnS,EAAMmS,QAAQy8B,QAAQjxC,IAAc,EACjG,CACAi1C,YAAAA,CAAavsB,GACT+pB,IAAUxB,IACN,MAAM,KAAE/7B,GAAS5K,KAAK8f,WAEtB,IAAKksB,GAAWrF,EAAM/7B,EAAM5K,KAAKsqC,kBAC7B,OACJ,MAAM,WAAEhwB,GAAeta,KAAKyM,cACtBw/B,EAAYjsC,KAAKmrC,mBAAmBxE,GAC1C,GAAIrsB,GAAcA,EAAWpP,OAAQ,CACjC,MAAM,IAAEsF,EAAG,IAAEC,GAAQ6J,EAAWpP,OAAOmgC,UAAU1E,GACjDsF,EAAUp9B,IAAIuP,EAAMuoB,GAAQje,GAAUlY,EAAKC,EAAK,IACpD,IAER,CAMAo9B,8BAAAA,GACI,IAAK7tC,KAAKyM,cAAczT,QACpB,OACJ,MAAM,KAAE4R,EAAI,gBAAEuhC,GAAoBnsC,KAAK8f,YACjC,WAAExF,GAAeta,KAAKyM,cAC5B,IAAKrD,EAAY+iC,KAAqB7xB,IAAeta,KAAKuqC,YACtD,OAKJvqC,KAAK8qC,gBAKL,MAAMgD,EAAc,CAAEr+B,EAAG,EAAGC,EAAG,GAC/By4B,IAAUxB,IACN,MAAMsF,EAAYjsC,KAAKmrC,mBAAmBxE,GAC1C,GAAIsF,EAAW,CACX,MAAMrzB,EAASqzB,EAAU9rC,MACzB2tC,EAAYnH,GRhS5B,SAAoB1/B,EAAQuP,GACxB,IAAIuB,EAAS,GACb,MAAMg2B,EAAerH,GAAWz/B,GAC1B+mC,EAAetH,GAAWlwB,GAOhC,OANIw3B,EAAeD,EACfh2B,EAASuQ,GAAS9R,EAAOhG,IAAKgG,EAAO/F,IAAMs9B,EAAc9mC,EAAOuJ,KAE3Du9B,EAAeC,IACpBj2B,EAASuQ,GAASrhB,EAAOuJ,IAAKvJ,EAAOwJ,IAAMu9B,EAAcx3B,EAAOhG,MAE7DD,EAAM,EAAG,EAAGwH,EACvB,CQqRoCD,CAAW,CAAEtH,IAAKoI,EAAQnI,IAAKmI,GAAU5Y,KAAKuqC,YAAY5D,GAClF,KAKJ,MAAM,kBAAEnxB,GAAsBxV,KAAKyM,cAAcqT,WACjD9f,KAAKyM,cAAczT,QAAQmG,MAAMmR,UAAYkF,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACN8E,EAAWyG,MAAQzG,EAAWyG,KAAKktB,eACnC3zB,EAAW4zB,eACXluC,KAAKirC,qBAKL9C,IAAUxB,IACN,IAAKqF,GAAWrF,EAAM/7B,EAAM,MACxB,OAIJ,MAAMqhC,EAAYjsC,KAAKmrC,mBAAmBxE,IACpC,IAAEn2B,EAAG,IAAEC,GAAQzQ,KAAKuqC,YAAY5D,GACtCsF,EAAUp9B,IAAI6Z,GAAUlY,EAAKC,EAAKq9B,EAAYnH,IAAO,GAE7D,CACAwH,YAAAA,GACI,IAAKnuC,KAAKyM,cAAczT,QACpB,OACJkxC,GAAoBr7B,IAAI7O,KAAKyM,cAAezM,MAC5C,MAIMouC,EAAsB9vB,GAJZte,KAAKyM,cAAczT,QAIkB,eAAgB8kB,IACjE,MAAM,KAAElT,EAAI,aAAEkM,GAAe,GAAS9W,KAAK8f,WAC3ClV,GAAQkM,GAAgB9W,KAAKyJ,MAAMqU,EAAM,IAEvCuwB,EAAyBA,KAC3B,MAAM,gBAAElC,GAAoBnsC,KAAK8f,WAC7B1W,EAAY+iC,KACZnsC,KAAKuqC,YAAcvqC,KAAKssC,wBAC5B,GAEE,WAAEhyB,GAAeta,KAAKyM,cACtB6hC,EAA4Bh0B,EAAWqD,iBAAiB,UAAW0wB,GACrE/zB,IAAeA,EAAWpP,SAC1BoP,EAAWyG,MAAQzG,EAAWyG,KAAKktB,eACnC3zB,EAAW4zB,gBAEfG,IAKA,MAAME,EAAqBhxB,GAAYje,OAAQ,UAAU,IAAMU,KAAK6tC,mCAK9DW,EAA2Bl0B,EAAWqD,iBAAiB,aAAcrmB,IAAiC,IAAhC,MAAEk5B,EAAK,iBAAEie,GAAkBn3C,EAC/F0I,KAAKqqC,YAAcoE,IACnBtG,IAAUxB,IACN,MAAM3H,EAAch/B,KAAKmrC,mBAAmBxE,GACvC3H,IAELh/B,KAAK+mC,YAAYJ,IAASnW,EAAMmW,GAAMK,UACtChI,EAAYnwB,IAAImwB,EAAY7+B,MAAQqwB,EAAMmW,GAAMK,WAAU,IAE9DhnC,KAAKyM,cAAczL,SACvB,IAEJ,MAAO,KACHutC,IACAH,IACAE,IACAE,GAA4BA,GAA0B,CAE9D,CACA1uB,QAAAA,GACI,MAAM/nB,EAAQiI,KAAKyM,cAAcqT,YAC3B,KAAElV,GAAO,EAAK,kBAAE0gC,GAAoB,EAAK,gBAAEP,GAAkB,EAAK,gBAAEoB,GAAkB,EAAK,YAAEvE,EAAcF,GAAc,aAAE4F,GAAe,GAAUv1C,EAC1J,MAAO,IACAA,EACH6S,OACA0gC,oBACAP,kBACAoB,kBACAvE,cACA0F,eAER,EAEJ,SAAStB,GAAWtT,EAAW9tB,EAAM0/B,GACjC,QAAkB,IAAT1/B,GAAiBA,IAAS8tB,KACT,OAArB4R,GAA6BA,IAAqB5R,EAC3D,CCtcA,MAAMgW,GAAgBjxB,GAAY,CAACK,EAAO+B,KAClCpC,GACAP,GAAAA,GAAM9P,QAAO,IAAMqQ,EAAQK,EAAO+B,IACtC,ECLJ,MAAM8uB,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQpI,GAC7B,OAAIA,EAAKl2B,MAAQk2B,EAAKn2B,IACX,EACHu+B,GAAUpI,EAAKl2B,IAAMk2B,EAAKn2B,KAAQ,GAC9C,CAQA,MAAMw+B,GAAsB,CACxBC,QAASA,CAACr2B,EAAQ2G,KACd,IAAKA,EAAK/I,OACN,OAAOoC,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAIjH,GAAG3C,KAAK4J,GAIR,OAAOA,EAHPA,EAAShI,WAAWgI,EAK5B,CAKA,MAAMnJ,EAAIq/B,GAAgBl2B,EAAQ2G,EAAK/I,OAAO/G,GACxCC,EAAIo/B,GAAgBl2B,EAAQ2G,EAAK/I,OAAO9G,GAC9C,MAAO,GAAPhW,OAAU+V,EAAC,MAAA/V,OAAKgW,EAAC,OCjCnBw/B,GAAmB,CACrBD,QAASA,CAACr2B,EAAMthB,KAAqC,IAAnC,UAAE63C,EAAS,gBAAEC,GAAiB93C,EAC5C,MAAM+3C,EAAWz2B,EACX02B,EAASpjB,GAAQvb,MAAMiI,GAE7B,GAAI02B,EAAOx3C,OAAS,EAChB,OAAOu3C,EACX,MAAMriB,EAAWd,GAAQJ,kBAAkBlT,GACrCZ,EAA8B,kBAAds3B,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgB3/B,EAAEqB,MAAQq+B,EAAU1/B,EAC7C+/B,EAASJ,EAAgB1/B,EAAEoB,MAAQq+B,EAAUz/B,EACnD4/B,EAAO,EAAIt3B,IAAWu3B,EACtBD,EAAO,EAAIt3B,IAAWw3B,EAOtB,MAAMC,EAAe/mB,GAAU6mB,EAAQC,EAAQ,IAO/C,MALkC,kBAAvBF,EAAO,EAAIt3B,KAClBs3B,EAAO,EAAIt3B,IAAWy3B,GAEQ,kBAAvBH,EAAO,EAAIt3B,KAClBs3B,EAAO,EAAIt3B,IAAWy3B,GACnBziB,EAASsiB,EAAO,GCnB/B,MAAMI,WAAiCC,EAAAA,UAMnCC,iBAAAA,GACI,MAAM,cAAEnjC,EAAa,YAAEojC,EAAW,kBAAEC,EAAiB,SAAEzjC,GAAarM,KAAKjI,OACnE,WAAEuiB,GAAe7N,E5IlB/B,IAA2BsjC,I4ImBDC,G5IlBtBv5C,OAAOigB,OAAOzH,EAAiB8gC,G4ImBvBz1B,IACIu1B,EAAYI,OACZJ,EAAYI,MAAM7vC,IAAIka,GACtBw1B,GAAqBA,EAAkBvL,UAAYl4B,GACnDyjC,EAAkBvL,SAASjqB,GAE/BA,EAAWyG,KAAKmvB,YAChB51B,EAAWqD,iBAAiB,qBAAqB,KAC7C3d,KAAKmwC,cAAc,IAEvB71B,EAAW81B,WAAW,IACf91B,EAAW/E,QACd4uB,eAAgBA,IAAMnkC,KAAKmwC,kBAGnCxB,GAAsBE,gBAAiB,CAC3C,CACAwB,uBAAAA,CAAwBv1B,GACpB,MAAM,iBAAEw1B,EAAgB,cAAE7jC,EAAa,KAAE7B,EAAI,UAAEs5B,GAAclkC,KAAKjI,MAC5DuiB,EAAa7N,EAAc6N,WACjC,OAAKA,GASLA,EAAW4pB,UAAYA,EACnBt5B,GACAkQ,EAAUw1B,mBAAqBA,QACV56C,IAArB46C,EACAh2B,EAAWi2B,aAGXvwC,KAAKmwC,eAELr1B,EAAUopB,YAAcA,IACpBA,EACA5pB,EAAWk2B,UAELl2B,EAAWm2B,YAMjBvzB,GAAAA,GAAM1P,YAAW,KACb,MAAMkjC,EAAQp2B,EAAWq2B,WACpBD,GAAUA,EAAME,QAAQ94C,QACzBkI,KAAKmwC,cACT,KAIL,MAnCI,IAoCf,CACA9rC,kBAAAA,GACI,MAAM,WAAEiW,GAAeta,KAAKjI,MAAM0U,cAC9B6N,IACAA,EAAWyG,KAAKmvB,YAChBnnC,EAAUyE,YAAW,MACZ8M,EAAWu2B,kBAAoBv2B,EAAWw2B,UAC3C9wC,KAAKmwC,cACT,IAGZ,CACA5rC,oBAAAA,GACI,MAAM,cAAEkI,EAAa,YAAEojC,EAAaC,kBAAmBiB,GAAoB/wC,KAAKjI,OAC1E,WAAEuiB,GAAe7N,EACnB6N,IACAA,EAAW02B,4BACPnB,GAAeA,EAAYI,OAC3BJ,EAAYI,MAAM3vC,OAAOga,GACzBy2B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAW32B,GAEtC,CACA61B,YAAAA,GACI,MAAM,aAAEA,GAAiBnwC,KAAKjI,MAC9Bo4C,GAAgBA,GACpB,CACAnvC,MAAAA,GACI,OAAO,IACX,EAEJ,SAASmL,GAAcpU,GACnB,MAAOmsC,EAAWiM,GCpFtB,WACI,MAAMxwC,GAAU0K,EAAAA,EAAAA,YAAWwC,EAAAA,GAC3B,GAAgB,OAAZlN,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAEukC,EAAS,eAAEC,EAAc,SAAEI,GAAa5kC,EAG1C2O,GAAK4iC,EAAAA,EAAAA,SAGX,OAFAvjC,EAAAA,EAAAA,YAAU,IAAM42B,EAASj2B,IAAK,KAEtB41B,GAAaC,EAAiB,EAAC,EADlBgM,IAAMhM,GAAkBA,EAAe71B,IACE,EAAC,EACnE,CDyEsC6iC,GAC5BtB,GAAcxlC,EAAAA,EAAAA,YAAWgE,EAAAA,GAC/B,OAAQshC,EAAAA,cAA6BD,GAA0B,IAAK33C,EAAO83C,YAAaA,EAAaC,mBAAmBzlC,EAAAA,EAAAA,YAAWgB,GAA2B64B,UAAWA,EAAWiM,aAAcA,GACtM,CACA,MAAMH,GAAyB,CAC3B19B,aAAc,IACP08B,GACHoC,QAAS,CACL,sBACA,uBACA,yBACA,4BAGR5+B,oBAAqBw8B,GACrBv8B,qBAAsBu8B,GACtBr8B,uBAAwBq8B,GACxBt8B,wBAAyBs8B,GACzBqC,UAAWnC,IE1HToC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQx5C,OACrB05C,GAAYh6C,GAA2B,kBAAVA,EAAqBoZ,WAAWpZ,GAASA,EACtEi6C,GAAQj6C,GAA2B,kBAAVA,GAAsBma,GAAG3C,KAAKxX,GA0C7D,SAASk6C,GAAUh7C,EAAQi7C,GACvB,YAA8Bj8C,IAAvBgB,EAAOi7C,GACRj7C,EAAOi7C,GACPj7C,EAAO4b,YACjB,CAwBA,MAAMs/B,GAAkBC,GAAS,EAAG,GAAK5rB,IACnC6rB,GAAmBD,GAAS,GAAK,IAAMlvB,GAAAA,GAC7C,SAASkvB,GAASrhC,EAAKC,EAAK6U,GACxB,OAAQhd,GAEAA,EAAIkI,EACG,EACPlI,EAAImI,EACG,EACJ6U,EAAOgD,GAAS9X,EAAKC,EAAKnI,GAEzC,CCrFA,SAASypC,GAAapL,EAAMqL,GACxBrL,EAAKn2B,IAAMwhC,EAAWxhC,IACtBm2B,EAAKl2B,IAAMuhC,EAAWvhC,GAC1B,CAMA,SAASwhC,GAAYnJ,EAAKoJ,GACtBH,GAAajJ,EAAIr5B,EAAGyiC,EAAUziC,GAC9BsiC,GAAajJ,EAAIp5B,EAAGwiC,EAAUxiC,EAClC,CCVA,SAASyiC,GAAiB/zB,EAAO4oB,EAAWl2B,EAAOi2B,EAAa4B,GAM5D,OAJAvqB,EAAQqqB,GADRrqB,GAAS4oB,EACiB,EAAIl2B,EAAOi2B,QACpBrxC,IAAbizC,IACAvqB,EAAQqqB,GAAWrqB,EAAO,EAAIuqB,EAAU5B,IAErC3oB,CACX,CAsBA,SAASg0B,GAAqBzL,EAAMyC,EAAU9xC,EAA8BygB,EAAQs6B,GAAY,IAA/C96C,EAAK8xC,EAAUC,GAAUhyC,GAlB1E,SAAyBqvC,GAA8F,IAAxFK,EAASlrC,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,EAAGgV,EAAKhV,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,EAAGic,EAAMjc,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,GAAK6sC,EAAQ7sC,UAAAhE,OAAA,EAAAgE,UAAA,QAAApG,EAAEs8C,EAAUl2C,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG6qC,EAAM0L,EAAUv2C,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG6qC,EACzGj1B,GAAQ1C,KAAKg4B,KACbA,EAAYp2B,WAAWo2B,GAEvBA,EADyBte,GAAU2pB,EAAW7hC,IAAK6hC,EAAW5hC,IAAKu2B,EAAY,KAChDqL,EAAW7hC,KAE9C,GAAyB,kBAAdw2B,EACP,OACJ,IAAID,EAAcre,GAAUspB,EAAWxhC,IAAKwhC,EAAWvhC,IAAKsH,GACxD4uB,IAASqL,IACTjL,GAAeC,GACnBL,EAAKn2B,IAAM2hC,GAAiBxL,EAAKn2B,IAAKw2B,EAAWl2B,EAAOi2B,EAAa4B,GACrEhC,EAAKl2B,IAAM0hC,GAAiBxL,EAAKl2B,IAAKu2B,EAAWl2B,EAAOi2B,EAAa4B,EACzE,CAMI2J,CAAgB3L,EAAMyC,EAAW7xC,GAAM6xC,EAAWC,GAAWD,EAAWE,GAAYF,EAAWt4B,MAAOiH,EAAQs6B,EAClH,CAIA,MAAM7I,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAAS8I,GAAoBzJ,EAAKM,EAAY8I,EAAWM,GACrDJ,GAAqBtJ,EAAIr5B,EAAG25B,EAAYI,GAAO0I,EAAYA,EAAUziC,OAAI/Z,EAAW88C,EAAYA,EAAU/iC,OAAI/Z,GAC9G08C,GAAqBtJ,EAAIp5B,EAAG05B,EAAYK,GAAOyI,EAAYA,EAAUxiC,OAAIha,EAAW88C,EAAYA,EAAU9iC,OAAIha,EAClH,CCjDA,SAAS+8C,GAAgBjiB,GACrB,OAA2B,IAApBA,EAAMwW,WAAmC,IAAhBxW,EAAM1f,KAC1C,CACA,SAAS4hC,GAAYliB,GACjB,OAAOiiB,GAAgBjiB,EAAM/gB,IAAMgjC,GAAgBjiB,EAAM9gB,EAC7D,CAOA,SAASijC,GAAiBx9C,EAAGC,GACzB,OAAQ4b,KAAKC,MAAM9b,EAAEsa,EAAEe,OAASQ,KAAKC,MAAM7b,EAAEqa,EAAEe,MAC3CQ,KAAKC,MAAM9b,EAAEsa,EAAEgB,OAASO,KAAKC,MAAM7b,EAAEqa,EAAEgB,MACvCO,KAAKC,MAAM9b,EAAEua,EAAEc,OAASQ,KAAKC,MAAM7b,EAAEsa,EAAEc,MACvCQ,KAAKC,MAAM9b,EAAEua,EAAEe,OAASO,KAAKC,MAAM7b,EAAEsa,EAAEe,IAC/C,CACA,SAASmiC,GAAY9J,GACjB,OAAOpC,GAAWoC,EAAIr5B,GAAKi3B,GAAWoC,EAAIp5B,EAC9C,CCpBA,MAAMmjC,GACFnzC,WAAAA,GACIM,KAAK4wC,QAAU,EACnB,CACAxwC,GAAAA,CAAImf,GACA+c,GAAct8B,KAAK4wC,QAASrxB,GAC5BA,EAAKuzB,gBACT,CACAxyC,MAAAA,CAAOif,GAKH,GAJAid,GAAWx8B,KAAK4wC,QAASrxB,GACrBA,IAASvf,KAAK+yC,WACd/yC,KAAK+yC,cAAWr9C,GAEhB6pB,IAASvf,KAAKgzC,KAAM,CACpB,MAAMD,EAAW/yC,KAAK4wC,QAAQ5wC,KAAK4wC,QAAQ94C,OAAS,GAChDi7C,GACA/yC,KAAKwwC,QAAQuC,EAErB,CACJ,CACAtC,QAAAA,CAASlxB,GACL,MAAM0zB,EAAcjzC,KAAK4wC,QAAQsC,WAAWC,GAAW5zB,IAAS4zB,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAIl7C,EAAIo7C,EAAap7C,GAAK,EAAGA,IAAK,CACnC,MAAMs7C,EAASnzC,KAAK4wC,QAAQ/4C,GAC5B,IAAyB,IAArBs7C,EAAOjP,UAAqB,CAC5B6O,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACA/yC,KAAKwwC,QAAQuC,IACN,EAKf,CACAvC,OAAAA,CAAQjxB,EAAM6zB,GACV,MAAML,EAAW/yC,KAAKgzC,KACtB,GAAIzzB,IAASwzB,IAEb/yC,KAAK+yC,SAAWA,EAChB/yC,KAAKgzC,KAAOzzB,EACZA,EAAK8zB,OACDN,GAAU,CACVA,EAAS1yC,UAAY0yC,EAASD,iBAC9BvzB,EAAKuzB,iBACLvzB,EAAK+zB,WAAaP,EACdK,IACA7zB,EAAK+zB,WAAWC,iBAAkB,GAElCR,EAASS,WACTj0B,EAAKi0B,SAAWT,EAASS,SACzBj0B,EAAKi0B,SAASl+B,aACVy9B,EAASU,iBAAmBV,EAASz9B,cAEzCiK,EAAKwB,MAAQxB,EAAKwB,KAAK2yB,aACvBn0B,EAAKo0B,eAAgB,GAEzB,MAAM,UAAEC,GAAcr0B,EAAKhK,SACT,IAAdq+B,GACAb,EAASc,MAcjB,CACJ,CACAC,qBAAAA,GACI9zC,KAAK4wC,QAAQr2C,SAASglB,IAClB,MAAM,QAAEhK,EAAO,aAAEw+B,GAAiBx0B,EAClChK,EAAQ4uB,gBAAkB5uB,EAAQ4uB,iBAC9B4P,GACAA,EAAax+B,QAAQ4uB,gBACjB4P,EAAax+B,QAAQ4uB,gBAC7B,GAER,CACA2O,cAAAA,GACI9yC,KAAK4wC,QAAQr2C,SAASglB,IAClBA,EAAKlf,UAAYkf,EAAKuzB,gBAAe,EAAM,GAEnD,CAKAkB,kBAAAA,GACQh0C,KAAKgzC,MAAQhzC,KAAKgzC,KAAKQ,WACvBxzC,KAAKgzC,KAAKQ,cAAW99C,EAE7B,EC5GJ,SAASu+C,GAAyBzjB,EAAO2e,EAAW+E,GAChD,IAAI5jC,EAAY,GAOhB,MAAM6jC,EAAa3jB,EAAM/gB,EAAEu3B,UAAYmI,EAAU1/B,EAC3C2kC,EAAa5jB,EAAM9gB,EAAEs3B,UAAYmI,EAAUz/B,EAWjD,IAVIykC,GAAcC,KACd9jC,EAAY,eAAH5W,OAAkBy6C,EAAU,QAAAz6C,OAAO06C,EAAU,YAMtC,IAAhBjF,EAAU1/B,GAA2B,IAAhB0/B,EAAUz/B,IAC/BY,GAAa,SAAJ5W,OAAa,EAAIy1C,EAAU1/B,EAAC,MAAA/V,OAAK,EAAIy1C,EAAUz/B,EAAC,OAEzDwkC,EAAiB,CACjB,MAAM,OAAEpgC,EAAM,QAAEC,EAAO,QAAEC,GAAYkgC,EACjCpgC,IACAxD,GAAa,UAAJ5W,OAAcoa,EAAM,UAC7BC,IACAzD,GAAa,WAAJ5W,OAAeqa,EAAO,UAC/BC,IACA1D,GAAa,WAAJ5W,OAAesa,EAAO,SACvC,CAKA,MAAMqgC,EAAgB7jB,EAAM/gB,EAAEqB,MAAQq+B,EAAU1/B,EAC1C6kC,EAAgB9jB,EAAM9gB,EAAEoB,MAAQq+B,EAAUz/B,EAIhD,OAHsB,IAAlB2kC,GAAyC,IAAlBC,IACvBhkC,GAAa,SAAJ5W,OAAa26C,EAAa,MAAA36C,OAAK46C,EAAa,MAElDhkC,GAAa,MACxB,CCvCA,MAAMikC,GAAiBA,CAACp/C,EAAGC,IAAMD,EAAEq/C,MAAQp/C,EAAEo/C,MCG7C,MAAMC,GACF/0C,WAAAA,GACIM,KAAKkB,SAAW,GAChBlB,KAAK00C,SAAU,CACnB,CACAt0C,GAAAA,CAAI4E,GACAs3B,GAAct8B,KAAKkB,SAAU8D,GAC7BhF,KAAK00C,SAAU,CACnB,CACAp0C,MAAAA,CAAO0E,GACHw3B,GAAWx8B,KAAKkB,SAAU8D,GAC1BhF,KAAK00C,SAAU,CACnB,CACAn6C,OAAAA,CAAQomB,GACJ3gB,KAAK00C,SAAW10C,KAAKkB,SAASigC,KAAKoT,IACnCv0C,KAAK00C,SAAU,EACf10C,KAAKkB,SAAS3G,QAAQomB,EAC1B,ECQJ,MAAMg0B,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAIvmC,GAAK,EAKT,MAAMwmC,GAAsB,CACxBz+C,KAAM,kBACN0+C,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,GAAoB59C,GAA6F,IAA5F,qBAAE69C,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,GAAiBj+C,EACpH,OAAO,MACHoI,WAAAA,GAAuH,IAA3G4V,EAAYxZ,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG4Q,EAAM5Q,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAqB,OAAlBs5C,QAA4C,IAAlBA,OAA2B,EAASA,IAIlGp1C,KAAKsO,GAAKA,KAIVtO,KAAKw1C,YAAc,EAOnBx1C,KAAKkB,SAAW,IAAIoF,IAKpBtG,KAAKuV,QAAU,CAAC,EAMhBvV,KAAKy1C,iBAAkB,EACvBz1C,KAAKkrC,oBAAqB,EAO1BlrC,KAAK2zC,eAAgB,EAKrB3zC,KAAK01C,mBAAoB,EAKzB11C,KAAK21C,yBAA0B,EAK/B31C,KAAK41C,kBAAmB,EAIxB51C,KAAK61C,uBAAwB,EAC7B71C,KAAK81C,uBAAwB,EAK7B91C,KAAK0zC,YAAa,EAIlB1zC,KAAK+1C,OAAQ,EAKb/1C,KAAKg2C,YAAa,EAIlBh2C,KAAKi2C,sBAAuB,EAS5Bj2C,KAAKmvC,UAAY,CAAE1/B,EAAG,EAAGC,EAAG,GAI5B1P,KAAKk2C,cAAgB,IAAI9vC,IACzBpG,KAAKm2C,iBAAkB,EAEvBn2C,KAAKo2C,iBAAkB,EACvBp2C,KAAKq2C,2BAA4B,EACjCr2C,KAAKs2C,kBAAoB,KACjBt2C,KAAK0zC,aACL1zC,KAAK0zC,YAAa,EAClB1zC,KAAKu2C,oBACT,EAOJv2C,KAAKw2C,iBAAmB,KCrJpC,IAAgBC,EDsJAz2C,KAAKq2C,2BAA4B,EAKjCvB,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACZj1C,KAAK02C,MAAMn8C,QAAQo8C,IACnB32C,KAAK02C,MAAMn8C,QAAQq8C,IACnB52C,KAAK02C,MAAMn8C,QAAQs8C,IACnB72C,KAAK02C,MAAMn8C,QAAQu8C,IClKnBL,EDmKO3B,GClKfx1C,OAAOy3C,aACPz3C,OAAOy3C,YAAYC,OAAOP,EDiKS,EAE/Bz2C,KAAKi3C,cAAe,EACpBj3C,KAAKk3C,WAAY,EACjBl3C,KAAKm3C,kBAAoB,EAKzBn3C,KAAKo3C,YAAc,IAAIhxC,IACvBpG,KAAKsV,aAAeA,EACpBtV,KAAK+gB,KAAOrU,EAASA,EAAOqU,MAAQrU,EAAS1M,KAC7CA,KAAKq3C,KAAO3qC,EAAS,IAAIA,EAAO2qC,KAAM3qC,GAAU,GAChD1M,KAAK0M,OAASA,EACd1M,KAAKw0C,MAAQ9nC,EAASA,EAAO8nC,MAAQ,EAAI,EACzC,IAAK,IAAI38C,EAAI,EAAGA,EAAImI,KAAKq3C,KAAKv/C,OAAQD,IAClCmI,KAAKq3C,KAAKx/C,GAAGo+C,sBAAuB,EAEpCj2C,KAAK+gB,OAAS/gB,OACdA,KAAK02C,MAAQ,IAAIjC,GACzB,CACA92B,gBAAAA,CAAiB5nB,EAAM0nB,GAInB,OAHKzd,KAAKk2C,cAAcnvC,IAAIhR,IACxBiK,KAAKk2C,cAAcrnC,IAAI9Y,EAAM,IAAI0mC,IAE9Bz8B,KAAKk2C,cAAc/1C,IAAIpK,GAAMqK,IAAIqd,EAC5C,CACA65B,eAAAA,CAAgBvhD,GACZ,MAAMwhD,EAAsBv3C,KAAKk2C,cAAc/1C,IAAIpK,GAAM,QAAA0oB,EAAA3iB,UAAAhE,OADpClC,EAAI,IAAA0C,MAAAmmB,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ/oB,EAAI+oB,EAAA,GAAA7iB,UAAA6iB,GAEzB44B,GAAuBA,EAAoB5a,UAAU/mC,EACzD,CACA4hD,YAAAA,CAAazhD,GACT,OAAOiK,KAAKk2C,cAAcnvC,IAAIhR,EAClC,CAIAkY,KAAAA,CAAM5N,GAAqD,IAA3CszC,EAAa73C,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAGkE,KAAK+gB,KAAKo1B,gBACtC,GAAIn2C,KAAKK,SACL,OE1MhB,IAAsB+Z,EF2MVpa,KAAK+1C,OE3MK37B,EF2MgB/Z,aE1MRo3C,YAAkC,QAApBr9B,EAAQxgB,QF2MxCoG,KAAKK,SAAWA,EAChB,MAAM,SAAEgM,EAAQ,OAAEnB,EAAM,cAAEuB,GAAkBzM,KAAKuV,QASjD,GARI9I,IAAkBA,EAAczT,SAChCyT,EAAcwB,MAAM5N,GAExBL,KAAK+gB,KAAK21B,MAAMt2C,IAAIJ,MACpBA,KAAK0M,QAAU1M,KAAK0M,OAAOxL,SAASd,IAAIJ,MACpC2zC,IAAkBzoC,GAAUmB,KAC5BrM,KAAK2zC,eAAgB,GAErBwB,EAAsB,CACtB,IAAIuC,EACJ,MAAMC,EAAsBA,IAAO33C,KAAK+gB,KAAK+0B,uBAAwB,EACrEX,EAAqB90C,GAAU,KAC3BL,KAAK+gB,KAAK+0B,uBAAwB,EAClC4B,GAAeA,IACfA,EGtNpB,SAAe/2B,EAAUi3B,GACrB,MAAMnuC,EAAQiqB,GAAKF,MACbqkB,EAAevgD,IAAmB,IAAlB,UAAEy8B,GAAWz8B,EAC/B,MAAMw/B,EAAU/C,EAAYtqB,EACxBqtB,GAAW8gB,KACXvjB,EAAAA,GAAAA,IAAYwjB,GACZl3B,EAASmW,EAAU8gB,GACvB,EAGJ,OADA16B,GAAAA,GAAMC,KAAK06B,GAAc,GAClB,KAAMxjB,EAAAA,GAAAA,IAAYwjB,EAC7B,CH2MkC5iB,CAAM0iB,EAAqB,KACrChJ,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/C5uC,KAAK02C,MAAMn8C,QAAQu9C,IACvB,GAER,CACIzrC,GACArM,KAAK+gB,KAAKg3B,mBAAmB1rC,EAAUrM,OAGd,IAAzBA,KAAKuV,QAAQ1L,SACb4C,IACCJ,GAAYnB,IACblL,KAAK2d,iBAAiB,aAAa/e,IAA+E,IAA9E,MAAE4xB,EAAK,iBAAEie,EAAgB,yBAAEuJ,EAA0B9sC,OAAQ+sC,GAAYr5C,EACzG,GAAIoB,KAAKk4C,yBAGL,OAFAl4C,KAAKwW,YAAS9gB,OACdsK,KAAKm4C,oBAAiBziD,GAI1B,MAAM0iD,EAAmBp4C,KAAKuV,QAAQwH,YAClCtQ,EAAc8sB,wBACd8e,IACE,uBAAEC,EAAsB,0BAAEC,GAA+B9rC,EAAcqT,WAKvE04B,GAAiBx4C,KAAKy4C,eACvB9F,GAAiB3yC,KAAKy4C,aAAcR,IACrCD,EAMEU,GAAgCjK,GAAoBuJ,EAC1D,GAAIh4C,KAAKuV,QAAQojC,YACZ34C,KAAKszC,YAActzC,KAAKszC,WAAWjzC,UACpCq4C,GACCjK,IACI+J,IAAkBx4C,KAAK6wC,kBAAoB,CAC5C7wC,KAAKszC,aACLtzC,KAAK+zC,aAAe/zC,KAAKszC,WACzBtzC,KAAK+zC,aAAaA,kBAAer+C,GAErCsK,KAAK44C,mBAAmBpoB,EAAOkoB,GAC/B,MAAMG,EAAmB,IAClBhe,GAAmBud,EAAkB,UACxC7iB,OAAQ+iB,EACR7iB,WAAY8iB,IAEZ9rC,EAAci0B,oBACd1gC,KAAKuV,QAAQojC,cACbE,EAAiB5jB,MAAQ,EACzB4jB,EAAiBxiD,MAAO,GAE5B2J,KAAKy+B,eAAeoa,EACxB,MAOSpK,GACDqJ,GAAgB93C,MAEhBA,KAAK8wC,UAAY9wC,KAAKuV,QAAQ4uB,gBAC9BnkC,KAAKuV,QAAQ4uB,iBAGrBnkC,KAAKy4C,aAAeR,CAAS,GAGzC,CACA/pC,OAAAA,GACIlO,KAAKuV,QAAQlJ,UAAYrM,KAAKuwC,aAC9BvwC,KAAK+gB,KAAK21B,MAAMp2C,OAAON,MACvB,MAAM0wC,EAAQ1wC,KAAK2wC,WACnBD,GAASA,EAAMpwC,OAAON,MACtBA,KAAK0M,QAAU1M,KAAK0M,OAAOxL,SAASqgB,OAAOvhB,MAC3CA,KAAKK,cAAW3K,GAChB2+B,EAAAA,GAAAA,IAAYr0B,KAAKw2C,iBACrB,CAEAsC,WAAAA,GACI94C,KAAK61C,uBAAwB,CACjC,CACAkD,aAAAA,GACI/4C,KAAK61C,uBAAwB,CACjC,CACAmD,eAAAA,GACI,OAAOh5C,KAAK61C,uBAAyB71C,KAAK81C,qBAC9C,CACAoC,sBAAAA,GACI,OAAQl4C,KAAKkrC,oBACRlrC,KAAK0M,QAAU1M,KAAK0M,OAAOwrC,2BAC5B,CACR,CAEAe,WAAAA,GACQj5C,KAAKg5C,oBAETh5C,KAAK0zC,YAAa,EAClB1zC,KAAK02C,OAAS12C,KAAK02C,MAAMn8C,QAAQ2+C,IACjCl5C,KAAKw1C,cACT,CACA2D,oBAAAA,GACI,MAAM,cAAE1sC,GAAkBzM,KAAKuV,QAC/B,OAAO9I,GAAiBA,EAAcqT,WAAWtK,iBACrD,CACA+6B,UAAAA,GAAyC,IAA9B6I,IAAqBt9C,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,KAAAA,UAAA,GAE5B,GADAkE,KAAK+gB,KAAKo1B,iBAAkB,EACxBn2C,KAAK+gB,KAAKi4B,kBAEV,YADAh5C,KAAKuV,QAAQ4uB,gBAAkBnkC,KAAKuV,QAAQ4uB,kBAIhD,IADCnkC,KAAK+gB,KAAK2yB,YAAc1zC,KAAK+gB,KAAKk4B,cAC/Bj5C,KAAK2zC,cACL,OACJ3zC,KAAK2zC,eAAgB,EACrB,IAAK,IAAI97C,EAAI,EAAGA,EAAImI,KAAKq3C,KAAKv/C,OAAQD,IAAK,CACvC,MAAM0nB,EAAOvf,KAAKq3C,KAAKx/C,GACvB0nB,EAAK02B,sBAAuB,EAC5B12B,EAAK0uB,aAAa,YACd1uB,EAAKhK,QAAQojC,YACbp5B,EAAKgxB,YAAW,EAExB,CACA,MAAM,SAAElkC,EAAQ,OAAEnB,GAAWlL,KAAKuV,QAClC,QAAiB7f,IAAb2W,IAA2BnB,EAC3B,OACJ,MAAMsK,EAAoBxV,KAAKm5C,uBAC/Bn5C,KAAKq5C,2BAA6B7jC,EAC5BA,EAAkBxV,KAAKsV,aAAc,SACrC5f,EACNsK,KAAKs5C,iBACLF,GAAyBp5C,KAAKs3C,gBAAgB,aAClD,CACAlqC,MAAAA,GACIpN,KAAKo2C,iBAAkB,EAKvB,GAJyBp2C,KAAKg5C,kBAQ1B,OAHAh5C,KAAK+4C,gBACL/4C,KAAKu2C,yBACLv2C,KAAK02C,MAAMn8C,QAAQg/C,IAGlBv5C,KAAK0zC,YACN1zC,KAAK02C,MAAMn8C,QAAQi/C,IAEvBx5C,KAAK0zC,YAAa,EAIdp0C,OAAOm6C,4BACPn6C,OAAOm6C,6BAEXz5C,KAAK02C,MAAMn8C,QAAQm/C,IAKnB15C,KAAK02C,MAAMn8C,QAAQ2zC,IAKnBluC,KAAK02C,MAAMn8C,QAAQo/C,IACnB35C,KAAKu2C,oBAML,MAAM/iB,EAAME,GAAKF,MACjBG,GAAAA,UAAUnD,MAAQjgB,EAAM,EAAG,IAAO,GAAIijB,EAAMG,GAAAA,UAAUI,WACtDJ,GAAAA,UAAUI,UAAYP,EACtBG,GAAAA,UAAUC,cAAe,EACzBgmB,GAAAA,GAAMxsC,OAAOysC,QAAQlmB,GAAAA,WACrBimB,GAAAA,GAAME,UAAUD,QAAQlmB,GAAAA,WACxBimB,GAAAA,GAAM54C,OAAO64C,QAAQlmB,GAAAA,WACrBA,GAAAA,UAAUC,cAAe,CAC7B,CACAsc,SAAAA,GACSlwC,KAAKo2C,kBACNp2C,KAAKo2C,iBAAkB,EACvBrtC,EAAUoU,MAAK,IAAMnd,KAAKoN,WAElC,CACAmpC,iBAAAA,GACIv2C,KAAK02C,MAAMn8C,QAAQw/C,IACnB/5C,KAAKo3C,YAAY78C,QAAQy/C,GAC7B,CACAC,wBAAAA,GACSj6C,KAAKq2C,4BACNr2C,KAAKq2C,2BAA4B,EACjCn5B,GAAAA,GAAM48B,UAAU95C,KAAKw2C,kBAAkB,GAAO,GAEtD,CACAxF,yBAAAA,GAMI9zB,GAAAA,GAAM1P,YAAW,KACTxN,KAAK2zC,cACL3zC,KAAK+gB,KAAKmvB,YAGVlwC,KAAK+gB,KAAKu1B,mBACd,GAER,CAIAgD,cAAAA,IACQt5C,KAAKwzC,UAAaxzC,KAAKK,WAE3BL,KAAKwzC,SAAWxzC,KAAKosC,UACzB,CACA8B,YAAAA,GACI,IAAKluC,KAAKK,SACN,OAGJ,GADAL,KAAKiuC,iBACCjuC,KAAKuV,QAAQ2kC,sBAAuBl6C,KAAK8wC,YAC1C9wC,KAAK2zC,cACN,OASJ,GAAI3zC,KAAKszC,aAAetzC,KAAKszC,WAAWjzC,SACpC,IAAK,IAAIxI,EAAI,EAAGA,EAAImI,KAAKq3C,KAAKv/C,OAAQD,IAAK,CAC1BmI,KAAKq3C,KAAKx/C,GAClBo2C,cACT,CAEJ,MAAMkM,EAAan6C,KAAKkL,OACxBlL,KAAKkL,OAASlL,KAAKosC,SAAQ,GAC3BpsC,KAAKo6C,gBAAkBlS,KACvBloC,KAAK2zC,eAAgB,EACrB3zC,KAAKovC,qBAAkB15C,EACvBsK,KAAKs3C,gBAAgB,UAAWt3C,KAAKkL,OAAOmgC,WAC5C,MAAM,cAAE5+B,GAAkBzM,KAAKuV,QAC/B9I,GACIA,EAAckwB,OAAO,gBAAiB38B,KAAKkL,OAAOmgC,UAAW8O,EAAaA,EAAW9O,eAAY31C,EACzG,CACAu4C,YAAAA,GAAgC,IAAnBoM,EAAKv+C,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,UACbw+C,EAAmBvwC,QAAQ/J,KAAKuV,QAAQglC,cAAgBv6C,KAAKK,UAC7DL,KAAKgtC,QACLhtC,KAAKgtC,OAAOwI,cAAgBx1C,KAAK+gB,KAAKy0B,aACtCx1C,KAAKgtC,OAAOqN,QAAUA,IACtBC,GAAmB,GAEnBA,IACAt6C,KAAKgtC,OAAS,CACVwI,YAAax1C,KAAK+gB,KAAKy0B,YACvB6E,QACAG,OAAQlF,EAAkBt1C,KAAKK,UAC/B2X,OAAQq9B,EAAcr1C,KAAKK,WAGvC,CACAk1C,cAAAA,GACI,IAAKA,EACD,OACJ,MAAMkF,EAAmBz6C,KAAK2zC,eAAiB3zC,KAAKi2C,qBAC9CyE,EAAgB16C,KAAKovC,kBAAoBsD,GAAY1yC,KAAKovC,iBAC1D55B,EAAoBxV,KAAKm5C,uBACzBwB,EAAyBnlC,EACzBA,EAAkBxV,KAAKsV,aAAc,SACrC5f,EACAklD,EAA8BD,IAA2B36C,KAAKq5C,2BAChEoB,IACCC,GACG/kC,GAAa3V,KAAKsV,eAClBslC,KACJrF,EAAev1C,KAAKK,SAAUs6C,GAC9B36C,KAAKi2C,sBAAuB,EAC5Bj2C,KAAK8yC,iBAEb,CACA1G,OAAAA,GAAgC,IAAxByO,IAAe/+C,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,KAAAA,UAAA,GACnB,MAAMg/C,EAAU96C,KAAKitC,iBACrB,IAAI5B,EAAYrrC,KAAK+6C,oBAAoBD,GA+8BrD,IAAkBhS,EAr8BN,OAJI+R,IACAxP,EAAYrrC,KAAK66C,gBAAgBxP,IAy8B7C2P,IADclS,EAt8BGuC,GAu8BH57B,GACdurC,GAAUlS,EAAIp5B,GAv8BC,CACH8lC,YAAax1C,KAAK+gB,KAAKy0B,YACvByF,YAAaH,EACbzP,YACA/1B,aAAc,CAAC,EACfrO,OAAQjH,KAAKsO,GAErB,CACA2+B,cAAAA,GACI,MAAM,cAAExgC,GAAkBzM,KAAKuV,QAC/B,IAAK9I,EACD,OAAOy7B,KACX,MAAMY,EAAMr8B,EAAck9B,sBAEpB,OAAEqD,GAAWhtC,KAAK+gB,KAKxB,OAJIisB,IACA9D,GAAcJ,EAAIr5B,EAAGu9B,EAAOh1B,OAAOvI,GACnCy5B,GAAcJ,EAAIp5B,EAAGs9B,EAAOh1B,OAAOtI,IAEhCo5B,CACX,CACAiS,mBAAAA,CAAoBjS,GAChB,MAAMoS,EAAmBhT,KACzB+J,GAAYiJ,EAAkBpS,GAK9B,IAAK,IAAIjxC,EAAI,EAAGA,EAAImI,KAAKq3C,KAAKv/C,OAAQD,IAAK,CACvC,MAAM0nB,EAAOvf,KAAKq3C,KAAKx/C,IACjB,OAAEm1C,EAAM,QAAEz3B,GAAYgK,EAC5B,GAAIA,IAASvf,KAAK+gB,MAAQisB,GAAUz3B,EAAQglC,aAAc,CAKtD,GAAIvN,EAAOwN,OAAQ,CACfvI,GAAYiJ,EAAkBpS,GAC9B,MAAQkE,OAAQmO,GAAen7C,KAAK+gB,KAKhCo6B,IACAjS,GAAcgS,EAAiBzrC,GAAI0rC,EAAWnjC,OAAOvI,GACrDy5B,GAAcgS,EAAiBxrC,GAAIyrC,EAAWnjC,OAAOtI,GAE7D,CACAw5B,GAAcgS,EAAiBzrC,EAAGu9B,EAAOh1B,OAAOvI,GAChDy5B,GAAcgS,EAAiBxrC,EAAGs9B,EAAOh1B,OAAOtI,EACpD,CACJ,CACA,OAAOwrC,CACX,CACAE,cAAAA,CAAetS,GAA4B,IAAvBuS,EAAav/C,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,IAAAA,UAAA,GAC7B,MAAMw/C,EAAiBpT,KACvB+J,GAAYqJ,EAAgBxS,GAC5B,IAAK,IAAIjxC,EAAI,EAAGA,EAAImI,KAAKq3C,KAAKv/C,OAAQD,IAAK,CACvC,MAAM0nB,EAAOvf,KAAKq3C,KAAKx/C,IAClBwjD,GACD97B,EAAKhK,QAAQglC,cACbh7B,EAAKytB,QACLztB,IAASA,EAAKwB,MACd2oB,GAAa4R,EAAgB,CACzB7rC,GAAI8P,EAAKytB,OAAOh1B,OAAOvI,EACvBC,GAAI6P,EAAKytB,OAAOh1B,OAAOtI,IAG1BiG,GAAa4J,EAAKjK,eAEvBo0B,GAAa4R,EAAgB/7B,EAAKjK,aACtC,CAIA,OAHIK,GAAa3V,KAAKsV,eAClBo0B,GAAa4R,EAAgBt7C,KAAKsV,cAE/BgmC,CACX,CACAT,eAAAA,CAAgB/R,GACZ,MAAMyS,EAAsBrT,KAC5B+J,GAAYsJ,EAAqBzS,GACjC,IAAK,IAAIjxC,EAAI,EAAGA,EAAImI,KAAKq3C,KAAKv/C,OAAQD,IAAK,CACvC,MAAM0nB,EAAOvf,KAAKq3C,KAAKx/C,GACvB,IAAK0nB,EAAKlf,SACN,SACJ,IAAKsV,GAAa4J,EAAKjK,cACnB,SACJgzB,GAAS/oB,EAAKjK,eAAiBiK,EAAK+5B,iBACpC,MAAM9G,EAAYtK,KAElB+J,GAAYO,EADIjzB,EAAK0tB,kBAErBsF,GAAoBgJ,EAAqBh8B,EAAKjK,aAAciK,EAAKi0B,SAAWj0B,EAAKi0B,SAASnI,eAAY31C,EAAW88C,EACrH,CAIA,OAHI78B,GAAa3V,KAAKsV,eAClBi9B,GAAoBgJ,EAAqBv7C,KAAKsV,cAE3CimC,CACX,CACAC,cAAAA,CAAehrB,GACXxwB,KAAKy7C,YAAcjrB,EACnBxwB,KAAK+gB,KAAKk5B,2BACVj6C,KAAK01C,mBAAoB,CAC7B,CACAtF,UAAAA,CAAW76B,GACPvV,KAAKuV,QAAU,IACRvV,KAAKuV,WACLA,EACHq+B,eAAiCl+C,IAAtB6f,EAAQq+B,WAA0Br+B,EAAQq+B,UAE7D,CACA2F,iBAAAA,GACIv5C,KAAKgtC,YAASt3C,EACdsK,KAAKkL,YAASxV,EACdsK,KAAKwzC,cAAW99C,EAChBsK,KAAKq5C,gCAA6B3jD,EAClCsK,KAAKy7C,iBAAc/lD,EACnBsK,KAAKwW,YAAS9gB,EACdsK,KAAK2zC,eAAgB,CACzB,CACA+H,kCAAAA,GACS17C,KAAK27C,gBAQN37C,KAAK27C,eAAeC,2BACpBjoB,GAAAA,UAAUI,WACV/zB,KAAK27C,eAAe/E,oBAAmB,EAE/C,CACAA,kBAAAA,GAA+C,IAA5BiF,EAAkB//C,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,IAAAA,UAAA,GACjC,IAAI+b,EAMJ,MAAMm7B,EAAOhzC,KAAK87C,UAClB97C,KAAK01C,oBAAsB11C,KAAK01C,kBAAoB1C,EAAK0C,mBACzD11C,KAAK41C,mBAAqB51C,KAAK41C,iBAAmB5C,EAAK4C,kBACvD51C,KAAK21C,0BAA4B31C,KAAK21C,wBAA0B3C,EAAK2C,yBACrE,MAAMoG,EAAWhyC,QAAQ/J,KAAK+zC,eAAiB/zC,OAASgzC,EAUxD,KALkB6I,GACbE,GAAY/7C,KAAK21C,yBAClB31C,KAAK01C,oBACmB,QAAtB79B,EAAK7X,KAAK0M,cAA2B,IAAPmL,OAAgB,EAASA,EAAG69B,oBAC5D11C,KAAKg8C,gCAEL,OACJ,MAAM,OAAE9wC,EAAM,SAAEmB,GAAarM,KAAKuV,QAIlC,GAAKvV,KAAKkL,SAAYA,GAAUmB,GAAhC,CAQA,GANArM,KAAK47C,yBAA2BjoB,GAAAA,UAAUI,WAMrC/zB,KAAKy7C,cAAgBz7C,KAAKm4C,eAAgB,CAC3C,MAAMwD,EAAiB37C,KAAKi8C,6BACxBN,GACAA,EAAezwC,QACY,IAA3BlL,KAAKm3C,mBACLn3C,KAAK27C,eAAiBA,EACtB37C,KAAK07C,qCACL17C,KAAKm4C,eAAiBjQ,KACtBloC,KAAKk8C,qBAAuBhU,KAC5Bb,GAAqBrnC,KAAKk8C,qBAAsBl8C,KAAKkL,OAAOmgC,UAAWsQ,EAAezwC,OAAOmgC,WAC7F4G,GAAYjyC,KAAKm4C,eAAgBn4C,KAAKk8C,uBAGtCl8C,KAAK27C,eAAiB37C,KAAKm4C,oBAAiBziD,CAEpD,CAKA,GAAKsK,KAAKm4C,gBAAmBn4C,KAAKy7C,YAAlC,CxB/qBZ,IAAyBjlC,EAAQ2wB,EAAUz6B,EwBwtB/B,GApCK1M,KAAKwW,SACNxW,KAAKwW,OAAS0xB,KACdloC,KAAKm8C,qBAAuBjU,MAK5BloC,KAAKm4C,gBACLn4C,KAAKk8C,sBACLl8C,KAAK27C,gBACL37C,KAAK27C,eAAenlC,QACpBxW,KAAK07C,qCxB/rBIllC,EwBgsBOxW,KAAKwW,OxBhsBJ2wB,EwBgsBYnnC,KAAKm4C,exBhsBPzrC,EwBgsBuB1M,KAAK27C,eAAenlC,OxB/rBlF0wB,GAAiB1wB,EAAO/G,EAAG03B,EAAS13B,EAAG/C,EAAO+C,GAC9Cy3B,GAAiB1wB,EAAO9G,EAAGy3B,EAASz3B,EAAGhD,EAAOgD,IwBmsB7B1P,KAAKy7C,aACN1xC,QAAQ/J,KAAK+zC,cAEb/zC,KAAKwW,OAASxW,KAAKo7C,eAAep7C,KAAKkL,OAAOmgC,WAG9C4G,GAAYjyC,KAAKwW,OAAQxW,KAAKkL,OAAOmgC,WAEzCxC,GAAc7oC,KAAKwW,OAAQxW,KAAKy7C,cAMhCxJ,GAAYjyC,KAAKwW,OAAQxW,KAAKkL,OAAOmgC,WAKrCrrC,KAAKg8C,+BAAgC,CACrCh8C,KAAKg8C,gCAAiC,EACtC,MAAML,EAAiB37C,KAAKi8C,6BACxBN,GACA5xC,QAAQ4xC,EAAe5H,gBACnBhqC,QAAQ/J,KAAK+zC,gBAChB4H,EAAepmC,QAAQglC,cACxBoB,EAAenlC,QACY,IAA3BxW,KAAKm3C,mBACLn3C,KAAK27C,eAAiBA,EACtB37C,KAAK07C,qCACL17C,KAAKm4C,eAAiBjQ,KACtBloC,KAAKk8C,qBAAuBhU,KAC5Bb,GAAqBrnC,KAAKk8C,qBAAsBl8C,KAAKwW,OAAQmlC,EAAenlC,QAC5Ey7B,GAAYjyC,KAAKm4C,eAAgBn4C,KAAKk8C,uBAGtCl8C,KAAK27C,eAAiB37C,KAAKm4C,oBAAiBziD,CAEpD,CAIAo/C,GAAoBE,sBA/DV,CA5BA,CA4Fd,CACAiH,0BAAAA,GACI,GAAKj8C,KAAK0M,SACN47B,GAAStoC,KAAK0M,OAAO4I,gBACrBizB,GAAevoC,KAAK0M,OAAO4I,cAG/B,OAAItV,KAAK0M,OAAO0vC,eACLp8C,KAAK0M,OAGL1M,KAAK0M,OAAOuvC,4BAE3B,CACAG,YAAAA,GACI,OAAOryC,SAAS/J,KAAKm4C,gBACjBn4C,KAAKy7C,aACLz7C,KAAKuV,QAAQojC,aACb34C,KAAKkL,OACb,CACA2rC,cAAAA,GACI,IAAIh/B,EACJ,MAAMm7B,EAAOhzC,KAAK87C,UACZC,EAAWhyC,QAAQ/J,KAAK+zC,eAAiB/zC,OAASgzC,EACxD,IAAIvS,GAAU,EAuBd,IAlBIzgC,KAAK01C,oBAA6C,QAAtB79B,EAAK7X,KAAK0M,cAA2B,IAAPmL,OAAgB,EAASA,EAAG69B,sBACtFjV,GAAU,GAMVsb,IACC/7C,KAAK21C,yBAA2B31C,KAAK41C,oBACtCnV,GAAU,GAMVzgC,KAAK47C,2BAA6BjoB,GAAAA,UAAUI,YAC5C0M,GAAU,GAEVA,EACA,OACJ,MAAM,OAAEv1B,EAAM,SAAEmB,GAAarM,KAAKuV,QAWlC,GANAvV,KAAKy1C,gBAAkB1rC,QAAS/J,KAAK0M,QAAU1M,KAAK0M,OAAO+oC,iBACvDz1C,KAAK6wC,kBACL7wC,KAAKq8C,kBACJr8C,KAAKy1C,kBACNz1C,KAAKy7C,YAAcz7C,KAAKm4C,oBAAiBziD,IAExCsK,KAAKkL,SAAYA,IAAUmB,EAC5B,OAKJ4lC,GAAYjyC,KAAKo6C,gBAAiBp6C,KAAKkL,OAAOmgC,WAI9C,MAAMiR,EAAiBt8C,KAAKmvC,UAAU1/B,EAChC8sC,EAAiBv8C,KAAKmvC,UAAUz/B,GlB1yBlD,SAAyBo5B,EAAKqG,EAAWqN,GAAsC,IAA5BC,EAAkB3gD,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,IAAAA,UAAA,GACjE,MAAM4gD,EAAaF,EAAS1kD,OAC5B,IAAK4kD,EACD,OAGJ,IAAIn9B,EACAiR,EAFJ2e,EAAU1/B,EAAI0/B,EAAUz/B,EAAI,EAG5B,IAAK,IAAI7X,EAAI,EAAGA,EAAI6kD,EAAY7kD,IAAK,CACjC0nB,EAAOi9B,EAAS3kD,GAChB24B,EAAQjR,EAAK6vB,gBAKb,MAAM/uC,EAAWkf,EAAKlf,SAClBA,GACAA,EAASlB,OACkB,aAA3BkB,EAASlB,MAAMw9C,UAGfF,GACAl9B,EAAKhK,QAAQglC,cACbh7B,EAAKytB,QACLztB,IAASA,EAAKwB,MACd2oB,GAAaZ,EAAK,CACdr5B,GAAI8P,EAAKytB,OAAOh1B,OAAOvI,EACvBC,GAAI6P,EAAKytB,OAAOh1B,OAAOtI,IAG3B8gB,IAEA2e,EAAU1/B,GAAK+gB,EAAM/gB,EAAEqB,MACvBq+B,EAAUz/B,GAAK8gB,EAAM9gB,EAAEoB,MAEvB+3B,GAAcC,EAAKtY,IAEnBisB,GAAsB9mC,GAAa4J,EAAKjK,eACxCo0B,GAAaZ,EAAKvpB,EAAKjK,cAE/B,CAKA65B,EAAU1/B,EAAIs5B,GAAcoG,EAAU1/B,GACtC0/B,EAAUz/B,EAAIq5B,GAAcoG,EAAUz/B,EAC1C,CkBgwBYktC,CAAgB58C,KAAKo6C,gBAAiBp6C,KAAKmvC,UAAWnvC,KAAKq3C,KAAM0E,IAK7D/I,EAAK9nC,QACJ8nC,EAAKx8B,QACgB,IAArBxW,KAAKmvC,UAAU1/B,GAAgC,IAArBzP,KAAKmvC,UAAUz/B,IAC1CsjC,EAAKx8B,OAASw8B,EAAK9nC,OAAOmgC,UAC1B2H,EAAKmJ,qBAAuBjU,MAEhC,MAAM,OAAE1xB,GAAWw8B,EACnB,IAAKx8B,EAWD,YALIxW,KAAK68C,sBACL78C,KAAKovC,gBAAkBnH,KACvBjoC,KAAK68C,oBAAsB,OAC3B78C,KAAK8yC,mBAIR9yC,KAAKovC,kBACNpvC,KAAKovC,gBAAkBnH,KACvBjoC,KAAK88C,6BAA+B7U,MAExC,MAAM8U,EAA0B/8C,KAAK68C,oBAUrC5V,GAAajnC,KAAKovC,gBAAiBpvC,KAAKo6C,gBAAiB5jC,EAAQxW,KAAKsV,cACtEtV,KAAK68C,oBAAsB5I,GAAyBj0C,KAAKovC,gBAAiBpvC,KAAKmvC,WAC3EnvC,KAAK68C,sBAAwBE,GAC7B/8C,KAAKmvC,UAAU1/B,IAAM6sC,GACrBt8C,KAAKmvC,UAAUz/B,IAAM6sC,IACrBv8C,KAAKi3C,cAAe,EACpBj3C,KAAK8yC,iBACL9yC,KAAKs3C,gBAAgB,mBAAoB9gC,IAK7Cs+B,GAAoBG,wBACxB,CACApB,IAAAA,GACI7zC,KAAKk3C,WAAY,CAErB,CACA7D,IAAAA,GACIrzC,KAAKk3C,WAAY,CAErB,CACApE,cAAAA,GAAiC,IAAlBkK,IAASlhD,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,KAAAA,UAAA,GAEpB,GADAkE,KAAKuV,QAAQu9B,gBAAkB9yC,KAAKuV,QAAQu9B,iBACxCkK,EAAW,CACX,MAAMtM,EAAQ1wC,KAAK2wC,WACnBD,GAASA,EAAMoC,gBACnB,CACI9yC,KAAK+zC,eAAiB/zC,KAAK+zC,aAAa1zC,WACxCL,KAAK+zC,kBAAer+C,EAE5B,CACAkjD,kBAAAA,CAAmBpoB,GAA6C,IAAtCkoB,EAA4B58C,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,IAAAA,UAAA,GAClD,MAAM03C,EAAWxzC,KAAKwzC,SAChByJ,EAAuBzJ,EACvBA,EAASl+B,aACT,CAAC,EACD4nC,EAAc,IAAKl9C,KAAKsV,cACxBmmC,EAAcxT,KACfjoC,KAAK27C,gBACL37C,KAAK27C,eAAepmC,QAAQojC,aAC7B34C,KAAKm4C,eAAiBn4C,KAAKk8C,0BAAuBxmD,GAEtDsK,KAAKg8C,gCAAkCtD,EACvC,MAAMyE,EAAiBjV,KAGjBkV,GAFiB5J,EAAWA,EAASvsC,YAASvR,MAC/BsK,KAAKkL,OAASlL,KAAKkL,OAAOjE,YAASvR,GAElDg7C,EAAQ1wC,KAAK2wC,WACb0M,GAAgB3M,GAASA,EAAME,QAAQ94C,QAAU,EACjDwlD,EAAyBvzC,QAAQqzC,IAClCC,IAC0B,IAA3Br9C,KAAKuV,QAAQq+B,YACZ5zC,KAAKq3C,KAAKn1C,KAAKq7C,KAEpB,IAAIC,EADJx9C,KAAKm3C,kBAAoB,EAEzBn3C,KAAKy9C,eAAkB7kC,IACnB,MAAM0P,EAAW1P,EAAS,IL/6B1C,IAAmBzjB,EAAGC,EKi7CN42B,EAAQzD,EAAMC,EAAIlgB,EAjgBlBo1C,GAAajC,EAAYhsC,EAAG+gB,EAAM/gB,EAAG6Y,GACrCo1B,GAAajC,EAAY/rC,EAAG8gB,EAAM9gB,EAAG4Y,GACrCtoB,KAAKw7C,eAAeC,GAChBz7C,KAAKm4C,gBACLn4C,KAAKk8C,sBACLl8C,KAAKkL,QACLlL,KAAK27C,gBACL37C,KAAK27C,eAAezwC,SACpBm8B,GAAqB8V,EAAgBn9C,KAAKkL,OAAOmgC,UAAWrrC,KAAK27C,eAAezwC,OAAOmgC,WAyf3Frf,EAxfWhsB,KAAKm4C,eAwfR5vB,EAxfwBvoB,KAAKk8C,qBAwfvB1zB,EAxf6C20B,EAwfzC70C,EAxfyDggB,EAyfvFq1B,GAAQ3xB,EAAOvc,EAAG8Y,EAAK9Y,EAAG+Y,EAAG/Y,EAAGnH,GAChCq1C,GAAQ3xB,EAAOtc,EAAG6Y,EAAK7Y,EAAG8Y,EAAG9Y,EAAGpH,GArfZk1C,IL97BLroD,EK+7Be6K,KAAKm4C,eL/7BjB/iD,EK+7BiCooD,EL97B3CroD,EAAEsa,EAAEe,MAAQpb,EAAEqa,EAAEe,KACpBrb,EAAEsa,EAAEgB,MAAQrb,EAAEqa,EAAEgB,KAChBtb,EAAEua,EAAEc,MAAQpb,EAAEsa,EAAEc,KAChBrb,EAAEua,EAAEe,MAAQrb,EAAEsa,EAAEe,OK47BAzQ,KAAK01C,mBAAoB,GAExB8H,IACDA,EAAqBtV,MACzB+J,GAAYuL,EAAoBx9C,KAAKm4C,iBAErCiF,IACAp9C,KAAKyzC,gBAAkByJ,ERr8B3C,SAAmB1mC,EAAQonC,EAAQ5K,EAAM1qB,EAAUg1B,EAAwBD,GACnEC,GACA9mC,EAAO3B,QAAU6T,GAAU,OAEVhzB,IAAjBs9C,EAAKn+B,QAAwBm+B,EAAKn+B,QAAU,EAAG+8B,GAAgBtpB,IAC/D9R,EAAOqnC,YAAcn1B,QAA6BhzB,IAAnBkoD,EAAO/oC,QAAwB+oC,EAAO/oC,QAAU,EAAG,EAAGi9B,GAAiBxpB,KAEjG+0B,IACL7mC,EAAO3B,QAAU6T,QAA6BhzB,IAAnBkoD,EAAO/oC,QAAwB+oC,EAAO/oC,QAAU,OAAoBnf,IAAjBs9C,EAAKn+B,QAAwBm+B,EAAKn+B,QAAU,EAAGyT,IAKjI,IAAK,IAAIzwB,EAAI,EAAGA,EAAI05C,GAAY15C,IAAK,CACjC,MAAMimD,EAAc,SAAHpkD,OAAY43C,GAAQz5C,GAAE,UACvC,IAAIkmD,EAAerM,GAAUkM,EAAQE,GACjCE,EAAatM,GAAUsB,EAAM8K,QACZpoD,IAAjBqoD,QAA6CroD,IAAfsoD,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACAvM,GAAKsM,KAAkBtM,GAAKuM,IAE5BxnC,EAAOsnC,GAAe9sC,KAAKP,IAAIiY,GAAU8oB,GAASuM,GAAevM,GAASwM,GAAa11B,GAAW,IAC9F5W,GAAQ1C,KAAKgvC,IAAetsC,GAAQ1C,KAAK+uC,MACzCvnC,EAAOsnC,IAAgB,MAI3BtnC,EAAOsnC,GAAeE,EAE9B,EAIIJ,EAAO9pC,QAAUk/B,EAAKl/B,UACtB0C,EAAO1C,OAAS4U,GAAUk1B,EAAO9pC,QAAU,EAAGk/B,EAAKl/B,QAAU,EAAGwU,GAExE,CQ85BoB21B,CAAUf,EAAaD,EAAsBj9C,KAAKsV,aAAcgT,EAAUg1B,EAAwBD,IAEtGr9C,KAAK+gB,KAAKk5B,2BACVj6C,KAAK8yC,iBACL9yC,KAAKm3C,kBAAoB7uB,CAAQ,EAErCtoB,KAAKy9C,eAAez9C,KAAKuV,QAAQojC,WAAa,IAAO,EACzD,CACAla,cAAAA,CAAelpB,GACXvV,KAAKs3C,gBAAgB,kBACrBt3C,KAAK6wC,kBAAoB7wC,KAAK6wC,iBAAiBzc,OAC3Cp0B,KAAK+zC,cAAgB/zC,KAAK+zC,aAAalD,kBACvC7wC,KAAK+zC,aAAalD,iBAAiBzc,OAEnCp0B,KAAKq8C,oBACLhoB,EAAAA,GAAAA,IAAYr0B,KAAKq8C,kBACjBr8C,KAAKq8C,sBAAmB3mD,GAO5BsK,KAAKq8C,iBAAmBn/B,GAAAA,GAAM9P,QAAO,KACjCuhC,GAAsBC,wBAAyB,EAC/C5uC,KAAK6wC,iBIr+BrB,SAA4Br5C,EAAOm3B,EAAWpZ,GAC1C,MAAM2oC,EAAgB5uC,EAAc9X,GAASA,EAAQwnC,GAAYxnC,GAEjE,OADA0mD,EAAcz0C,MAAMqxB,GAAmB,GAAIojB,EAAevvB,EAAWpZ,IAC9D2oC,EAAcxzC,SACzB,CJi+BwCyzC,CAAmB,EAv8BnC,IAu8BuD,IACxD5oC,EACHmgB,SAAW9c,IACP5Y,KAAKy9C,eAAe7kC,GACpBrD,EAAQmgB,UAAYngB,EAAQmgB,SAAS9c,EAAO,EAEhD6c,WAAYA,KACRlgB,EAAQkgB,YAAclgB,EAAQkgB,aAC9Bz1B,KAAKo+C,mBAAmB,IAG5Bp+C,KAAK+zC,eACL/zC,KAAK+zC,aAAalD,iBAAmB7wC,KAAK6wC,kBAE9C7wC,KAAKq8C,sBAAmB3mD,CAAS,GAEzC,CACA0oD,iBAAAA,GACQp+C,KAAK+zC,eACL/zC,KAAK+zC,aAAalD,sBAAmBn7C,EACrCsK,KAAK+zC,aAAaR,qBAAkB79C,GAExC,MAAMg7C,EAAQ1wC,KAAK2wC,WACnBD,GAASA,EAAMoD,wBACf9zC,KAAK+zC,aACD/zC,KAAK6wC,iBACD7wC,KAAKyzC,qBACD/9C,EACZsK,KAAKs3C,gBAAgB,oBACzB,CACAQ,eAAAA,GACQ93C,KAAK6wC,mBACL7wC,KAAKy9C,gBAAkBz9C,KAAKy9C,eAv+BpB,KAw+BRz9C,KAAK6wC,iBAAiBzc,QAE1Bp0B,KAAKo+C,mBACT,CACAC,uBAAAA,GACI,MAAMrL,EAAOhzC,KAAK87C,UAClB,IAAI,qBAAEK,EAAoB,OAAE3lC,EAAM,OAAEtL,EAAM,aAAEoK,GAAiB09B,EAC7D,GAAKmJ,GAAyB3lC,GAAWtL,EAAzC,CAOA,GAAIlL,OAASgzC,GACThzC,KAAKkL,QACLA,GACAozC,GAA0Bt+C,KAAKuV,QAAQgpC,cAAev+C,KAAKkL,OAAOmgC,UAAWngC,EAAOmgC,WAAY,CAChG70B,EAASxW,KAAKwW,QAAU0xB,KACxB,MAAMsW,EAAU9X,GAAW1mC,KAAKkL,OAAOmgC,UAAU57B,GACjD+G,EAAO/G,EAAEe,IAAMwiC,EAAKx8B,OAAO/G,EAAEe,IAC7BgG,EAAO/G,EAAEgB,IAAM+F,EAAO/G,EAAEe,IAAMguC,EAC9B,MAAMC,EAAU/X,GAAW1mC,KAAKkL,OAAOmgC,UAAU37B,GACjD8G,EAAO9G,EAAEc,IAAMwiC,EAAKx8B,OAAO9G,EAAEc,IAC7BgG,EAAO9G,EAAEe,IAAM+F,EAAO9G,EAAEc,IAAMiuC,CAClC,CACAxM,GAAYkK,EAAsB3lC,GAMlCkzB,GAAayS,EAAsB7mC,GAOnC2xB,GAAajnC,KAAK88C,6BAA8B98C,KAAKo6C,gBAAiB+B,EAAsB7mC,EA/BlF,CAgCd,CACAyiC,kBAAAA,CAAmB1rC,EAAUkT,GACpBvf,KAAKo3C,YAAYrwC,IAAIsF,IACtBrM,KAAKo3C,YAAYvoC,IAAIxC,EAAU,IAAIwmC,IAEzB7yC,KAAKo3C,YAAYj3C,IAAIkM,GAC7BjM,IAAImf,GACV,MAAMvD,EAASuD,EAAKhK,QAAQmpC,uBAC5Bn/B,EAAKixB,QAAQ,CACTzzB,WAAYf,EAASA,EAAOe,gBAAarnB,EACzC09C,sBAAuBp3B,GAAUA,EAAO2iC,4BAClC3iC,EAAO2iC,4BAA4Bp/B,QACnC7pB,GAEd,CACAo7C,MAAAA,GACI,MAAMJ,EAAQ1wC,KAAK2wC,WACnB,OAAOD,GAAQA,EAAMsC,OAAShzC,IAClC,CACA87C,OAAAA,GACI,IAAIjkC,EACJ,MAAM,SAAExL,GAAarM,KAAKuV,QAC1B,OAAOlJ,IAAuC,QAA1BwL,EAAK7X,KAAK2wC,kBAA+B,IAAP94B,OAAgB,EAASA,EAAGm7B,OAAgBhzC,IACtG,CACA4+C,WAAAA,GACI,IAAI/mC,EACJ,MAAM,SAAExL,GAAarM,KAAKuV,QAC1B,OAAOlJ,EAAsC,QAA1BwL,EAAK7X,KAAK2wC,kBAA+B,IAAP94B,OAAgB,EAASA,EAAGk7B,cAAWr9C,CAChG,CACAi7C,QAAAA,GACI,MAAM,SAAEtkC,GAAarM,KAAKuV,QAC1B,GAAIlJ,EACA,OAAOrM,KAAK+gB,KAAKq2B,YAAYj3C,IAAIkM,EACzC,CACAmkC,OAAAA,GAAiE,IAAzD,WAAEwF,EAAU,WAAEj5B,EAAU,sBAAEq2B,GAAwBt3C,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1D,MAAM40C,EAAQ1wC,KAAK2wC,WACfD,GACAA,EAAMF,QAAQxwC,KAAMozC,GACpB4C,IACAh2C,KAAKovC,qBAAkB15C,EACvBsK,KAAKg2C,YAAa,GAElBj5B,GACA/c,KAAKowC,WAAW,CAAErzB,cAC1B,CACA0zB,QAAAA,GACI,MAAMC,EAAQ1wC,KAAK2wC,WACnB,QAAID,GACOA,EAAMD,SAASzwC,KAK9B,CACAk5C,aAAAA,GACI,MAAM,cAAEzsC,GAAkBzM,KAAKuV,QAC/B,IAAK9I,EACD,OAEJ,IAAIoyC,GAAY,EAKhB,MAAM,aAAEvpC,GAAiB7I,EAQzB,IAPI6I,EAAaxB,QACbwB,EAAavB,SACbuB,EAAatB,SACbsB,EAAarB,WACb4qC,GAAY,IAGXA,EACD,OACJ,MAAMC,EAAc,CAAC,EAErB,IAAK,IAAIjnD,EAAI,EAAGA,EAAI88C,GAAc78C,OAAQD,IAAK,CAC3C,MAAMN,EAAM,SAAWo9C,GAAc98C,GAEjCyd,EAAa/d,KACbunD,EAAYvnD,GAAO+d,EAAa/d,GAChCkV,EAAcsyC,eAAexnD,EAAK,GAE1C,CAGAkV,EAAczL,SAEd,IAAK,MAAMzJ,KAAOunD,EACdryC,EAAcsyC,eAAexnD,EAAKunD,EAAYvnD,IAIlDkV,EAAcqmC,gBAClB,CACAv4B,mBAAAA,CAAoBF,GAChB,IAAIxC,EAAIsU,EACR,IAAKnsB,KAAKK,UAAYL,KAAK+1C,MACvB,OACJ,IAAK/1C,KAAKk3C,UACN,OAAOtC,GAEX,MAAMoK,EAAS,CACXnK,WAAY,IAEVr/B,EAAoBxV,KAAKm5C,uBAC/B,GAAIn5C,KAAKg2C,WAQL,OAPAh2C,KAAKg2C,YAAa,EAClBgJ,EAAOnqC,QAAU,GACjBmqC,EAAOC,cACHpjC,GAAiC,OAAdxB,QAAoC,IAAdA,OAAuB,EAASA,EAAU4kC,gBAAkB,GACzGD,EAAO1uC,UAAYkF,EACbA,EAAkBxV,KAAKsV,aAAc,IACrC,OACC0pC,EAEX,MAAMhM,EAAOhzC,KAAK87C,UAClB,IAAK97C,KAAKovC,kBAAoBpvC,KAAKkL,SAAW8nC,EAAKx8B,OAAQ,CACvD,MAAM0oC,EAAc,CAAC,EAerB,OAdIl/C,KAAKuV,QAAQlJ,WACb6yC,EAAYrqC,aACsBnf,IAA9BsK,KAAKsV,aAAaT,QACZ7U,KAAKsV,aAAaT,QAClB,EACVqqC,EAAYD,cACRpjC,GAAiC,OAAdxB,QAAoC,IAAdA,OAAuB,EAASA,EAAU4kC,gBAAkB,IAEzGj/C,KAAKi3C,eAAiBthC,GAAa3V,KAAKsV,gBACxC4pC,EAAY5uC,UAAYkF,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNxV,KAAKi3C,cAAe,GAEjBiI,CACX,CACA,MAAMC,EAAiBnM,EAAKS,iBAAmBT,EAAK19B,aACpDtV,KAAKq+C,0BACLW,EAAO1uC,UAAY2jC,GAAyBj0C,KAAK88C,6BAA8B98C,KAAKmvC,UAAWgQ,GAC3F3pC,IACAwpC,EAAO1uC,UAAYkF,EAAkB2pC,EAAgBH,EAAO1uC,YAEhE,MAAM,EAAEb,EAAC,EAAEC,GAAM1P,KAAKovC,gBACtB4P,EAAOtpC,gBAAkB,GAAHhc,OAAiB,IAAX+V,EAAEsI,OAAY,MAAAre,OAAgB,IAAXgW,EAAEqI,OAAY,OACzDi7B,EAAKS,gBAKLuL,EAAOnqC,QACHm+B,IAAShzC,KACiG,QAAnGmsB,EAAuC,QAAjCtU,EAAKsnC,EAAetqC,eAA4B,IAAPgD,EAAgBA,EAAK7X,KAAKsV,aAAaT,eAA4B,IAAPsX,EAAgBA,EAAK,EACjInsB,KAAKuzC,gBACDvzC,KAAKsV,aAAaT,QAClBsqC,EAAetB,YAO7BmB,EAAOnqC,QACHm+B,IAAShzC,UACwBtK,IAA3BypD,EAAetqC,QACXsqC,EAAetqC,QACf,QAC2Bnf,IAA/BypD,EAAetB,YACXsB,EAAetB,YACf,EAKlB,IAAK,MAAMtmD,KAAO0X,EAAiB,CAC/B,QAA4BvZ,IAAxBypD,EAAe5nD,GACf,SACJ,MAAM,QAAE03C,EAAO,QAAEmC,GAAYniC,EAAgB1X,GAOvC6nD,EAAiC,SAArBJ,EAAO1uC,UACnB6uC,EAAe5nD,GACf03C,EAAQkQ,EAAe5nD,GAAMy7C,GACnC,GAAI5B,EAAS,CACT,MAAMiO,EAAMjO,EAAQt5C,OACpB,IAAK,IAAID,EAAI,EAAGA,EAAIwnD,EAAKxnD,IACrBmnD,EAAO5N,EAAQv5C,IAAMunD,CAE7B,MAEIJ,EAAOznD,GAAO6nD,CAEtB,CAYA,OANIp/C,KAAKuV,QAAQlJ,WACb2yC,EAAOC,cACHjM,IAAShzC,KACH6b,GAAiC,OAAdxB,QAAoC,IAAdA,OAAuB,EAASA,EAAU4kC,gBAAkB,GACrG,QAEPD,CACX,CACAjF,aAAAA,GACI/5C,KAAKszC,WAAatzC,KAAKwzC,cAAW99C,CACtC,CAEA4pD,SAAAA,GACIt/C,KAAK+gB,KAAK21B,MAAMn8C,SAASglB,IAAW,IAAI1H,EAAI,OAAwC,QAAhCA,EAAK0H,EAAKsxB,wBAAqC,IAAPh5B,OAAgB,EAASA,EAAGuc,MAAM,IAC9Hp0B,KAAK+gB,KAAK21B,MAAMn8C,QAAQg/C,IACxBv5C,KAAK+gB,KAAKq2B,YAAYta,OAC1B,EAER,CACA,SAASoR,GAAa3uB,GAClBA,EAAK2uB,cACT,CACA,SAASyL,GAAmBp6B,GACxB,IAAI1H,EACJ,MAAM27B,GAAuC,QAA1B37B,EAAK0H,EAAK+zB,kBAA+B,IAAPz7B,OAAgB,EAASA,EAAG27B,WAAaj0B,EAAKi0B,SACnG,GAAIj0B,EAAKuxB,UACLvxB,EAAKrU,QACLsoC,GACAj0B,EAAKi4B,aAAa,aAAc,CAChC,MAAQnM,UAAWngC,EAAQ+vC,YAAasE,GAAmBhgC,EAAKrU,QAC1D,cAAEqzC,GAAkBh/B,EAAKhK,QACzBwmC,EAAWvI,EAASvsC,SAAWsY,EAAKrU,OAAOjE,OAG3B,SAAlBs3C,EACApW,IAAUxB,IACN,MAAM6Y,EAAezD,EACfvI,EAASyH,YAAYtU,GACrB6M,EAASnI,UAAU1E,GACnB7uC,EAAS4uC,GAAW8Y,GAC1BA,EAAahvC,IAAMtF,EAAOy7B,GAAMn2B,IAChCgvC,EAAa/uC,IAAM+uC,EAAahvC,IAAM1Y,CAAM,IAG3CwmD,GAA0BC,EAAe/K,EAASnI,UAAWngC,IAClEi9B,IAAUxB,IACN,MAAM6Y,EAAezD,EACfvI,EAASyH,YAAYtU,GACrB6M,EAASnI,UAAU1E,GACnB7uC,EAAS4uC,GAAWx7B,EAAOy7B,IACjC6Y,EAAa/uC,IAAM+uC,EAAahvC,IAAM1Y,EAIlCynB,EAAK44B,iBAAmB54B,EAAKsxB,mBAC7BtxB,EAAKm2B,mBAAoB,EACzBn2B,EAAK44B,eAAexR,GAAMl2B,IACtB8O,EAAK44B,eAAexR,GAAMn2B,IAAM1Y,EACxC,IAGR,MAAM2nD,EAAcxX,KACpBhB,GAAawY,EAAav0C,EAAQsoC,EAASnI,WAC3C,MAAMqU,EAAczX,KAChB8T,EACA9U,GAAayY,EAAangC,EAAK67B,eAAemE,GAAgB,GAAO/L,EAASyH,aAG9EhU,GAAayY,EAAax0C,EAAQsoC,EAASnI,WAE/C,MAAMoD,GAAoBiE,GAAY+M,GACtC,IAAIzH,GAA2B,EAC/B,IAAKz4B,EAAK+zB,WAAY,CAClB,MAAMqI,EAAiBp8B,EAAK08B,6BAK5B,GAAIN,IAAmBA,EAAerI,WAAY,CAC9C,MAAQE,SAAUmM,EAAgBz0C,OAAQ00C,GAAiBjE,EAC3D,GAAIgE,GAAkBC,EAAc,CAChC,MAAMC,EAAmB3X,KACzBb,GAAqBwY,EAAkBrM,EAASnI,UAAWsU,EAAetU,WAC1E,MAAM8R,EAAiBjV,KACvBb,GAAqB8V,EAAgBjyC,EAAQ00C,EAAavU,WACrDsH,GAAiBkN,EAAkB1C,KACpCnF,GAA2B,GAE3B2D,EAAepmC,QAAQojC,aACvBp5B,EAAK44B,eAAiBgF,EACtB59B,EAAK28B,qBAAuB2D,EAC5BtgC,EAAKo8B,eAAiBA,EAE9B,CACJ,CACJ,CACAp8B,EAAK+3B,gBAAgB,YAAa,CAC9BpsC,SACAsoC,WACAhjB,MAAOkvB,EACPD,cACAhR,mBACAuJ,4BAER,MACK,GAAIz4B,EAAKuxB,SAAU,CACpB,MAAM,eAAE3M,GAAmB5kB,EAAKhK,QAChC4uB,GAAkBA,GACtB,CAMA5kB,EAAKhK,QAAQwH,gBAAarnB,CAC9B,CACA,SAASihD,GAAoBp3B,GAIzBu1B,GAAoBC,aACfx1B,EAAK7S,SAQL6S,EAAK68B,iBACN78B,EAAKm2B,kBAAoBn2B,EAAK7S,OAAOgpC,mBAOzCn2B,EAAKo2B,0BAA4Bp2B,EAAKo2B,wBAA0B5rC,QAAQwV,EAAKm2B,mBACzEn2B,EAAK7S,OAAOgpC,mBACZn2B,EAAK7S,OAAOipC,0BAChBp2B,EAAKq2B,mBAAqBr2B,EAAKq2B,iBAAmBr2B,EAAK7S,OAAOkpC,kBAClE,CACA,SAASkB,GAAgBv3B,GACrBA,EAAKm2B,kBACDn2B,EAAKo2B,wBACDp2B,EAAKq2B,kBACD,CAChB,CACA,SAASmE,GAAcx6B,GACnBA,EAAKw6B,eACT,CACA,SAASR,GAAkBh6B,GACvBA,EAAKg6B,mBACT,CACA,SAASC,GAAmBj6B,GACxBA,EAAKo0B,eAAgB,CACzB,CACA,SAAS+F,GAAoBn6B,GACzB,MAAM,cAAE9S,GAAkB8S,EAAKhK,QAC3B9I,GAAiBA,EAAcqT,WAAWggC,uBAC1CrzC,EAAckwB,OAAO,uBAEzBpd,EAAKg2B,gBACT,CACA,SAASuC,GAAgBv4B,GACrBA,EAAKu4B,kBACLv4B,EAAKk8B,YAAcl8B,EAAK44B,eAAiB54B,EAAK/I,YAAS9gB,EACvD6pB,EAAKm2B,mBAAoB,CAC7B,CACA,SAASkB,GAAmBr3B,GACxBA,EAAKq3B,oBACT,CACA,SAASC,GAAet3B,GACpBA,EAAKs3B,gBACT,CACA,SAASqC,GAAc35B,GACnBA,EAAK25B,eACT,CACA,SAASc,GAAoBtJ,GACzBA,EAAMsD,oBACV,CACA,SAAS0J,GAAa1xB,EAAQwE,EAAOloB,GACjC0jB,EAAOgb,UAAYte,GAAU8H,EAAMwW,UAAW,EAAG1+B,GACjD0jB,EAAOlb,MAAQ4X,GAAU8H,EAAM1f,MAAO,EAAGxI,GACzC0jB,EAAOjU,OAASyY,EAAMzY,OACtBiU,EAAO+a,YAAcvW,EAAMuW,WAC/B,CACA,SAAS4W,GAAQ3xB,EAAQzD,EAAMC,EAAIlgB,GAC/B0jB,EAAOxb,IAAMkY,GAAUH,EAAK/X,IAAKgY,EAAGhY,IAAKlI,GACzC0jB,EAAOvb,IAAMiY,GAAUH,EAAK9X,IAAK+X,EAAG/X,IAAKnI,EAC7C,CAKA,SAASi1C,GAAoBh+B,GACzB,OAAQA,EAAKk0B,sBAAwD/9C,IAArC6pB,EAAKk0B,gBAAgBoK,WACzD,CACA,MAAMxF,GAA0B,CAC5BzpB,SAAU,IACVhJ,KAAM,CAAC,GAAK,EAAG,GAAK,IAElBm6B,GAAqBliD,GAAgC,qBAAdmiD,WACzCA,UAAUC,WACVD,UAAUC,UAAUzmD,cAAc8B,SAASuC,GAMzCqiD,GAAaH,GAAkB,kBAAoBA,GAAkB,WACrE/uC,KAAKC,MACL0R,GAAAA,EACN,SAASq4B,GAAUrU,GAEfA,EAAKn2B,IAAM0vC,GAAWvZ,EAAKn2B,KAC3Bm2B,EAAKl2B,IAAMyvC,GAAWvZ,EAAKl2B,IAC/B,CAKA,SAAS6tC,GAA0BC,EAAe/K,EAAUtoC,GACxD,MAA0B,aAAlBqzC,GACe,oBAAlBA,IACI3X,GAAOgM,GAAYY,GAAWZ,GAAY1nC,GAAS,GAChE,CKz9CA,MAAMi1C,GAAyBjL,GAAqB,CAChDC,qBAAsBA,CAAC9rC,EAAKszB,IAAWpf,GAAYlU,EAAK,SAAUszB,GAClE0Y,cAAeA,KAAA,CACX5lC,EAAGlQ,SAAS6gD,gBAAgBC,YAAc9gD,SAAS+gD,KAAKD,WACxD3wC,EAAGnQ,SAAS6gD,gBAAgBG,WAAahhD,SAAS+gD,KAAKC,YAE3DjL,kBAAmBA,KAAM,ICNvBxI,GAAqB,CACvB9zC,aAAStD,GAEP8qD,GAAqBtL,GAAqB,CAC5CG,cAAgBh1C,IAAQ,CACpBoP,EAAGpP,EAASggD,WACZ3wC,EAAGrP,EAASkgD,YAEhBnL,cAAeA,KACX,IAAKtI,GAAmB9zC,QAAS,CAC7B,MAAMynD,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAaxyC,MAAM3O,QACnBmhD,EAAarQ,WAAW,CAAEmK,cAAc,IACxCzN,GAAmB9zC,QAAUynD,CACjC,CACA,OAAO3T,GAAmB9zC,OAAO,EAErCu8C,eAAgBA,CAACl1C,EAAU7I,KACvB6I,EAASlB,MAAMmR,eAAsB5a,IAAV8B,EAAsBA,EAAQ,MAAM,EAEnE89C,kBAAoBj1C,GAAa0J,QAAuD,UAA/CzK,OAAOohD,iBAAiBrgD,GAAUsgD,YClBzE/1C,GAAO,CACTI,IAAK,CACDsU,QrBKR,cAAyBA,GACrB5f,WAAAA,GACIoB,SAAShF,WACTkE,KAAK4gD,0BAA4Bj+B,GAAAA,CACrC,CACAk+B,aAAAA,CAAcC,GACV9gD,KAAK+gD,QAAU,IAAIvc,GAAWsc,EAAkB9gD,KAAKghD,oBAAqB,CACtE34C,mBAAoBrI,KAAKuf,KAAKssB,wBAC9BnH,cAAeqF,GAAiB/pC,KAAKuf,OAE7C,CACAyhC,iBAAAA,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAaphD,KAAKuf,KAAKO,WACrE,MAAO,CACHmmB,eAAgByI,GAAauS,GAC7B3b,QAASoJ,GAAawS,GACtB3b,OAAQ4b,EACRvb,MAAOA,CAAC9nB,EAAO+B,YACJ7f,KAAK+gD,QACRK,GACAlkC,GAAAA,GAAM9P,QAAO,IAAMg0C,EAAStjC,EAAO+B,IACvC,EAGZ,CACA5R,KAAAA,GACIjO,KAAK4gD,0BAA4BtiC,GAAgBte,KAAKuf,KAAKvmB,QAAS,eAAgB8kB,GAAU9d,KAAK6gD,cAAc/iC,IACrH,CACA1Q,MAAAA,GACIpN,KAAK+gD,SAAW/gD,KAAK+gD,QAAQ5a,eAAenmC,KAAKghD,oBACrD,CACA9yC,OAAAA,GACIlO,KAAK4gD,4BACL5gD,KAAK+gD,SAAW/gD,KAAK+gD,QAAQpb,KACjC,IqBrCA/6B,KAAM,CACF0U,QCNR,cAA0BA,GACtB5f,WAAAA,CAAY6f,GACRze,MAAMye,GACNvf,KAAKqhD,oBAAsB1+B,GAAAA,EAC3B3iB,KAAKkmC,gBAAkBvjB,GAAAA,EACvB3iB,KAAKu3B,SAAW,IAAI4S,GAA0B5qB,EAClD,CACAtR,KAAAA,GAGI,MAAM,aAAEqzC,GAAiBthD,KAAKuf,KAAKO,WAC/BwhC,IACAthD,KAAKqhD,oBAAsBC,EAAatd,UAAUhkC,KAAKu3B,WAE3Dv3B,KAAKkmC,gBAAkBlmC,KAAKu3B,SAAS4W,gBAAkBxrB,GAAAA,CAC3D,CACAzU,OAAAA,GACIlO,KAAKqhD,sBACLrhD,KAAKkmC,iBACT,GDZIqb,eAAgBf,GAChBr0C,cAAaA,KECfq1C,GAAwB,uDAQ9B,MAAMC,GAAW,EACjB,SAASC,GAAiB1oD,EAASohB,GAAoB,IAAXo6B,EAAK14C,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,GAChD6J,EAAAA,GAAAA,GAAU6uC,GAASiN,GAAU,yDAAF/nD,OAA2DV,EAAO,yDAC7F,MAAO+W,EAAO4xC,GAVlB,SAA0B3oD,GACtB,MAAMsO,EAAQk6C,GAAsBI,KAAK5oD,GACzC,IAAKsO,EACD,MAAO,CAAC,GACZ,MAAO,CAAEyI,EAAO4xC,GAAYr6C,EAC5B,MAAO,CAACyI,EAAO4xC,EACnB,CAI8BE,CAAiB7oD,GAE3C,IAAK+W,EACD,OAEJ,MAAM8M,EAAWvd,OAAOohD,iBAAiBtmC,GAAS0nC,iBAAiB/xC,GACnE,GAAI8M,EAAU,CACV,MAAMklC,EAAUllC,EAASzM,OACzB,OAAOisB,GAAkB0lB,GAAWnxC,WAAWmxC,GAAWA,CAC9D,CACK,OAAI7xC,EAAmByxC,GAEjBD,GAAiBC,EAAUvnC,EAASo6B,EAAQ,GAG5CmN,CAEf,CCjCA,MAAMK,GAAiB,IAAI17C,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEE27C,GAAmB1qD,GAAQyqD,GAAej7C,IAAIxP,GAI9C2qD,GAAiB34C,GAAMA,IAAMmH,GAAUnH,IAAMoI,GAC7CwwC,GAAmBA,CAACC,EAAQC,IAAQzxC,WAAWwxC,EAAOt/C,MAAM,MAAMu/C,IAClEC,GAAyBA,CAACC,EAAMC,IAAS,CAACC,EAAKnrD,KAAoB,IAAlB,UAAEgZ,GAAWhZ,EAChE,GAAkB,SAAdgZ,IAAyBA,EACzB,OAAO,EACX,MAAMoyC,EAAWpyC,EAAUhJ,MAAM,sBACjC,GAAIo7C,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAAS9xC,EAAUhJ,MAAM,oBAC/B,OAAI86C,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEI,GAAgB,IAAIr8C,IAAI,CAAC,IAAK,IAAK,MACnCs8C,GAAgC1zC,EAAmBrW,QAAQtB,IAASorD,GAAc57C,IAAIxP,KAe5F,MAAMsrD,GAAmB,CAErBjwC,MAAOA,CAAAhU,EAAAkkD,KAAA,IAAC,EAAErzC,GAAG7Q,GAAE,YAAE4U,EAAc,IAAG,aAAEF,EAAe,KAAKwvC,EAAA,OAAKrzC,EAAEgB,IAAMhB,EAAEe,IAAMI,WAAW4C,GAAe5C,WAAW0C,EAAa,EAC/HR,OAAQA,CAAAiwC,EAAAC,KAAA,IAAC,EAAEtzC,GAAGqzC,GAAE,WAAE1vC,EAAa,IAAG,cAAEE,EAAgB,KAAKyvC,EAAA,OAAKtzC,EAAEe,IAAMf,EAAEc,IAAMI,WAAWyC,GAAczC,WAAW2C,EAAc,EAChIP,IAAKA,CAACyvC,EAAKQ,KAAA,IAAE,IAAEjwC,GAAKiwC,EAAA,OAAKryC,WAAWoC,EAAI,EACxCG,KAAMA,CAACsvC,EAAKS,KAAA,IAAE,KAAE/vC,GAAM+vC,EAAA,OAAKtyC,WAAWuC,EAAK,EAC3CD,OAAQA,CAAAiwC,EAAAC,KAAA,IAAC,EAAE1zC,GAAGyzC,GAAE,IAAEnwC,GAAKowC,EAAA,OAAKxyC,WAAWoC,IAAQtD,EAAEe,IAAMf,EAAEc,IAAI,EAC7DyC,MAAOA,CAAAowC,EAAAC,KAAA,IAAC,EAAE7zC,GAAG4zC,GAAE,KAAElwC,GAAMmwC,EAAA,OAAK1yC,WAAWuC,IAAS1D,EAAEgB,IAAMhB,EAAEe,IAAI,EAE9Df,EAAG6yC,GAAuB,EAAG,IAC7B5yC,EAAG4yC,GAAuB,EAAG,KAGjCO,GAAiBpuC,WAAaouC,GAAiBpzC,EAC/CozC,GAAiBnuC,WAAamuC,GAAiBnzC,EAC/C,MA6BM6zC,GAAmC,SAAC92C,EAAe+J,GAA4C,IAApCuB,EAAMjc,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGghB,EAAahhB,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3F0a,EAAS,IAAKA,GACdsG,EAAgB,IAAKA,GACrB,MAAM0mC,EAAuB/sD,OAAO6C,KAAKkd,GAAQ3d,OAAOopD,IAGxD,IAAIwB,EAAyB,GACzBC,GAAsC,EAC1C,MAAMC,EAAuB,GAkF7B,GAjFAH,EAAqBjpD,SAAShD,IAC1B,MAAMC,EAAQiV,EAAc8yB,SAAShoC,GACrC,IAAKkV,EAAc6yB,SAAS/nC,GACxB,OACJ,IAAIgxB,EAAOxQ,EAAOxgB,GACdqsD,EAAWzkB,GAAuB5W,GACtC,MAAMC,EAAKhS,EAAOjf,GAClB,IAAIssD,EAKJ,GAAIroC,GAAkBgN,GAAK,CACvB,MAAMs7B,EAAet7B,EAAG1wB,OAClBisD,EAAsB,OAAVv7B,EAAG,GAAc,EAAI,EACvCD,EAAOC,EAAGu7B,GACVH,EAAWzkB,GAAuB5W,GAClC,IAAK,IAAI1wB,EAAIksD,EAAWlsD,EAAIisD,GAKV,OAAVt7B,EAAG3wB,GAL+BA,IAOjCgsD,GAMDl+C,EAAAA,GAAAA,GAAUw5B,GAAuB3W,EAAG3wB,MAAQgsD,EAAQ,2CALpDA,EAAS1kB,GAAuB3W,EAAG3wB,KACnC8N,EAAAA,GAAAA,GAAUk+C,IAAWD,GAChB1B,GAAc0B,IAAa1B,GAAc2B,GAAU,gEAMpE,MAEIA,EAAS1kB,GAAuB3W,GAEpC,GAAIo7B,IAAaC,EAGb,GAAI3B,GAAc0B,IAAa1B,GAAc2B,GAAS,CAClD,MAAM7qD,EAAUxB,EAAM2I,MACC,kBAAZnH,GACPxB,EAAMqX,IAAI+B,WAAW5X,IAEP,kBAAPwvB,EACPhS,EAAOjf,GAAOqZ,WAAW4X,GAEpBlwB,MAAMC,QAAQiwB,IAAOq7B,IAAWlyC,KACrC6E,EAAOjf,GAAOixB,EAAG1vB,IAAI8X,YAE7B,MACuB,OAAbgzC,QAAkC,IAAbA,OAAsB,EAASA,EAAStzC,aACvD,OAAXuzC,QAA8B,IAAXA,OAAoB,EAASA,EAAOvzC,aAC9C,IAATiY,GAAqB,IAAPC,GAGF,IAATD,EACA/wB,EAAMqX,IAAIg1C,EAAOvzC,UAAUiY,IAG3B/R,EAAOjf,GAAOqsD,EAAStzC,UAAUkY,IAMhCk7B,IACDD,EAvIpB,SAAyCh3C,GACrC,MAAMu3C,EAAoB,GAW1B,OAVApB,GAA8BroD,SAAShD,IACnC,MAAMC,EAAQiV,EAAc8yB,SAAShoC,QACvB7B,IAAV8B,IACAwsD,EAAkBxpD,KAAK,CAACjD,EAAKC,EAAM2I,QACnC3I,EAAMqX,IAAItX,EAAI8X,WAAW,SAAW,EAAI,GAC5C,IAGA20C,EAAkBlsD,QAClB2U,EAAczL,SACXgjD,CACX,CA2HwBC,CAAgCx3C,GACpCi3C,GAAsC,GAE1CC,EAAqBnpD,KAAKjD,GAC1BulB,EAAcvlB,QACa7B,IAAvBonB,EAAcvlB,GACRulB,EAAcvlB,GACdif,EAAOjf,GACjBC,EAAM+mC,KAAK/V,GAEnB,IAEAm7B,EAAqB7rD,OAAQ,CAC7B,MAAMosD,EAAUP,EAAqBlqD,QAAQ,WAAa,EACpD6F,OAAO6kD,YACP,KACAC,EA3HmBC,EAAC7tC,EAAQ/J,EAAe63C,KACrD,MAAMC,EAAa93C,EAAck9B,qBAC3BvvB,EAAU3N,EAAczT,QACxBwrD,EAAuB9D,iBAAiBtmC,IACxC,QAAEuiC,GAAY6H,EACdzsC,EAAS,CAAC,EAGA,SAAZ4kC,GACAlwC,EAAcsyC,eAAe,UAAWvoC,EAAOmmC,SAAW,SAK9D2H,EAAY/pD,SAAShD,IACjBwgB,EAAOxgB,GAAOsrD,GAAiBtrD,GAAKgtD,EAAYC,EAAqB,IAGzE/3C,EAAczL,SACd,MAAMyjD,EAAah4C,EAAck9B,qBAQjC,OAPA2a,EAAY/pD,SAAShD,IAGjB,MAAMC,EAAQiV,EAAc8yB,SAAShoC,GACrCC,GAASA,EAAM+mC,KAAKxmB,EAAOxgB,IAC3Bif,EAAOjf,GAAOsrD,GAAiBtrD,GAAKktD,EAAYD,EAAqB,IAElEhuC,CAAM,EAgGe6tC,CAAyB7tC,EAAQ/J,EAAek3C,GAaxE,OAXIF,EAAuB3rD,QACvB2rD,EAAuBlpD,SAAQmqD,IAAkB,IAAhBntD,EAAKC,GAAMktD,EACxCj4C,EAAc8yB,SAAShoC,GAAKsX,IAAIrX,EAAM,IAI9CiV,EAAczL,SAEVwL,EAAAA,GAAyB,OAAZ03C,GACb5kD,OAAOqlD,SAAS,CAAE3xC,IAAKkxC,IAEpB,CAAE1tC,OAAQ4tC,EAAiBtnC,gBACtC,CAEI,MAAO,CAAEtG,SAAQsG,gBAEzB,EAQA,SAAS8nC,GAAen4C,EAAe+J,EAAQuB,EAAQ+E,GACnD,MA3MsBtG,IACf/f,OAAO6C,KAAKkd,GAAQtU,KAAK+/C,IA0MzB4C,CAAiBruC,GAClB+sC,GAAiC92C,EAAe+J,EAAQuB,EAAQ+E,GAChE,CAAEtG,SAAQsG,gBACpB,CC5NA,MAAMgoC,GAAkBA,CAACr4C,EAAe+J,EAAQuB,EAAQ+E,KACpD,MAAMD,EFuCV,SAA6BpQ,EAAanV,EAAiBwlB,GAAe,OAAzBtG,GAAQlf,EACrD,MAAM8iB,EAAU3N,EAAczT,QAC9B,KAAMohB,aAAmBlU,SACrB,MAAO,CAAEsQ,SAAQsG,iBAGjBA,IACAA,EAAgB,IAAKA,IAGzBrQ,EAAc/V,OAAO6D,SAAS/C,IAC1B,MAAMwB,EAAUxB,EAAM2I,MACtB,IAAK+P,EAAmBlX,GACpB,OACJ,MAAM6jB,EAAW6kC,GAAiB1oD,EAASohB,GACvCyC,GACArlB,EAAMqX,IAAIgO,EAAS,IAI3B,IAAK,MAAMtlB,KAAOif,EAAQ,CACtB,MAAMxd,EAAUwd,EAAOjf,GACvB,IAAK2Y,EAAmBlX,GACpB,SACJ,MAAM6jB,EAAW6kC,GAAiB1oD,EAASohB,GACtCyC,IAGLrG,EAAOjf,GAAOslB,EACTC,IACDA,EAAgB,CAAC,QAIMpnB,IAAvBonB,EAAcvlB,KACdulB,EAAcvlB,GAAOyB,GAE7B,CACA,MAAO,CAAEwd,SAAQsG,gBACrB,CE9EqBioC,CAAoBt4C,EAAe+J,EAAQsG,GAG5D,OAAO8nC,GAAen4C,EAFtB+J,EAASqG,EAASrG,OAE2BuB,EAD7C+E,EAAgBD,EAASC,cAC0C,ECVjEkoC,GAAuB,CAAEhsD,QAAS,MAClCisD,GAA2B,CAAEjsD,SAAS,GCF5C,MAAMksD,GAAqB,IAAI3kC,QCoBzB4kC,GAAe1uD,OAAO6C,KAAK6R,GAC3Bi6C,GAAcD,GAAartD,OAC3ButD,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkB37C,EAAa7R,OAKrC,MAAMytD,GACF7lD,WAAAA,CAAWpI,GAAsF,IAArF,OAAEoV,EAAM,MAAE3U,EAAK,gBAAE6U,EAAe,oBAAEE,EAAmB,YAAEP,GAAcjV,EAAEie,EAAOzZ,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,GAAAA,UAAA,GAAG,CAAC,EAK1FkE,KAAKhH,QAAU,KAIfgH,KAAKkB,SAAW,IAAIoF,IAIpBtG,KAAK8J,eAAgB,EACrB9J,KAAK4J,uBAAwB,EAQ7B5J,KAAK0gC,mBAAqB,KAM1B1gC,KAAKtJ,OAAS,IAAI0P,IAIlBpG,KAAK8L,SAAW,CAAC,EAKjB9L,KAAKwlD,mBAAqB,IAAIp/C,IAM9BpG,KAAKylD,iBAAmB,CAAC,EAIzBzlD,KAAKo9B,OAAS,CAAC,EAMfp9B,KAAK0lD,uBAAyB,CAAC,EAC/B1lD,KAAK2lD,aAAe,IAAM3lD,KAAK28B,OAAO,SAAU38B,KAAKsV,cACrDtV,KAAKgB,OAAS,KACLhB,KAAKhH,UAEVgH,KAAK4lD,eACL5lD,KAAK6lD,eAAe7lD,KAAKhH,QAASgH,KAAK2a,YAAa3a,KAAKjI,MAAMoH,MAAOa,KAAKsa,YAAW,EAE1Fta,KAAK8yC,eAAiB,IAAM51B,GAAAA,GAAMlc,OAAOhB,KAAKgB,QAAQ,GAAO,GAC7D,MAAM,aAAEsU,EAAY,YAAEqF,GAAgBpO,EACtCvM,KAAKsV,aAAeA,EACpBtV,KAAK8lD,WAAa,IAAKxwC,GACvBtV,KAAK+lD,cAAgBhuD,EAAMmS,QAAU,IAAKoL,GAAiB,CAAC,EAC5DtV,KAAK2a,YAAcA,EACnB3a,KAAK0M,OAASA,EACd1M,KAAKjI,MAAQA,EACbiI,KAAK4M,gBAAkBA,EACvB5M,KAAKw0C,MAAQ9nC,EAASA,EAAO8nC,MAAQ,EAAI,EACzCx0C,KAAK8M,oBAAsBA,EAC3B9M,KAAKuV,QAAUA,EACfvV,KAAK4J,sBAAwBA,EAAsB7R,GACnDiI,KAAK8J,cAAgBA,EAAc/R,GAC/BiI,KAAK8J,gBACL9J,KAAK+gC,gBAAkB,IAAIz6B,KAE/BtG,KAAK8iC,uBAAyB/4B,QAAQ2C,GAAUA,EAAO1T,SAWvD,MAAM,WAAEmnC,KAAe6lB,GAAwBhmD,KAAK6a,4BAA4B9iB,EAAO,CAAC,GACxF,IAAK,MAAMR,KAAOyuD,EAAqB,CACnC,MAAMxuD,EAAQwuD,EAAoBzuD,QACR7B,IAAtB4f,EAAa/d,IAAsB+X,EAAc9X,KACjDA,EAAMqX,IAAIyG,EAAa/d,IAAM,GACzB6kC,GAAwB+D,IACxBA,EAAW//B,IAAI7I,GAG3B,CACJ,CAQAsjB,2BAAAA,CAA4BorC,EAAQC,GAChC,MAAO,CAAC,CACZ,CACAj4C,KAAAA,CAAM5N,GACFL,KAAKhH,QAAUqH,EACf6kD,GAAmBr2C,IAAIxO,EAAUL,MAC7BA,KAAKsa,aAAeta,KAAKsa,WAAWja,UACpCL,KAAKsa,WAAWrM,MAAM5N,GAEtBL,KAAK0M,QAAU1M,KAAK8J,gBAAkB9J,KAAK4J,wBAC3C5J,KAAKmmD,sBAAwBnmD,KAAK0M,OAAO05C,gBAAgBpmD,OAE7DA,KAAKtJ,OAAO6D,SAAQ,CAAC/C,EAAOD,IAAQyI,KAAKqmD,kBAAkB9uD,EAAKC,KAC3DytD,GAAyBjsD,SC1JtC,WAEI,GADAisD,GAAyBjsD,SAAU,EAC9BwT,EAAAA,EAEL,GAAIlN,OAAOgnD,WAAY,CACnB,MAAMC,EAAmBjnD,OAAOgnD,WAAW,4BACrCE,EAA8BA,IAAOxB,GAAqBhsD,QAAUutD,EAAiB/hC,QAC3F+hC,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIxB,GAAqBhsD,SAAU,CAEvC,CD8IY0tD,GAEJ1mD,KAAK0gC,mBAC4B,UAA7B1gC,KAAK8M,sBAE8B,WAA7B9M,KAAK8M,qBAEDk4C,GAAqBhsD,SAI/BgH,KAAK0M,QACL1M,KAAK0M,OAAOxL,SAASd,IAAIJ,MAC7BA,KAAKoN,OAAOpN,KAAKjI,MAAOiI,KAAK4M,gBACjC,CACAsB,OAAAA,GACIg3C,GAAmB3jC,OAAOvhB,KAAKhH,SAC/BgH,KAAKsa,YAActa,KAAKsa,WAAWpM,WACnCmmB,EAAAA,GAAAA,IAAYr0B,KAAK2lD,eACjBtxB,EAAAA,GAAAA,IAAYr0B,KAAKgB,QACjBhB,KAAKwlD,mBAAmBjrD,SAAS+F,GAAWA,MAC5CN,KAAKmmD,uBAAyBnmD,KAAKmmD,wBACnCnmD,KAAK0M,QAAU1M,KAAK0M,OAAOxL,SAASqgB,OAAOvhB,MAC3C,IAAK,MAAMzI,KAAOyI,KAAKo9B,OACnBp9B,KAAKo9B,OAAO7lC,GAAKulC,QAErB,IAAK,MAAMvlC,KAAOyI,KAAK8L,SACnB9L,KAAK8L,SAASvU,GAAK2W,UAEvBlO,KAAKhH,QAAU,IACnB,CACAqtD,iBAAAA,CAAkB9uD,EAAKC,GACnB,MAAMmvD,EAAmBx3C,EAAepI,IAAIxP,GACtCqvD,EAAiBpvD,EAAMwmC,GAAG,UAAW6oB,IACvC7mD,KAAKsV,aAAa/d,GAAOsvD,EACzB7mD,KAAKjI,MAAM29B,UACPxY,GAAAA,GAAM9P,OAAOpN,KAAK2lD,cAAc,GAAO,GACvCgB,GAAoB3mD,KAAKsa,aACzBta,KAAKsa,WAAWs7B,kBAAmB,EACvC,IAEEkR,EAAwBtvD,EAAMwmC,GAAG,gBAAiBh+B,KAAK8yC,gBAC7D9yC,KAAKwlD,mBAAmB32C,IAAItX,GAAK,KAC7BqvD,IACAE,GAAuB,GAE/B,CACAtlB,gBAAAA,CAAiBulB,GAIb,OAAK/mD,KAAKhH,SACLgH,KAAKgnD,0BACNhnD,KAAK3J,OAAS0wD,EAAM1wD,KAGjB2J,KAAKgnD,yBAAyBhnD,KAAKhH,QAAS+tD,EAAM/tD,SAF9C,CAGf,CACA+S,YAAAA,CAAYnN,EAAiCmP,EAAUrC,EAAmBoC,GAA0B,IAC5Fm5C,EACA96C,GAFK,SAAEjL,KAAagmD,GAAetoD,EAevC,IAAK,IAAI/G,EAAI,EAAGA,EAAIutD,GAAavtD,IAAK,CAClC,MAAM9B,EAAOovD,GAAattD,IACpB,UAAEuT,EAAWkU,QAAS6nC,EAAkB,eAAE5F,EAAgBp1C,cAAei7C,GAA4Bj8C,EAAmBpV,GAC1HwrD,IACA0F,EAA4B1F,GAC5Bn2C,EAAU87C,MACLlnD,KAAK8L,SAAS/V,IAASoxD,IACxBnnD,KAAK8L,SAAS/V,GAAQ,IAAIoxD,EAAmBnnD,OAE7ConD,IACAj7C,EAAgBi7C,GAG5B,CACA,IAAmB,SAAdpnD,KAAK3J,MAAiC,QAAd2J,KAAK3J,QAC7B2J,KAAKsa,YACN2sC,EAA2B,CAC3BjnD,KAAKsa,WAAa,IAAI2sC,EAA0BjnD,KAAKsV,aAActV,KAAK0M,QAAU1M,KAAK0M,OAAO4N,YAC9F,MAAM,SAAEjO,EAAQ,OAAEnB,EAAM,KAAEN,EAAI,gBAAEuhC,EAAe,aAAEoO,EAAY,WAAE5B,GAAgBuO,EAC/ElnD,KAAKsa,WAAW81B,WAAW,CACvB/jC,WACAnB,SACAgvC,oBAAqBnwC,QAAQa,IACxBuhC,GAAmB/iC,EAAY+iC,GACpC1/B,cAAezM,KACf8yC,eAAgBA,IAAM9yC,KAAK8yC,iBAQ3ByL,cAAiC,kBAAXrzC,EAAsBA,EAAS,OACrDwzC,uBAAwB5wC,EACxBysC,eACA5B,cAER,CACA,OAAOxsC,CACX,CACAyB,cAAAA,GACI,IAAK,MAAMrW,KAAOyI,KAAK8L,SAAU,CAC7B,MAAMu7C,EAAUrnD,KAAK8L,SAASvU,GAC1B8vD,EAAQ7nC,UACR6nC,EAAQj6C,UAGRi6C,EAAQp5C,QACRo5C,EAAQ7nC,WAAY,EAE5B,CACJ,CACAomC,YAAAA,GACI5lD,KAAKsnD,MAAMtnD,KAAK2a,YAAa3a,KAAKsV,aAActV,KAAKuV,QAASvV,KAAKjI,MACvE,CAMA4xC,kBAAAA,GACI,OAAO3pC,KAAKhH,QACNgH,KAAKunD,2BAA2BvnD,KAAKhH,QAASgH,KAAKjI,OACnDmwC,IACV,CACAsf,cAAAA,CAAejwD,GACX,OAAOyI,KAAKsV,aAAa/d,EAC7B,CACAwnD,cAAAA,CAAexnD,EAAKC,GAChBwI,KAAKsV,aAAa/d,GAAOC,CAC7B,CAQAkoC,oBAAAA,CAAqBlpB,GAA0B,IAAlBixC,IAAS3rD,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,KAAAA,UAAA,GAClC,OAAOkE,KAAK0nD,iCAAiClxC,EAAQixC,EACzD,CAKAr6C,MAAAA,CAAOrV,EAAO6U,IACN7U,EAAMyd,mBAAqBxV,KAAKjI,MAAMyd,oBACtCxV,KAAK8yC,iBAET9yC,KAAK8a,UAAY9a,KAAKjI,MACtBiI,KAAKjI,MAAQA,EACbiI,KAAKqkC,oBAAsBrkC,KAAK4M,gBAChC5M,KAAK4M,gBAAkBA,EAIvB,IAAK,IAAI/U,EAAI,EAAGA,EAAIwtD,GAAkBvtD,OAAQD,IAAK,CAC/C,MAAMN,EAAM8tD,GAAkBxtD,GAC1BmI,KAAK0lD,uBAAuBnuD,KAC5ByI,KAAK0lD,uBAAuBnuD,YACrByI,KAAK0lD,uBAAuBnuD,IAEvC,MAAMowD,EAAW5vD,EAAM,KAAOR,GAC1BowD,IACA3nD,KAAK0lD,uBAAuBnuD,GAAOyI,KAAKg+B,GAAGzmC,EAAKowD,GAExD,CACA3nD,KAAKylD,iBE9Ub,SAAqCrrC,EAASvT,EAAM8d,GAChD,MAAM,WAAEwb,GAAet5B,EACvB,IAAK,MAAMtP,KAAOsP,EAAM,CACpB,MAAM+gD,EAAY/gD,EAAKtP,GACjBswD,EAAYljC,EAAKptB,GACvB,GAAI+X,EAAcs4C,GAKdxtC,EAAQolB,SAASjoC,EAAKqwD,GAClBxrB,GAAwB+D,IACxBA,EAAW//B,IAAI7I,QAUlB,GAAI+X,EAAcu4C,GAKnBztC,EAAQolB,SAASjoC,EAAKynC,GAAY4oB,EAAW,CAAEhvB,MAAOxe,KAClDgiB,GAAwB+D,IACxBA,EAAW7/B,OAAO/I,QAGrB,GAAIswD,IAAcD,EAMnB,GAAIxtC,EAAQklB,SAAS/nC,GAAM,CACvB,MAAMuwD,EAAgB1tC,EAAQmlB,SAAShoC,IAEtCuwD,EAAcnqB,aAAemqB,EAAcj5C,IAAI+4C,EACpD,KACK,CACD,MAAMf,EAAczsC,EAAQotC,eAAejwD,GAC3C6iB,EAAQolB,SAASjoC,EAAKynC,QAA4BtpC,IAAhBmxD,EAA4BA,EAAce,EAAW,CAAEhvB,MAAOxe,IACpG,CAER,CAEA,IAAK,MAAM7iB,KAAOotB,OACIjvB,IAAdmR,EAAKtP,IACL6iB,EAAQ2tC,YAAYxwD,GAE5B,OAAOsP,CACX,CFuRgCmhD,CAA4BhoD,KAAMA,KAAK6a,4BAA4B9iB,EAAOiI,KAAK8a,WAAY9a,KAAKylD,kBACpHzlD,KAAKioD,wBACLjoD,KAAKioD,wBAEb,CACAnoC,QAAAA,GACI,OAAO9f,KAAKjI,KAChB,CAIAmwD,UAAAA,CAAWnyD,GACP,OAAOiK,KAAKjI,MAAMiS,SAAWhK,KAAKjI,MAAMiS,SAASjU,QAAQL,CAC7D,CAIA6jC,oBAAAA,GACI,OAAOv5B,KAAKjI,MAAMglB,UACtB,CACA8uB,qBAAAA,GACI,OAAO7rC,KAAKjI,MAAMsQ,kBACtB,CACA8/C,qBAAAA,GACI,OAAOnoD,KAAK8J,cACN9J,KACAA,KAAK0M,OACD1M,KAAK0M,OAAOy7C,6BACZzyD,CACd,CACA4sC,iBAAAA,GACI,GAD2BxmC,UAAAhE,OAAA,QAAApC,IAAAoG,UAAA,IAAAA,UAAA,GAEvB,OAAOkE,KAAK0M,OAAS1M,KAAK0M,OAAO41B,yBAAsB5sC,EAE3D,IAAKsK,KAAK4J,sBAAuB,CAC7B,MAAMjK,EAAUK,KAAK0M,QACf1M,KAAK0M,OAAO41B,qBACZ,CAAC,EAIP,YAH2B5sC,IAAvBsK,KAAKjI,MAAMmS,UACXvK,EAAQuK,QAAUlK,KAAKjI,MAAMmS,SAE1BvK,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAI9H,EAAI,EAAGA,EAAIytD,GAAiBztD,IAAK,CACtC,MAAM9B,EAAO4T,EAAa9R,GACpB2S,EAAOxK,KAAKjI,MAAMhC,IACpBuT,EAAekB,KAAkB,IAATA,KACxB7K,EAAQ5J,GAAQyU,EAExB,CACA,OAAO7K,CACX,CAIAymD,eAAAA,CAAgBphD,GACZ,MAAMojD,EAAqBpoD,KAAKmoD,wBAChC,GAAIC,EAGA,OAFAA,EAAmBrnB,iBACfqnB,EAAmBrnB,gBAAgB3gC,IAAI4E,GACpC,IAAMojD,EAAmBrnB,gBAAgBxf,OAAOvc,EAE/D,CAIAw6B,QAAAA,CAASjoC,EAAKC,GAENA,IAAUwI,KAAKtJ,OAAOyJ,IAAI5I,KAC1ByI,KAAK+nD,YAAYxwD,GACjByI,KAAKqmD,kBAAkB9uD,EAAKC,IAEhCwI,KAAKtJ,OAAOmY,IAAItX,EAAKC,GACrBwI,KAAKsV,aAAa/d,GAAOC,EAAM2I,KACnC,CAIA4nD,WAAAA,CAAYxwD,GACRyI,KAAKtJ,OAAO6qB,OAAOhqB,GACnB,MAAM0mC,EAAcj+B,KAAKwlD,mBAAmBrlD,IAAI5I,GAC5C0mC,IACAA,IACAj+B,KAAKwlD,mBAAmBjkC,OAAOhqB,WAE5ByI,KAAKsV,aAAa/d,GACzByI,KAAKqoD,2BAA2B9wD,EAAKyI,KAAK2a,YAC9C,CAIA2kB,QAAAA,CAAS/nC,GACL,OAAOyI,KAAKtJ,OAAOqQ,IAAIxP,EAC3B,CACAgoC,QAAAA,CAAShoC,EAAKqiC,GACV,GAAI55B,KAAKjI,MAAMrB,QAAUsJ,KAAKjI,MAAMrB,OAAOa,GACvC,OAAOyI,KAAKjI,MAAMrB,OAAOa,GAE7B,IAAIC,EAAQwI,KAAKtJ,OAAOyJ,IAAI5I,GAK5B,YAJc7B,IAAV8B,QAAwC9B,IAAjBkkC,IACvBpiC,EAAQwnC,GAAYpF,EAAc,CAAEhB,MAAO54B,OAC3CA,KAAKw/B,SAASjoC,EAAKC,IAEhBA,CACX,CAMA8wD,SAAAA,CAAU/wD,GACN,IAAIsgB,EACJ,YAAkCniB,IAA3BsK,KAAKsV,aAAa/d,IAAuByI,KAAKhH,QAES,QAAvD6e,EAAK7X,KAAKuoD,uBAAuBvoD,KAAKjI,MAAOR,UAAyB,IAAPsgB,EAAgBA,EAAK7X,KAAKwoD,sBAAsBxoD,KAAKhH,QAASzB,EAAKyI,KAAKuV,SADxIvV,KAAKsV,aAAa/d,EAE5B,CAKAkxD,aAAAA,CAAclxD,EAAKC,GACfwI,KAAK8lD,WAAWvuD,GAAOC,CAC3B,CAKAmsC,aAAAA,CAAcpsC,GACV,IAAIsgB,EACJ,MAAM,QAAE3N,GAAYlK,KAAKjI,MACnB2wD,EAAsC,kBAAZx+C,GAA2C,kBAAZA,EACD,QAAvD2N,EAAKuD,GAAwBpb,KAAKjI,MAAOmS,UAA6B,IAAP2N,OAAgB,EAASA,EAAGtgB,QAC5F7B,EAIN,GAAIwU,QAAgCxU,IAArBgzD,EACX,OAAOA,EAMX,MAAMlyC,EAASxW,KAAKuoD,uBAAuBvoD,KAAKjI,MAAOR,GACvD,YAAe7B,IAAX8gB,GAAyBlH,EAAckH,QAMR9gB,IAA5BsK,KAAK+lD,cAAcxuD,SACD7B,IAArBgzD,OACEhzD,EACAsK,KAAK8lD,WAAWvuD,GARXif,CASf,CACAwnB,EAAAA,CAAGxgB,EAAWmD,GAIV,OAHK3gB,KAAKo9B,OAAO5f,KACbxd,KAAKo9B,OAAO5f,GAAa,IAAIif,IAE1Bz8B,KAAKo9B,OAAO5f,GAAWpd,IAAIugB,EACtC,CACAgc,MAAAA,CAAOnf,GACH,GAAIxd,KAAKo9B,OAAO5f,GAAY,SAAAiB,EAAA3iB,UAAAhE,OADXlC,EAAI,IAAA0C,MAAAmmB,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ/oB,EAAI+oB,EAAA,GAAA7iB,UAAA6iB,GAEjB3e,KAAKo9B,OAAO5f,GAAWmf,UAAU/mC,EACrC,CACJ,EGrfJ,MAAM+yD,WAAyBpD,GAC3ByB,wBAAAA,CAAyB7xD,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEyzD,wBAAwBxzD,GAAS,GAAK,CACnD,CACAmzD,sBAAAA,CAAuBxwD,EAAOR,GAC1B,OAAOQ,EAAMoH,MAAQpH,EAAMoH,MAAM5H,QAAO7B,CAC5C,CACA2yD,0BAAAA,CAA2B9wD,EAAGD,GAAmB,IAAjB,KAAEme,EAAI,MAAEtW,GAAO7H,SACpCme,EAAKle,UACL4H,EAAM5H,EACjB,CACAmwD,gCAAAA,CAAgC9oD,EAA2C4gB,GAAW,IAArD,WAAEzC,EAAU,cAAED,KAAkBtG,GAAQ5X,EACrE,MAAMmZ,EnDqFd,SAAmBvB,EAAQuG,EAAYtQ,GACnC,MAAMsL,EAAS,CAAC,EAChB,IAAK,MAAMxgB,KAAOif,EAAQ,CACtB,MAAMqyC,EAAmBlpB,GAAwBpoC,EAAKwlB,GACtD,QAAyBrnB,IAArBmzD,EACA9wC,EAAOxgB,GAAOsxD,MAEb,CACD,MAAMrxD,EAAQiV,EAAc8yB,SAAShoC,GACjCC,IACAugB,EAAOxgB,GAAOC,EAAM2I,MAE5B,CACJ,CACA,OAAO4X,CACX,CmDpGuB+wC,CAAUtyC,EAAQuG,GAAc,CAAC,EAAG/c,MACnD,GAAIwf,EAAW,EnD+BvB,SAAiC/S,EAAe+J,EAAQuB,GACpD,IAAIF,EAAIsU,EACR,MAAM48B,EAAetyD,OAAO6C,KAAKkd,GAAQ3d,QAAQtB,IAASkV,EAAc6yB,SAAS/nC,KAC3EyxD,EAAeD,EAAajxD,OD5CfyR,MC6CnB,GAAKy/C,EAEL,IAAK,IAAInxD,EAAI,EAAGA,EAAImxD,EAAcnxD,IAAK,CACnC,MAAMN,EAAMwxD,EAAalxD,GACnBoxD,EAAczyC,EAAOjf,GAC3B,IAAIC,EAAQ,KAKRc,MAAMC,QAAQ0wD,KACdzxD,EAAQyxD,EAAY,IAOV,OAAVzxD,IACAA,EAAoG,QAA3F20B,EAA4B,QAAtBtU,EAAKE,EAAOxgB,UAAyB,IAAPsgB,EAAgBA,EAAKpL,EAAc67C,UAAU/wD,UAAyB,IAAP40B,EAAgBA,EAAK3V,EAAOjf,SAM9H7B,IAAV8B,GAAiC,OAAVA,IAEN,kBAAVA,IACN6kC,GAAkB7kC,IAAUmjC,GAAkBnjC,IAE/CA,EAAQoZ,WAAWpZ,ID3ER+R,EC6ES/R,GD7EH4nC,GAAW3U,KAAKwU,GAAc11B,KC6EjB2iB,GAAQld,KAAKi6C,KAC3CzxD,EAAQ60B,GAAkB90B,EAAK0xD,KAEnCx8C,EAAc+yB,SAASjoC,EAAKynC,GAAYxnC,EAAO,CAAEohC,MAAOnsB,UACpC/W,IAAhBqiB,EAAOxgB,KACPwgB,EAAOxgB,GAAOC,GAEJ,OAAVA,GACAiV,EAAcg8C,cAAclxD,EAAKC,GACzC,CACJ,CmD5EY0xD,CAAwBlpD,KAAMwW,EAAQuB,GACtC,MAAMuU,EAASw4B,GAAgB9kD,KAAMwW,EAAQuB,EAAQ+E,GACrDA,EAAgBwP,EAAOxP,cACvBtG,EAAS8V,EAAO9V,MACpB,CACA,MAAO,CACHuG,aACAD,mBACGtG,EAEX,ECpBJ,MAAM2yC,WAA0BR,GAC5BjpD,WAAAA,GACIoB,SAAShF,WACTkE,KAAK3J,KAAO,MAChB,CACAmyD,qBAAAA,CAAsBnoD,EAAU9I,GAC5B,GAAI4X,EAAepI,IAAIxP,GAAM,CACzB,MAAM6xD,EAAc3uB,GAAoBljC,GACxC,OAAO6xD,GAAcA,EAAY5tD,SAAe,CACpD,CACK,CACD,MAAM6tD,GAdQjvC,EAcyB/Z,EAbxCf,OAAOohD,iBAAiBtmC,IAcjB5iB,GAASwY,EAAkBzY,GAC3B8xD,EAAcvH,iBAAiBvqD,GAC/B8xD,EAAc9xD,KAAS,EAC7B,MAAwB,kBAAVC,EAAqBA,EAAM4Y,OAAS5Y,CACtD,CAnBR,IAA0B4iB,CAoBtB,CACAmtC,0BAAAA,CAA2BlnD,EAAQ/I,GAA0B,IAAxB,mBAAE+Q,GAAoB/Q,EACvD,OAAOqyC,GAAmBtpC,EAAUgI,EACxC,CACAi/C,KAAAA,CAAM3sC,EAAarF,EAAcC,EAASxd,GACtCsd,GAAgBsF,EAAarF,EAAcC,EAASxd,EAAMyd,kBAC9D,CACAqF,2BAAAA,CAA4B9iB,EAAO+iB,GAC/B,OAAOD,GAA4B9iB,EAAO+iB,EAC9C,CACAmtC,sBAAAA,GACQjoD,KAAKspD,oBACLtpD,KAAKspD,2BACEtpD,KAAKspD,mBAEhB,MAAM,SAAEpoD,GAAalB,KAAKjI,MACtBuX,EAAcpO,KACdlB,KAAKspD,kBAAoBpoD,EAAS88B,GAAG,UAAWplB,IACxC5Y,KAAKhH,UACLgH,KAAKhH,QAAQuwD,YAAc,GAAH7vD,OAAMkf,GAAQ,IAGtD,CACAitC,cAAAA,CAAexlD,EAAUsa,EAAaN,EAAWC,GAC7CH,GAAW9Z,EAAUsa,EAAaN,EAAWC,EACjD,EC5CJ,MAAMkvC,WAAyBb,GAC3BjpD,WAAAA,GACIoB,SAAShF,WACTkE,KAAK3J,KAAO,MACZ2J,KAAKqY,UAAW,CACpB,CACAkwC,sBAAAA,CAAuBxwD,EAAOR,GAC1B,OAAOQ,EAAMR,EACjB,CACAixD,qBAAAA,CAAsBnoD,EAAU9I,GAC5B,GAAI4X,EAAepI,IAAIxP,GAAM,CACzB,MAAM6xD,EAAc3uB,GAAoBljC,GACxC,OAAO6xD,GAAcA,EAAY5tD,SAAe,CACpD,CAEA,OADAjE,EAAOkjB,GAAoB1T,IAAIxP,GAA0BA,EAAnBqR,EAAYrR,GAC3C8I,EAASuC,aAAarL,EACjC,CACAgwD,0BAAAA,GACI,OAAOrf,IACX,CACArtB,2BAAAA,CAA4B9iB,EAAO+iB,GAC/B,OAAOD,GAA4B9iB,EAAO+iB,EAC9C,CACAwsC,KAAAA,CAAM3sC,EAAarF,EAAcC,EAASxd,GACtCqgB,GAAcuC,EAAarF,EAAcC,EAASvV,KAAKqY,SAAUtgB,EAAMyd,kBAC3E,CACAqwC,cAAAA,CAAexlD,EAAUsa,EAAaN,EAAWC,GAC7CI,GAAUra,EAAUsa,EAAaN,EAAWC,EAChD,CACArM,KAAAA,CAAM5N,GACFL,KAAKqY,SAAWA,GAAShY,EAASzG,SAClCkH,MAAMmN,MAAM5N,EAChB,ECvCJ,MAAMopD,GAAyBA,CAAC5oD,EAAW0U,IAChCxG,EAAelO,GAChB,IAAI2oD,GAAiBj0C,EAAS,CAAEU,4BAA4B,IAC5D,IAAIkzC,GAAkB5zC,EAAS,CAAEU,4BAA4B,ICEjEvK,GAAoB,IACnB00B,MACAze,MACA/W,MCTQ,CACXM,OAAQ,CACJq2C,eAAgBf,GAChBr0C,cAAaA,MDefu9C,GAAuBn7C,GAAkB,CAAC1N,EAAWmb,IEhB3D,SAA+Bnb,EAASvJ,EAAkCoU,EAAmBC,GAAqB,IAAxE,mBAAEiO,GAAqB,GAAOtiB,EAIpE,MAAO,IAHYyX,EAAelO,GAC5Boc,GACAK,GAGF5R,oBACAE,UAAW+N,GAAgBC,GAC3BjO,sBACA9K,YAER,CFKsE8oD,CAAsB9oD,EAAWmb,EAAQtQ,GAAmB+9C,K","sources":["../node_modules/invariant/browser.js","../node_modules/react-helmet-async/lib/index.esm.js","../node_modules/react-helmet-async/node_modules/react-fast-compare/index.js","../node_modules/shallowequal/index.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","// src/index.tsx\nimport React3, { Component as Component3 } from \"react\";\nimport fastCompare from \"react-fast-compare\";\nimport invariant from \"invariant\";\n\n// src/Provider.tsx\nimport React2, { Component } from \"react\";\n\n// src/server.ts\nimport React from \"react\";\n\n// src/constants.ts\nvar TAG_NAMES = /* @__PURE__ */ ((TAG_NAMES2) => {\n  TAG_NAMES2[\"BASE\"] = \"base\";\n  TAG_NAMES2[\"BODY\"] = \"body\";\n  TAG_NAMES2[\"HEAD\"] = \"head\";\n  TAG_NAMES2[\"HTML\"] = \"html\";\n  TAG_NAMES2[\"LINK\"] = \"link\";\n  TAG_NAMES2[\"META\"] = \"meta\";\n  TAG_NAMES2[\"NOSCRIPT\"] = \"noscript\";\n  TAG_NAMES2[\"SCRIPT\"] = \"script\";\n  TAG_NAMES2[\"STYLE\"] = \"style\";\n  TAG_NAMES2[\"TITLE\"] = \"title\";\n  TAG_NAMES2[\"FRAGMENT\"] = \"Symbol(react.fragment)\";\n  return TAG_NAMES2;\n})(TAG_NAMES || {});\nvar SEO_PRIORITY_TAGS = {\n  link: { rel: [\"amphtml\", \"canonical\", \"alternate\"] },\n  script: { type: [\"application/ld+json\"] },\n  meta: {\n    charset: \"\",\n    name: [\"generator\", \"robots\", \"description\"],\n    property: [\n      \"og:type\",\n      \"og:title\",\n      \"og:url\",\n      \"og:image\",\n      \"og:image:alt\",\n      \"og:description\",\n      \"twitter:url\",\n      \"twitter:title\",\n      \"twitter:description\",\n      \"twitter:image\",\n      \"twitter:image:alt\",\n      \"twitter:card\",\n      \"twitter:site\"\n    ]\n  }\n};\nvar VALID_TAG_NAMES = Object.values(TAG_NAMES);\nvar REACT_TAG_MAP = {\n  accesskey: \"accessKey\",\n  charset: \"charSet\",\n  class: \"className\",\n  contenteditable: \"contentEditable\",\n  contextmenu: \"contextMenu\",\n  \"http-equiv\": \"httpEquiv\",\n  itemprop: \"itemProp\",\n  tabindex: \"tabIndex\"\n};\nvar HTML_TAG_MAP = Object.entries(REACT_TAG_MAP).reduce(\n  (carry, [key, value]) => {\n    carry[value] = key;\n    return carry;\n  },\n  {}\n);\nvar HELMET_ATTRIBUTE = \"data-rh\";\n\n// src/utils.ts\nvar HELMET_PROPS = {\n  DEFAULT_TITLE: \"defaultTitle\",\n  DEFER: \"defer\",\n  ENCODE_SPECIAL_CHARACTERS: \"encodeSpecialCharacters\",\n  ON_CHANGE_CLIENT_STATE: \"onChangeClientState\",\n  TITLE_TEMPLATE: \"titleTemplate\",\n  PRIORITIZE_SEO_TAGS: \"prioritizeSeoTags\"\n};\nvar getInnermostProperty = (propsList, property) => {\n  for (let i = propsList.length - 1; i >= 0; i -= 1) {\n    const props = propsList[i];\n    if (Object.prototype.hasOwnProperty.call(props, property)) {\n      return props[property];\n    }\n  }\n  return null;\n};\nvar getTitleFromPropsList = (propsList) => {\n  let innermostTitle = getInnermostProperty(propsList, \"title\" /* TITLE */);\n  const innermostTemplate = getInnermostProperty(propsList, HELMET_PROPS.TITLE_TEMPLATE);\n  if (Array.isArray(innermostTitle)) {\n    innermostTitle = innermostTitle.join(\"\");\n  }\n  if (innermostTemplate && innermostTitle) {\n    return innermostTemplate.replace(/%s/g, () => innermostTitle);\n  }\n  const innermostDefaultTitle = getInnermostProperty(propsList, HELMET_PROPS.DEFAULT_TITLE);\n  return innermostTitle || innermostDefaultTitle || void 0;\n};\nvar getOnChangeClientState = (propsList) => getInnermostProperty(propsList, HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || (() => {\n});\nvar getAttributesFromPropsList = (tagType, propsList) => propsList.filter((props) => typeof props[tagType] !== \"undefined\").map((props) => props[tagType]).reduce((tagAttrs, current) => ({ ...tagAttrs, ...current }), {});\nvar getBaseTagFromPropsList = (primaryAttributes, propsList) => propsList.filter((props) => typeof props[\"base\" /* BASE */] !== \"undefined\").map((props) => props[\"base\" /* BASE */]).reverse().reduce((innermostBaseTag, tag) => {\n  if (!innermostBaseTag.length) {\n    const keys = Object.keys(tag);\n    for (let i = 0; i < keys.length; i += 1) {\n      const attributeKey = keys[i];\n      const lowerCaseAttributeKey = attributeKey.toLowerCase();\n      if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {\n        return innermostBaseTag.concat(tag);\n      }\n    }\n  }\n  return innermostBaseTag;\n}, []);\nvar warn = (msg) => console && typeof console.warn === \"function\" && console.warn(msg);\nvar getTagsFromPropsList = (tagName, primaryAttributes, propsList) => {\n  const approvedSeenTags = {};\n  return propsList.filter((props) => {\n    if (Array.isArray(props[tagName])) {\n      return true;\n    }\n    if (typeof props[tagName] !== \"undefined\") {\n      warn(\n        `Helmet: ${tagName} should be of type \"Array\". Instead found type \"${typeof props[tagName]}\"`\n      );\n    }\n    return false;\n  }).map((props) => props[tagName]).reverse().reduce((approvedTags, instanceTags) => {\n    const instanceSeenTags = {};\n    instanceTags.filter((tag) => {\n      let primaryAttributeKey;\n      const keys2 = Object.keys(tag);\n      for (let i = 0; i < keys2.length; i += 1) {\n        const attributeKey = keys2[i];\n        const lowerCaseAttributeKey = attributeKey.toLowerCase();\n        if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === \"rel\" /* REL */ && tag[primaryAttributeKey].toLowerCase() === \"canonical\") && !(lowerCaseAttributeKey === \"rel\" /* REL */ && tag[lowerCaseAttributeKey].toLowerCase() === \"stylesheet\")) {\n          primaryAttributeKey = lowerCaseAttributeKey;\n        }\n        if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === \"innerHTML\" /* INNER_HTML */ || attributeKey === \"cssText\" /* CSS_TEXT */ || attributeKey === \"itemprop\" /* ITEM_PROP */)) {\n          primaryAttributeKey = attributeKey;\n        }\n      }\n      if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n        return false;\n      }\n      const value = tag[primaryAttributeKey].toLowerCase();\n      if (!approvedSeenTags[primaryAttributeKey]) {\n        approvedSeenTags[primaryAttributeKey] = {};\n      }\n      if (!instanceSeenTags[primaryAttributeKey]) {\n        instanceSeenTags[primaryAttributeKey] = {};\n      }\n      if (!approvedSeenTags[primaryAttributeKey][value]) {\n        instanceSeenTags[primaryAttributeKey][value] = true;\n        return true;\n      }\n      return false;\n    }).reverse().forEach((tag) => approvedTags.push(tag));\n    const keys = Object.keys(instanceSeenTags);\n    for (let i = 0; i < keys.length; i += 1) {\n      const attributeKey = keys[i];\n      const tagUnion = {\n        ...approvedSeenTags[attributeKey],\n        ...instanceSeenTags[attributeKey]\n      };\n      approvedSeenTags[attributeKey] = tagUnion;\n    }\n    return approvedTags;\n  }, []).reverse();\n};\nvar getAnyTrueFromPropsList = (propsList, checkedTag) => {\n  if (Array.isArray(propsList) && propsList.length) {\n    for (let index = 0; index < propsList.length; index += 1) {\n      const prop = propsList[index];\n      if (prop[checkedTag]) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\nvar reducePropsToState = (propsList) => ({\n  baseTag: getBaseTagFromPropsList([\"href\" /* HREF */], propsList),\n  bodyAttributes: getAttributesFromPropsList(\"bodyAttributes\" /* BODY */, propsList),\n  defer: getInnermostProperty(propsList, HELMET_PROPS.DEFER),\n  encode: getInnermostProperty(propsList, HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),\n  htmlAttributes: getAttributesFromPropsList(\"htmlAttributes\" /* HTML */, propsList),\n  linkTags: getTagsFromPropsList(\n    \"link\" /* LINK */,\n    [\"rel\" /* REL */, \"href\" /* HREF */],\n    propsList\n  ),\n  metaTags: getTagsFromPropsList(\n    \"meta\" /* META */,\n    [\n      \"name\" /* NAME */,\n      \"charset\" /* CHARSET */,\n      \"http-equiv\" /* HTTPEQUIV */,\n      \"property\" /* PROPERTY */,\n      \"itemprop\" /* ITEM_PROP */\n    ],\n    propsList\n  ),\n  noscriptTags: getTagsFromPropsList(\"noscript\" /* NOSCRIPT */, [\"innerHTML\" /* INNER_HTML */], propsList),\n  onChangeClientState: getOnChangeClientState(propsList),\n  scriptTags: getTagsFromPropsList(\n    \"script\" /* SCRIPT */,\n    [\"src\" /* SRC */, \"innerHTML\" /* INNER_HTML */],\n    propsList\n  ),\n  styleTags: getTagsFromPropsList(\"style\" /* STYLE */, [\"cssText\" /* CSS_TEXT */], propsList),\n  title: getTitleFromPropsList(propsList),\n  titleAttributes: getAttributesFromPropsList(\"titleAttributes\" /* TITLE */, propsList),\n  prioritizeSeoTags: getAnyTrueFromPropsList(propsList, HELMET_PROPS.PRIORITIZE_SEO_TAGS)\n});\nvar flattenArray = (possibleArray) => Array.isArray(possibleArray) ? possibleArray.join(\"\") : possibleArray;\nvar checkIfPropsMatch = (props, toMatch) => {\n  const keys = Object.keys(props);\n  for (let i = 0; i < keys.length; i += 1) {\n    if (toMatch[keys[i]] && toMatch[keys[i]].includes(props[keys[i]])) {\n      return true;\n    }\n  }\n  return false;\n};\nvar prioritizer = (elementsList, propsToMatch) => {\n  if (Array.isArray(elementsList)) {\n    return elementsList.reduce(\n      (acc, elementAttrs) => {\n        if (checkIfPropsMatch(elementAttrs, propsToMatch)) {\n          acc.priority.push(elementAttrs);\n        } else {\n          acc.default.push(elementAttrs);\n        }\n        return acc;\n      },\n      { priority: [], default: [] }\n    );\n  }\n  return { default: elementsList, priority: [] };\n};\nvar without = (obj, key) => {\n  return {\n    ...obj,\n    [key]: void 0\n  };\n};\n\n// src/server.ts\nvar SELF_CLOSING_TAGS = [\"noscript\" /* NOSCRIPT */, \"script\" /* SCRIPT */, \"style\" /* STYLE */];\nvar encodeSpecialCharacters = (str, encode = true) => {\n  if (encode === false) {\n    return String(str);\n  }\n  return String(str).replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\");\n};\nvar generateElementAttributesAsString = (attributes) => Object.keys(attributes).reduce((str, key) => {\n  const attr = typeof attributes[key] !== \"undefined\" ? `${key}=\"${attributes[key]}\"` : `${key}`;\n  return str ? `${str} ${attr}` : attr;\n}, \"\");\nvar generateTitleAsString = (type, title, attributes, encode) => {\n  const attributeString = generateElementAttributesAsString(attributes);\n  const flattenedTitle = flattenArray(title);\n  return attributeString ? `<${type} ${HELMET_ATTRIBUTE}=\"true\" ${attributeString}>${encodeSpecialCharacters(\n    flattenedTitle,\n    encode\n  )}</${type}>` : `<${type} ${HELMET_ATTRIBUTE}=\"true\">${encodeSpecialCharacters(\n    flattenedTitle,\n    encode\n  )}</${type}>`;\n};\nvar generateTagsAsString = (type, tags, encode = true) => tags.reduce((str, t) => {\n  const tag = t;\n  const attributeHtml = Object.keys(tag).filter(\n    (attribute) => !(attribute === \"innerHTML\" /* INNER_HTML */ || attribute === \"cssText\" /* CSS_TEXT */)\n  ).reduce((string, attribute) => {\n    const attr = typeof tag[attribute] === \"undefined\" ? attribute : `${attribute}=\"${encodeSpecialCharacters(tag[attribute], encode)}\"`;\n    return string ? `${string} ${attr}` : attr;\n  }, \"\");\n  const tagContent = tag.innerHTML || tag.cssText || \"\";\n  const isSelfClosing = SELF_CLOSING_TAGS.indexOf(type) === -1;\n  return `${str}<${type} ${HELMET_ATTRIBUTE}=\"true\" ${attributeHtml}${isSelfClosing ? `/>` : `>${tagContent}</${type}>`}`;\n}, \"\");\nvar convertElementAttributesToReactProps = (attributes, initProps = {}) => Object.keys(attributes).reduce((obj, key) => {\n  const mapped = REACT_TAG_MAP[key];\n  obj[mapped || key] = attributes[key];\n  return obj;\n}, initProps);\nvar generateTitleAsReactComponent = (_type, title, attributes) => {\n  const initProps = {\n    key: title,\n    [HELMET_ATTRIBUTE]: true\n  };\n  const props = convertElementAttributesToReactProps(attributes, initProps);\n  return [React.createElement(\"title\" /* TITLE */, props, title)];\n};\nvar generateTagsAsReactComponent = (type, tags) => tags.map((tag, i) => {\n  const mappedTag = {\n    key: i,\n    [HELMET_ATTRIBUTE]: true\n  };\n  Object.keys(tag).forEach((attribute) => {\n    const mapped = REACT_TAG_MAP[attribute];\n    const mappedAttribute = mapped || attribute;\n    if (mappedAttribute === \"innerHTML\" /* INNER_HTML */ || mappedAttribute === \"cssText\" /* CSS_TEXT */) {\n      const content = tag.innerHTML || tag.cssText;\n      mappedTag.dangerouslySetInnerHTML = { __html: content };\n    } else {\n      mappedTag[mappedAttribute] = tag[attribute];\n    }\n  });\n  return React.createElement(type, mappedTag);\n});\nvar getMethodsForTag = (type, tags, encode = true) => {\n  switch (type) {\n    case \"title\" /* TITLE */:\n      return {\n        toComponent: () => generateTitleAsReactComponent(type, tags.title, tags.titleAttributes),\n        toString: () => generateTitleAsString(type, tags.title, tags.titleAttributes, encode)\n      };\n    case \"bodyAttributes\" /* BODY */:\n    case \"htmlAttributes\" /* HTML */:\n      return {\n        toComponent: () => convertElementAttributesToReactProps(tags),\n        toString: () => generateElementAttributesAsString(tags)\n      };\n    default:\n      return {\n        toComponent: () => generateTagsAsReactComponent(type, tags),\n        toString: () => generateTagsAsString(type, tags, encode)\n      };\n  }\n};\nvar getPriorityMethods = ({ metaTags, linkTags, scriptTags, encode }) => {\n  const meta = prioritizer(metaTags, SEO_PRIORITY_TAGS.meta);\n  const link = prioritizer(linkTags, SEO_PRIORITY_TAGS.link);\n  const script = prioritizer(scriptTags, SEO_PRIORITY_TAGS.script);\n  const priorityMethods = {\n    toComponent: () => [\n      ...generateTagsAsReactComponent(\"meta\" /* META */, meta.priority),\n      ...generateTagsAsReactComponent(\"link\" /* LINK */, link.priority),\n      ...generateTagsAsReactComponent(\"script\" /* SCRIPT */, script.priority)\n    ],\n    toString: () => (\n      // generate all the tags as strings and concatenate them\n      `${getMethodsForTag(\"meta\" /* META */, meta.priority, encode)} ${getMethodsForTag(\n        \"link\" /* LINK */,\n        link.priority,\n        encode\n      )} ${getMethodsForTag(\"script\" /* SCRIPT */, script.priority, encode)}`\n    )\n  };\n  return {\n    priorityMethods,\n    metaTags: meta.default,\n    linkTags: link.default,\n    scriptTags: script.default\n  };\n};\nvar mapStateOnServer = (props) => {\n  const {\n    baseTag,\n    bodyAttributes,\n    encode = true,\n    htmlAttributes,\n    noscriptTags,\n    styleTags,\n    title = \"\",\n    titleAttributes,\n    prioritizeSeoTags\n  } = props;\n  let { linkTags, metaTags, scriptTags } = props;\n  let priorityMethods = {\n    toComponent: () => {\n    },\n    toString: () => \"\"\n  };\n  if (prioritizeSeoTags) {\n    ({ priorityMethods, linkTags, metaTags, scriptTags } = getPriorityMethods(props));\n  }\n  return {\n    priority: priorityMethods,\n    base: getMethodsForTag(\"base\" /* BASE */, baseTag, encode),\n    bodyAttributes: getMethodsForTag(\"bodyAttributes\" /* BODY */, bodyAttributes, encode),\n    htmlAttributes: getMethodsForTag(\"htmlAttributes\" /* HTML */, htmlAttributes, encode),\n    link: getMethodsForTag(\"link\" /* LINK */, linkTags, encode),\n    meta: getMethodsForTag(\"meta\" /* META */, metaTags, encode),\n    noscript: getMethodsForTag(\"noscript\" /* NOSCRIPT */, noscriptTags, encode),\n    script: getMethodsForTag(\"script\" /* SCRIPT */, scriptTags, encode),\n    style: getMethodsForTag(\"style\" /* STYLE */, styleTags, encode),\n    title: getMethodsForTag(\"title\" /* TITLE */, { title, titleAttributes }, encode)\n  };\n};\nvar server_default = mapStateOnServer;\n\n// src/HelmetData.ts\nvar instances = [];\nvar isDocument = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\nvar HelmetData = class {\n  instances = [];\n  canUseDOM = isDocument;\n  context;\n  value = {\n    setHelmet: (serverState) => {\n      this.context.helmet = serverState;\n    },\n    helmetInstances: {\n      get: () => this.canUseDOM ? instances : this.instances,\n      add: (instance) => {\n        (this.canUseDOM ? instances : this.instances).push(instance);\n      },\n      remove: (instance) => {\n        const index = (this.canUseDOM ? instances : this.instances).indexOf(instance);\n        (this.canUseDOM ? instances : this.instances).splice(index, 1);\n      }\n    }\n  };\n  constructor(context, canUseDOM) {\n    this.context = context;\n    this.canUseDOM = canUseDOM || false;\n    if (!canUseDOM) {\n      context.helmet = server_default({\n        baseTag: [],\n        bodyAttributes: {},\n        encodeSpecialCharacters: true,\n        htmlAttributes: {},\n        linkTags: [],\n        metaTags: [],\n        noscriptTags: [],\n        scriptTags: [],\n        styleTags: [],\n        title: \"\",\n        titleAttributes: {}\n      });\n    }\n  }\n};\n\n// src/Provider.tsx\nvar defaultValue = {};\nvar Context = React2.createContext(defaultValue);\nvar HelmetProvider = class _HelmetProvider extends Component {\n  static canUseDOM = isDocument;\n  helmetData;\n  constructor(props) {\n    super(props);\n    this.helmetData = new HelmetData(this.props.context || {}, _HelmetProvider.canUseDOM);\n  }\n  render() {\n    return /* @__PURE__ */ React2.createElement(Context.Provider, { value: this.helmetData.value }, this.props.children);\n  }\n};\n\n// src/Dispatcher.tsx\nimport { Component as Component2 } from \"react\";\nimport shallowEqual from \"shallowequal\";\n\n// src/client.ts\nvar updateTags = (type, tags) => {\n  const headElement = document.head || document.querySelector(\"head\" /* HEAD */);\n  const tagNodes = headElement.querySelectorAll(`${type}[${HELMET_ATTRIBUTE}]`);\n  const oldTags = [].slice.call(tagNodes);\n  const newTags = [];\n  let indexToDelete;\n  if (tags && tags.length) {\n    tags.forEach((tag) => {\n      const newElement = document.createElement(type);\n      for (const attribute in tag) {\n        if (Object.prototype.hasOwnProperty.call(tag, attribute)) {\n          if (attribute === \"innerHTML\" /* INNER_HTML */) {\n            newElement.innerHTML = tag.innerHTML;\n          } else if (attribute === \"cssText\" /* CSS_TEXT */) {\n            if (newElement.styleSheet) {\n              newElement.styleSheet.cssText = tag.cssText;\n            } else {\n              newElement.appendChild(document.createTextNode(tag.cssText));\n            }\n          } else {\n            const attr = attribute;\n            const value = typeof tag[attr] === \"undefined\" ? \"\" : tag[attr];\n            newElement.setAttribute(attribute, value);\n          }\n        }\n      }\n      newElement.setAttribute(HELMET_ATTRIBUTE, \"true\");\n      if (oldTags.some((existingTag, index) => {\n        indexToDelete = index;\n        return newElement.isEqualNode(existingTag);\n      })) {\n        oldTags.splice(indexToDelete, 1);\n      } else {\n        newTags.push(newElement);\n      }\n    });\n  }\n  oldTags.forEach((tag) => tag.parentNode?.removeChild(tag));\n  newTags.forEach((tag) => headElement.appendChild(tag));\n  return {\n    oldTags,\n    newTags\n  };\n};\nvar updateAttributes = (tagName, attributes) => {\n  const elementTag = document.getElementsByTagName(tagName)[0];\n  if (!elementTag) {\n    return;\n  }\n  const helmetAttributeString = elementTag.getAttribute(HELMET_ATTRIBUTE);\n  const helmetAttributes = helmetAttributeString ? helmetAttributeString.split(\",\") : [];\n  const attributesToRemove = [...helmetAttributes];\n  const attributeKeys = Object.keys(attributes);\n  for (const attribute of attributeKeys) {\n    const value = attributes[attribute] || \"\";\n    if (elementTag.getAttribute(attribute) !== value) {\n      elementTag.setAttribute(attribute, value);\n    }\n    if (helmetAttributes.indexOf(attribute) === -1) {\n      helmetAttributes.push(attribute);\n    }\n    const indexToSave = attributesToRemove.indexOf(attribute);\n    if (indexToSave !== -1) {\n      attributesToRemove.splice(indexToSave, 1);\n    }\n  }\n  for (let i = attributesToRemove.length - 1; i >= 0; i -= 1) {\n    elementTag.removeAttribute(attributesToRemove[i]);\n  }\n  if (helmetAttributes.length === attributesToRemove.length) {\n    elementTag.removeAttribute(HELMET_ATTRIBUTE);\n  } else if (elementTag.getAttribute(HELMET_ATTRIBUTE) !== attributeKeys.join(\",\")) {\n    elementTag.setAttribute(HELMET_ATTRIBUTE, attributeKeys.join(\",\"));\n  }\n};\nvar updateTitle = (title, attributes) => {\n  if (typeof title !== \"undefined\" && document.title !== title) {\n    document.title = flattenArray(title);\n  }\n  updateAttributes(\"title\" /* TITLE */, attributes);\n};\nvar commitTagChanges = (newState, cb) => {\n  const {\n    baseTag,\n    bodyAttributes,\n    htmlAttributes,\n    linkTags,\n    metaTags,\n    noscriptTags,\n    onChangeClientState,\n    scriptTags,\n    styleTags,\n    title,\n    titleAttributes\n  } = newState;\n  updateAttributes(\"body\" /* BODY */, bodyAttributes);\n  updateAttributes(\"html\" /* HTML */, htmlAttributes);\n  updateTitle(title, titleAttributes);\n  const tagUpdates = {\n    baseTag: updateTags(\"base\" /* BASE */, baseTag),\n    linkTags: updateTags(\"link\" /* LINK */, linkTags),\n    metaTags: updateTags(\"meta\" /* META */, metaTags),\n    noscriptTags: updateTags(\"noscript\" /* NOSCRIPT */, noscriptTags),\n    scriptTags: updateTags(\"script\" /* SCRIPT */, scriptTags),\n    styleTags: updateTags(\"style\" /* STYLE */, styleTags)\n  };\n  const addedTags = {};\n  const removedTags = {};\n  Object.keys(tagUpdates).forEach((tagType) => {\n    const { newTags, oldTags } = tagUpdates[tagType];\n    if (newTags.length) {\n      addedTags[tagType] = newTags;\n    }\n    if (oldTags.length) {\n      removedTags[tagType] = tagUpdates[tagType].oldTags;\n    }\n  });\n  if (cb) {\n    cb();\n  }\n  onChangeClientState(newState, addedTags, removedTags);\n};\nvar _helmetCallback = null;\nvar handleStateChangeOnClient = (newState) => {\n  if (_helmetCallback) {\n    cancelAnimationFrame(_helmetCallback);\n  }\n  if (newState.defer) {\n    _helmetCallback = requestAnimationFrame(() => {\n      commitTagChanges(newState, () => {\n        _helmetCallback = null;\n      });\n    });\n  } else {\n    commitTagChanges(newState);\n    _helmetCallback = null;\n  }\n};\nvar client_default = handleStateChangeOnClient;\n\n// src/Dispatcher.tsx\nvar HelmetDispatcher = class extends Component2 {\n  rendered = false;\n  shouldComponentUpdate(nextProps) {\n    return !shallowEqual(nextProps, this.props);\n  }\n  componentDidUpdate() {\n    this.emitChange();\n  }\n  componentWillUnmount() {\n    const { helmetInstances } = this.props.context;\n    helmetInstances.remove(this);\n    this.emitChange();\n  }\n  emitChange() {\n    const { helmetInstances, setHelmet } = this.props.context;\n    let serverState = null;\n    const state = reducePropsToState(\n      helmetInstances.get().map((instance) => {\n        const props = { ...instance.props };\n        delete props.context;\n        return props;\n      })\n    );\n    if (HelmetProvider.canUseDOM) {\n      client_default(state);\n    } else if (server_default) {\n      serverState = server_default(state);\n    }\n    setHelmet(serverState);\n  }\n  // componentWillMount will be deprecated\n  // for SSR, initialize on first render\n  // constructor is also unsafe in StrictMode\n  init() {\n    if (this.rendered) {\n      return;\n    }\n    this.rendered = true;\n    const { helmetInstances } = this.props.context;\n    helmetInstances.add(this);\n    this.emitChange();\n  }\n  render() {\n    this.init();\n    return null;\n  }\n};\n\n// src/index.tsx\nvar Helmet = class extends Component3 {\n  static defaultProps = {\n    defer: true,\n    encodeSpecialCharacters: true,\n    prioritizeSeoTags: false\n  };\n  shouldComponentUpdate(nextProps) {\n    return !fastCompare(without(this.props, \"helmetData\"), without(nextProps, \"helmetData\"));\n  }\n  mapNestedChildrenToProps(child, nestedChildren) {\n    if (!nestedChildren) {\n      return null;\n    }\n    switch (child.type) {\n      case \"script\" /* SCRIPT */:\n      case \"noscript\" /* NOSCRIPT */:\n        return {\n          innerHTML: nestedChildren\n        };\n      case \"style\" /* STYLE */:\n        return {\n          cssText: nestedChildren\n        };\n      default:\n        throw new Error(\n          `<${child.type} /> elements are self-closing and can not contain children. Refer to our API for more information.`\n        );\n    }\n  }\n  flattenArrayTypeChildren(child, arrayTypeChildren, newChildProps, nestedChildren) {\n    return {\n      ...arrayTypeChildren,\n      [child.type]: [\n        ...arrayTypeChildren[child.type] || [],\n        {\n          ...newChildProps,\n          ...this.mapNestedChildrenToProps(child, nestedChildren)\n        }\n      ]\n    };\n  }\n  mapObjectTypeChildren(child, newProps, newChildProps, nestedChildren) {\n    switch (child.type) {\n      case \"title\" /* TITLE */:\n        return {\n          ...newProps,\n          [child.type]: nestedChildren,\n          titleAttributes: { ...newChildProps }\n        };\n      case \"body\" /* BODY */:\n        return {\n          ...newProps,\n          bodyAttributes: { ...newChildProps }\n        };\n      case \"html\" /* HTML */:\n        return {\n          ...newProps,\n          htmlAttributes: { ...newChildProps }\n        };\n      default:\n        return {\n          ...newProps,\n          [child.type]: { ...newChildProps }\n        };\n    }\n  }\n  mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n    let newFlattenedProps = { ...newProps };\n    Object.keys(arrayTypeChildren).forEach((arrayChildName) => {\n      newFlattenedProps = {\n        ...newFlattenedProps,\n        [arrayChildName]: arrayTypeChildren[arrayChildName]\n      };\n    });\n    return newFlattenedProps;\n  }\n  warnOnInvalidChildren(child, nestedChildren) {\n    invariant(\n      VALID_TAG_NAMES.some((name) => child.type === name),\n      typeof child.type === \"function\" ? `You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.` : `Only elements types ${VALID_TAG_NAMES.join(\n        \", \"\n      )} are allowed. Helmet does not support rendering <${child.type}> elements. Refer to our API for more information.`\n    );\n    invariant(\n      !nestedChildren || typeof nestedChildren === \"string\" || Array.isArray(nestedChildren) && !nestedChildren.some((nestedChild) => typeof nestedChild !== \"string\"),\n      `Helmet expects a string as a child of <${child.type}>. Did you forget to wrap your children in braces? ( <${child.type}>{\\`\\`}</${child.type}> ) Refer to our API for more information.`\n    );\n    return true;\n  }\n  mapChildrenToProps(children, newProps) {\n    let arrayTypeChildren = {};\n    React3.Children.forEach(children, (child) => {\n      if (!child || !child.props) {\n        return;\n      }\n      const { children: nestedChildren, ...childProps } = child.props;\n      const newChildProps = Object.keys(childProps).reduce((obj, key) => {\n        obj[HTML_TAG_MAP[key] || key] = childProps[key];\n        return obj;\n      }, {});\n      let { type } = child;\n      if (typeof type === \"symbol\") {\n        type = type.toString();\n      } else {\n        this.warnOnInvalidChildren(child, nestedChildren);\n      }\n      switch (type) {\n        case \"Symbol(react.fragment)\" /* FRAGMENT */:\n          newProps = this.mapChildrenToProps(nestedChildren, newProps);\n          break;\n        case \"link\" /* LINK */:\n        case \"meta\" /* META */:\n        case \"noscript\" /* NOSCRIPT */:\n        case \"script\" /* SCRIPT */:\n        case \"style\" /* STYLE */:\n          arrayTypeChildren = this.flattenArrayTypeChildren(\n            child,\n            arrayTypeChildren,\n            newChildProps,\n            nestedChildren\n          );\n          break;\n        default:\n          newProps = this.mapObjectTypeChildren(child, newProps, newChildProps, nestedChildren);\n          break;\n      }\n    });\n    return this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n  }\n  render() {\n    const { children, ...props } = this.props;\n    let newProps = { ...props };\n    let { helmetData } = props;\n    if (children) {\n      newProps = this.mapChildrenToProps(children, newProps);\n    }\n    if (helmetData && !(helmetData instanceof HelmetData)) {\n      const data = helmetData;\n      helmetData = new HelmetData(data.context, true);\n      delete newProps.helmetData;\n    }\n    return helmetData ? /* @__PURE__ */ React3.createElement(HelmetDispatcher, { ...newProps, context: helmetData.value }) : /* @__PURE__ */ React3.createElement(Context.Consumer, null, (context) => /* @__PURE__ */ React3.createElement(HelmetDispatcher, { ...newProps, context }));\n  }\n};\nexport {\n  Helmet,\n  HelmetData,\n  HelmetProvider\n};\n","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.3\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    // START: Modifications:\n    // Apply guards for `Object.create(null)` handling. See:\n    // - https://github.com/FormidableLabs/react-fast-compare/issues/64\n    // - https://github.com/epoberezkin/fast-deep-equal/issues/49\n    if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === 'function' && typeof b.valueOf === 'function') return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString && typeof a.toString === 'function' && typeof b.toString === 'function') return a.toString() === b.toString();\n    // END: Modifications\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)$/i;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\nconst complexRegex = /(var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\))|(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))|((-)?([\\d]*\\.?[\\d])+)/gi;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const matchedValues = originalValue.match(complexRegex) || [];\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    for (let i = 0; i < matchedValues.length; i++) {\n        const parsedValue = matchedValues[i];\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n    }\n    const tokenised = originalValue.replace(complexRegex, SPLIT_TOKEN);\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { mix } from '../../../utils/mix/index.mjs';\nimport { pipe } from '../../../utils/pipe.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.8\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.8\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.8 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, isMounted) {\n        const origin = getOrigin(target, transition || {}, this);\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["module","exports","condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","TAG_NAMES","TAG_NAMES2","SEO_PRIORITY_TAGS","rel","type","charset","property","VALID_TAG_NAMES","Object","values","REACT_TAG_MAP","accesskey","class","contenteditable","contextmenu","itemprop","tabindex","HTML_TAG_MAP","entries","reduce","carry","_ref","key","value","HELMET_ATTRIBUTE","HELMET_PROPS","getInnermostProperty","propsList","i","length","props","prototype","hasOwnProperty","call","getTitleFromPropsList","innermostTitle","innermostTemplate","Array","isArray","join","innermostDefaultTitle","getOnChangeClientState","getAttributesFromPropsList","tagType","filter","map","tagAttrs","current","getBaseTagFromPropsList","primaryAttributes","reverse","innermostBaseTag","tag","keys","lowerCaseAttributeKey","toLowerCase","indexOf","concat","getTagsFromPropsList","tagName","approvedSeenTags","msg","console","warn","approvedTags","instanceTags","instanceSeenTags","primaryAttributeKey","keys2","attributeKey","forEach","push","tagUnion","getAnyTrueFromPropsList","checkedTag","index","flattenArray","possibleArray","prioritizer","elementsList","propsToMatch","acc","elementAttrs","checkIfPropsMatch","toMatch","includes","priority","default","without","obj","SELF_CLOSING_TAGS","encodeSpecialCharacters","str","arguments","String","generateElementAttributesAsString","attributes","attr","convertElementAttributesToReactProps","initProps","generateTagsAsReactComponent","tags","mappedTag","attribute","mappedAttribute","content","innerHTML","cssText","dangerouslySetInnerHTML","__html","React","getMethodsForTag","encode","toComponent","generateTitleAsReactComponent","_type","title","titleAttributes","toString","generateTitleAsString","attributeString","flattenedTitle","t","attributeHtml","string","tagContent","isSelfClosing","generateTagsAsString","server_default","baseTag","bodyAttributes","htmlAttributes","noscriptTags","styleTags","prioritizeSeoTags","linkTags","metaTags","scriptTags","priorityMethods","_ref2","meta","link","script","getPriorityMethods","base","noscript","style","instances","isDocument","window","document","createElement","HelmetData","constructor","context","canUseDOM","_defineProperty","setHelmet","serverState","this","helmet","helmetInstances","get","add","instance","remove","splice","Context","React2","HelmetProvider","_HelmetProvider2","_HelmetProvider","Component","super","helmetData","render","Provider","children","updateTags","headElement","head","querySelector","tagNodes","querySelectorAll","oldTags","slice","newTags","indexToDelete","newElement","styleSheet","appendChild","createTextNode","setAttribute","some","existingTag","isEqualNode","_tag$parentNode","parentNode","removeChild","updateAttributes","elementTag","getElementsByTagName","helmetAttributeString","getAttribute","helmetAttributes","split","attributesToRemove","attributeKeys","indexToSave","removeAttribute","commitTagChanges","newState","cb","onChangeClientState","updateTitle","tagUpdates","addedTags","removedTags","_helmetCallback","client_default","cancelAnimationFrame","defer","requestAnimationFrame","HelmetDispatcher","Component2","shouldComponentUpdate","nextProps","shallowEqual","componentDidUpdate","emitChange","componentWillUnmount","state","init","rendered","Helmet","_Class3","Component3","fastCompare","mapNestedChildrenToProps","child","nestedChildren","flattenArrayTypeChildren","arrayTypeChildren","newChildProps","mapObjectTypeChildren","newProps","mapArrayTypeChildrenToProps","newFlattenedProps","arrayChildName","warnOnInvalidChildren","invariant","nestedChild","mapChildrenToProps","React3","childProps","Consumer","hasElementType","Element","hasMap","Map","hasSet","Set","hasArrayBuffer","ArrayBuffer","isView","equal","it","size","next","done","has","RegExp","source","flags","valueOf","$$typeof","message","match","objA","objB","compare","compareContext","ret","keysA","keysB","bHasOwnProperty","bind","idx","valueA","valueB","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","camelToDash","optimizedAppearDataAttribute","schedule","microtask","cancel","cancelMicrotask","createRenderBatcher","queueMicrotask","isRefObject","ref","isVariantLabel","v","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","Boolean","variants","useCreateMotionContext","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","HandoffComplete","useIsomorphicLayoutEffect","postRender","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","useCallback","mount","unmount","useMotionRef","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","Proxy","componentCache","_target","set","lowercaseSVGElements","isSVGComponent","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","getValueAsType","transform","clamp","min","max","number","parse","parseFloat","alpha","scale","sanitize","Math","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","frame","read","getBBox","getBoundingClientRect","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","progress","from","to","toFromDifference","mixNumber","hueToRgb","q","isColorString","testProp","splitColor","aName","bName","cName","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","color","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","matchedValues","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","warning","mixer","interpolate","input","isClamp","inputLength","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","now","clearTime","time","frameData","isProcessing","MotionGlobalConfig","useManualTiming","timestamp","performance","newTime","frameloopDriver","passTimestamp","stop","cancelFrame","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","decay","tween","percentToProgress","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","newSpeed","pause","complete","sample","supportsWaapi","memo","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","skipAnimations","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","collectMotionValues","MotionValue","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}