{"version":3,"file":"static/js/438.6c4094a0.chunk.js","mappings":"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","sources":["components/pages/AboutPage/AboutPage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport '../../../style/style.scss';\nimport './AboutPage.scss';\nimport ProjectData from '../../../Assets/projectData/projectData';\nimport * as resources from '../../../resources';\nimport IsMobilePage from \"../../isMobile/isMobilePage\";\nimport { clickTech, clickExp, clickEducation } from '../../../actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {defaultSlide} from \"../../../FramerMotion/framerMotion.pages.configs\"\nimport { AnimatePresence, motion } from 'framer-motion';\n\nconst AboutPage = () => {\n    IsMobilePage();\n    localStorage.setItem('page', 'about');\n    const [data, setData] = useState([]);\n    const tech = useSelector(state => state.aboutOption.tech);\n    const exp = useSelector(state => state.aboutOption.exp);\n    const education = useSelector(state => state.aboutOption.education);\n\n    console.log('render-ABOUT');\n    localStorage.setItem('aboutMeOptions', JSON.stringify({\n        \"tech\": `${tech}`, \n        \"exp\": `${exp}`, \n        \"education\": `${education}`\n    }));\n    const dispatch = useDispatch();\n    // const {getdata, process, setProcess} =  useMrPanchoService();\n    // useEffect(() => {\n    //     // 'https://projectdata-f0pl.onrender.com/cards'\n    //     // 'http://localhost:3000/cards'\n    //     // 'https://projectdata-f0pl.onrender.com/aboutMeCardsTechStack'\n    //     if (tech + '' === 'true') {\n    //         getdata('https://projectdata-f0pl.onrender.com/aboutMeCardsTechStack')\n    //         .then(onLoadedTechStack)\n    //         .then(() => setProcess('confirmed'))\n    //     } \n    // },[tech]) \n\n    // useEffect(() => {\n    //     // 'https://projectdata-f0pl.onrender.com/aboutMeCardsMyExperience'\n    //     if (exp + '' === 'true') {\n    //         getdata('https://projectdata-f0pl.onrender.com/aboutMeCardsMyExperience')\n    //         .then(onLoadedMyExperience)\n    //         .then(() => setProcess('confirmed'))\n    //     } \n    // },[exp])\n\n    // useEffect(() => {\n    //     // 'https://projectdata-f0pl.onrender.com/aboutMeCardsMyEducation'\n    //     if (education + '' === 'true') {\n    //         getdata('https://projectdata-f0pl.onrender.com/aboutMeCardsMyEducation')\n    //         .then(onLoadedMyEducation)\n    //         .then(() => setProcess('confirmed'))\n    //     } \n    // },[education])\n\n    // const onLoadedTechStack = (list) => {\n    //     setData(list);  \n    // }\n    // const onLoadedMyExperience = (list) => {\n    //     setData(list);  \n    // }\n    // const onLoadedMyEducation = (list) => {\n    //     setData(list);  \n    // }\n\n useEffect(() => {\n        if (tech + '' === 'true') {\n            const techButton = document.getElementById('tech');\n            const filterProjectData = ProjectData.filter(item => {\n                if(item.aboutMeCardsTechStack) {\n                  return item\n                } else return false\n             })\n             setData(Object.values(filterProjectData)[0].aboutMeCardsTechStack);\n             setTimeout(() => {\n                techButton.focus();\n             },500) \n        } \n    },[tech]) \n\n    useEffect(() => {\n        if (exp + '' === 'true') {\n            const expButton = document.getElementById('exp');\n            const filterProjectData = ProjectData.filter(item => {\n                if(item.aboutMeCardsMyExperience) {\n                  return item\n                } else return false\n             })\n             setData(Object.values(filterProjectData)[0].aboutMeCardsMyExperience);\n             setTimeout(() => {\n                expButton.focus();\n             },500)  \n        } \n    },[exp]) \n\n    useEffect(() => {\n        if (education + '' === 'true') {\n            const educationButton = document.getElementById('education');\n            const filterProjectData = ProjectData.filter(item => {\n                if(item.aboutMeCardsMyEducation) {\n                  return item\n                } else return false\n             })\n             setData(Object.values(filterProjectData)[0].aboutMeCardsMyEducation);\n             setTimeout(() => {\n                educationButton.focus();\n             },500)\n        } \n    },[education]) \n\n    function renderCards() {\n        const rez = data.map((item, index) => {       \n           function photo() {\n               let it = [];\n               let styleImg = '';\n               Object.entries(resources).forEach(logo => {\n                if (item.cardName === \"Frameworks:\") {\n                    styleImg = `styleImg`;\n                } else {\n                    styleImg = `otherImg`;\n                } \n                    item.img.forEach(item => {\n                        if (logo[0] === item) it.push(logo[1])                \n                    })\n                });\n                return it.map((item, index )=> {\n                       return (\n                        <div key={index} className={styleImg}>\n                            <img src={item} alt=\"logo\"/> \n                        </div>                \n                       ) \n                    }) \n               } \n               function ulTechStack() {\n                const ulTechStack = item.myTechStack.map((item, index) => {\n                    return (\n                      <li key={index}>{item}</li>\n                    )\n                 })\n                 return ulTechStack;\n               }\n               \n               function ulDescription() {\n                   const uldescription = item.description.map((item, index) => {\n                        return (\n                         <li key={index}>{item}</li>\n                        )\n                     })\n                return uldescription;\n               }\n            \n               return (\n               <div key={index} className=\"AboutPage_wrap\">\n                   <div className=\"AboutPage_card\">\n                   <div className=\"AboutPage_imageContainer\">\n                       {/* <img src={photo(logo)} style={{width: '300px', height: '150px' }} alt=\"marvelLogo\" /> */}\n                       {/* <div className=\"Card_image\" style={{backgroundImage: `url(${photo()})`}}></div> */}\n                       {photo()}\n                   </div>\n                   <div className=\"AboutPage_Card_content_bg\">\n                       <div className=\"AboutPage_Card_content\">\n                           <h2 className=\"AboutPage_Card_projectName\">{item.cardName}</h2>\n                           <div className=\"AboutPage_Card_listContainer\">\n                               <div className=\"AboutPage_Card_technologyStack\">\n                                   {/* <p>Technology stack:</p> */}\n                                   <ul className=\"AboutPage_Card_list\">\n                                       {item.myTechStack ? ulTechStack() : null}\n                                   </ul>\n                               </div>\n                               <div className=\"AboutPage_Card_mainFeatures\">\n                                   <p>{item.positionAtWork ? item.positionAtWork : null }</p>\n                                   <p>{item.positionEducation ? item.positionEducation : null }</p>\n                                   <ul className=\"AboutPage_Card_list\">\n                                      {item.description ? ulDescription() : null}\n                                   </ul>\n                               </div>\n                           </div>\n                       </div>\n                   </div>\n               </div>\n           </div>\n               ) \n        \n           });\n        return ( rez ) \n        \n    }\n    return (\n        <motion.div\n            variants={defaultSlide}\n            initial='hidden'\n            animate='visible'\n            exit='exit'\n            className='AboutPage'\n        >\n            <HelmetProvider>\n                <Helmet>\n                    <meta\n                        name=\"description\"\n                        content=\"Pavel Portfolio\"\n                    />\n                    <title>Pavel Portfolio</title>\n                </Helmet>\n            </HelmetProvider>\n            <div className=\"AboutPage\">\n                <div className=\"AboutPage_bg\">\n                <h1> About me </h1>\n                    <div className=\"AboutPage_text_buttons\">\n                        <button id=\"tech\" onClick={() =>dispatch(clickTech())} \n                        className=\"d-flex justify-content-center btn btn-primary aboutPageBtn\">My Tech Stack</button>\n                        <button id=\"exp\" onClick={() => dispatch(clickExp())} className=\"d-flex justify-content-center btn btn-primary aboutPageBtn\">My Experiance</button>\n                        <button id=\"education\" onClick={() => dispatch(clickEducation())} className=\"d-flex justify-content-center btn btn-primary aboutPageBtn\">My Education</button>\n                    </div>\n        <AnimatePresence  mode=\"wait\" >         \n            {       \n              (JSON.parse(localStorage.getItem('aboutMeOptions')).tech === 'true') \n              ? <motion.div\n                       key={data}\n                       variants={defaultSlide}\n                       initial='hidden'\n                       animate='visible'\n                       exit='exit' \n                       className='AboutPage_container'\n                   >       \n                   <div className=\"AboutPage_container\">\n                         {renderCards()}   \n                   </div>       \n                </motion.div> \n               : null    \n            }                       \n            { \n              (JSON.parse(localStorage.getItem('aboutMeOptions')).exp === 'true') \n              ? <motion.div\n                       key={data}\n                       variants={defaultSlide}\n                       initial='hidden'\n                       animate='visible'\n                       exit='exit' \n                       className='AboutPage_container'\n                   >       \n                   <div className=\"AboutPage_container\">\n                         {renderCards()}   \n                   </div>       \n                </motion.div> \n               : null \n            }          \n            {   \n              (JSON.parse(localStorage.getItem('aboutMeOptions')).education === 'true') \n              ? <motion.div\n                       key={data}\n                       variants={defaultSlide}\n                       initial='hidden'\n                       animate='visible'\n                       exit='exit' \n                       className='AboutPage_container'\n                   >       \n                   <div className=\"AboutPage_container\">\n                         {renderCards()}  \n                   </div>       \n                </motion.div> \n               : null   \n            }  \n        </AnimatePresence>\n                </div>\n            </div>\n        </motion.div>\n    )\n}\nexport default AboutPage;\n"],"names":["AboutPage","IsMobilePage","localStorage","setItem","data","setData","useState","tech","useSelector","state","aboutOption","exp","education","console","log","JSON","stringify","concat","dispatch","useDispatch","renderCards","map","item","index","_jsx","className","children","_jsxs","it","styleImg","Object","entries","resources","forEach","logo","cardName","img","push","src","alt","photo","myTechStack","ulTechStack","positionAtWork","positionEducation","description","uldescription","ulDescription","useEffect","techButton","document","getElementById","filterProjectData","ProjectData","filter","aboutMeCardsTechStack","values","setTimeout","focus","expButton","aboutMeCardsMyExperience","educationButton","aboutMeCardsMyEducation","motion","div","variants","defaultSlide","initial","animate","exit","HelmetProvider","Helmet","name","content","id","onClick","clickTech","clickExp","clickEducation","AnimatePresence","mode","parse","getItem"],"sourceRoot":""}