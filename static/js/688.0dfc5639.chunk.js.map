{"version":3,"file":"static/js/688.0dfc5639.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)$/i;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\nconst complexRegex = /(var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\))|(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))|((-)?([\\d]*\\.?[\\d])+)/gi;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const matchedValues = originalValue.match(complexRegex) || [];\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    for (let i = 0; i < matchedValues.length; i++) {\n        const parsedValue = matchedValues[i];\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n    }\n    const tokenised = originalValue.replace(complexRegex, SPLIT_TOKEN);\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { mix } from '../../../utils/mix/index.mjs';\nimport { pipe } from '../../../utils/pipe.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.8\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.8\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.8 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, isMounted) {\n        const origin = getOrigin(target, transition || {}, this);\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["LayoutGroupContext","createContext","PresenceContext","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","arguments","undefined","queue","cancel","frameData","i","createRenderStep","processStep","stepId","processBatch","MotionGlobalConfig","useManualTiming","performance","now","Math","max","min","forEach","keepAlive","immediate","frame","cancelFrame","requestAnimationFrame","noop","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","useIsomorphicLayoutEffect","postRender","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","x1","y1","x2","y2","progress","from","to","toFromDifference","mixNumber","hueToRgb","q","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","color","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","matchedValues","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","warning","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","clearTime","time","newTime","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","decay","tween","percentToProgress","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","skipAnimations","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}