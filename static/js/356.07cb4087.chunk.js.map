{"version":3,"file":"static/js/356.07cb4087.chunk.js","mappings":"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","sources":["components/isMobile/isMobileHomePage.js","components/pages/AboutPage/AboutPage.js","hooks/http.hook.js","services/MrPanchoService.js"],"sourcesContent":["import { useMediaQuery } from 'react-responsive';\nconst IsMobileHomePage = () => {\n    const isMobile = useMediaQuery({ query: `(max-width: 575px)` });\n    if (isMobile) {\n        const overFlow = document.getElementById('burger-checkbox');\n        const close = document.querySelector('.menu-list');\n        const menu = document.querySelector('.menu');\n        const menuItem = document.querySelectorAll('.menu-item');\n        const burger = document.querySelector('.burger');\n        // Закрытие-открытие бургер меню по нажатию на сам бургер\n        overFlow.addEventListener('click', () => {\n            if (overFlow.checked) {\n                document.body.style.overflow = \"hidden\";\n                menu.style = `\n                 position: fixed;\n                 top: 0;\n                 left: 0;\n                 width: 100%;\n                 height: 100%;\n                 z-index: 1;\n                 background-color: rgba(0, 0, 0, 0.5);\n                   `\n                close.style = `\n                display: grid;\n                `\n                burger.style = `\n                left: 85%;\n                z-index: 5;\n                `\n             } else {\n                document.body.style.overflow = \"\";\n                menu.style = ``;\n                close.style = ``;\n                burger.style = ``;\n             }\n        })\n        // Закрытие бургер меню по нажатию на поле вне зоны бургер меню\n       window.addEventListener('click', (e) => {\n        if (e.target === menu && overFlow.checked === true ) {\n            overFlow.checked = false;\n            document.body.style.overflow = \"\";\n            menu.style = ``;\n            close.style = ``;\n            burger.style = ``;\n        }\n       });\n         // Закрытие бургер меню по нажатию на навигационный элемент (ссылку страницу) \n       Array.from(menuItem).forEach(item => {\n            item.addEventListener('click', () => {\n                overFlow.checked = false;\n                document.body.style.overflow = \"\";\n                menu.style = ``;\n                close.style = ``;\n                burger.style = ``;\n            });\n       });\n    }\n  \n\n   \n}\nexport default IsMobileHomePage;\n","import { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport '../../../style/style.scss';\nimport './AboutPage.scss';\nimport * as resources from '../../../resources';\nimport useMrPanchoService from \"../../../services/MrPanchoService\";\nimport IsMobileHomePage from \"../../isMobile/isMobileHomePage\";\nimport { clickTech, clickExp, clickEducation } from '../../../actions';\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst AboutPage = () => {\n    IsMobileHomePage();\n    const [data, setData] = useState([]);\n    const tech = useSelector(state => state.aboutOption.tech);\n    const exp = useSelector(state => state.aboutOption.exp);\n    const education = useSelector(state => state.aboutOption.education);\n    console.log('render-ABOUT');\n    localStorage.setItem('aboutMeOptions', JSON.stringify({\n        \"tech\": `${tech}`, \n        \"exp\": `${exp}`, \n        \"education\": `${education}`\n    }));\n    const dispatch = useDispatch();\n    const {getdata, process, setProcess} =  useMrPanchoService();\n\n    useEffect(() => {\n        // 'https://projectdata-f0pl.onrender.com/cards'\n        // 'http://localhost:3000/cards'\n        // 'https://projectdata-f0pl.onrender.com/aboutMeCardsTechStack'\n        if (tech + '' === 'true') {\n            getdata('https://projectdata-f0pl.onrender.com/aboutMeCardsTechStack')\n            .then(onLoadedTechStack)\n            .then(() => setProcess('confirmed'))\n        } \n    },[tech]) \n\n    useEffect(() => {\n        // 'https://projectdata-f0pl.onrender.com/aboutMeCardsMyExperience'\n        if (exp + '' === 'true') {\n            getdata('https://projectdata-f0pl.onrender.com/aboutMeCardsMyExperience')\n            .then(onLoadedMyExperience)\n            .then(() => setProcess('confirmed'))\n        } \n    },[exp])\n\n    useEffect(() => {\n        // 'https://projectdata-f0pl.onrender.com/aboutMeCardsMyEducation'\n        if (education + '' === 'true') {\n            getdata('https://projectdata-f0pl.onrender.com/aboutMeCardsMyEducation')\n            .then(onLoadedMyEducation)\n            .then(() => setProcess('confirmed'))\n        } \n    },[education])\n\n    const onLoadedTechStack = (list) => {\n        setData(list);  \n    }\n    const onLoadedMyExperience = (list) => {\n        setData(list);  \n    }\n    const onLoadedMyEducation = (list) => {\n        setData(list);  \n    }\n\n    function renderCards() {\n        const rez = data.map((item, index) => {\n           function photo() {\n               let it = [];\n               Object.entries(resources).forEach(logo => {\n                    item.img.forEach(item => {\n                        if (logo[0] === item) it.push(logo[1]);\n                    })\n                });\n                console.log(it);\n                return it.map((item, index )=> {\n                       return (\n                            <img key={index} src={item} style={{width: '50px', height: '50px' }} alt=\"logo\"/>               \n                       ) \n                    }) \n               } \n               function ulTechStack() {\n                const ulTechStack = item.myTechStack.map((item, index) => {\n                    return (\n                      <li key={index}>{item}</li>\n                    )\n                 })\n                 return ulTechStack;\n               }\n               \n               function ulDescription() {\n                   const uldescription = item.description.map((item, index) => {\n                        return (\n                         <li key={index}>{item}</li>\n                        )\n                     })\n                return uldescription;\n               }\n\n               return (\n               <div key={index} className=\"AboutPage_wrap\">\n                   <div className=\"AboutPage_card\">\n                   <div className=\"Card_imageContainer\">\n                       {/* <img src={photo(logo)} style={{width: '300px', height: '150px' }} alt=\"marvelLogo\" /> */}\n                       {/* <div className=\"Card_image\" style={{backgroundImage: `url(${photo()})`}}></div> */}\n                       {photo()}\n                   </div>\n                   <div className=\"Card_content_bg\">\n                       <div className=\"Card_content\">\n                           <h2 className=\"Card_projectName\">{item.cardName}</h2>\n                           <div className=\"Card_listContainer\">\n                               <div className=\"Card_technologyStack\">\n                                   {/* <p>Technology stack:</p> */}\n                                   <ul className=\"Card_list\">\n                                       {item.myTechStack ? ulTechStack() : null}\n                                   </ul>\n                               </div>\n                               <div className=\"Card_mainFeatures\">\n                                   <p>{item.positionAtWork ? item.positionAtWork : null }</p>\n                                   <ul className=\"Card_list\">\n                                      {item.description ? ulDescription() : null}\n                                   </ul>\n                               </div>\n                           </div>\n                       </div>\n                   </div>\n               </div>\n           </div>\n               ) \n           });\n        return (\n            rez\n               )  \n    }\n    return (\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Pavel Portfolio\"\n                />\n                <title>Pavel Portfolio</title>\n            </Helmet>\n            <div className=\"AboutPage\">\n                <div className=\"AboutPage_bg\">\n                    <div className=\"AboutPage_text_buttons\">\n                        <h1> About me </h1>\n                        <button onClick={() => dispatch(clickTech())} \n                        className=\"d-flex justify-content-center btn btn-primary\">My Tech Stack</button>\n                        <button onClick={() => dispatch(clickExp())} className=\"d-flex justify-content-center btn btn-primary\">My Experiance</button>\n                        <button onClick={() => dispatch(clickEducation())} className=\"d-flex justify-content-center btn btn-primary\">My Education</button>\n                    </div>\n                    <div className=\"AboutPage_container\">\n                    {renderCards()}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default AboutPage;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [process, setProcess] = useState('waiting');\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {\n        'Content-Type': 'application/json'\n        }) => {\n        setProcess('loading');\n        try {\n            const response = await fetch(url, {method, body, headers});\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n            const data = await response.json();\n            return data;\n        } catch(e) {\n            setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    const clearError = useCallback(() => {\n        setProcess('loading');\n    }, []);\n    \n    return { request, clearError, process, setProcess}\n}\n\n","import {useHttp} from \"../hooks/http.hook\";\n\nconst  useMrPanchoService = () => {\n    const { request, clearError, process, setProcess} = useHttp();\n\n    // const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    // const _apiKey = 'apikey=1f77ab1b7a55db4504a75980239d5ccb';\n    // const _baseOffset = 210;\n\n    // const getAllCharacters = async (offset = _baseOffset) => {\n    //     const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n    //     return res.data.results.map(_transformCharacter);\n    // }\n\n    // const getCharacterByName = async (name) => {\n\t// \tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n\t// \treturn res.data.results.map(_transformCharacter);\n\t// };\n\n    const getdata = async (url) => {\n        const res = await request(`${url}`);\n        return res;\n    }\n\n    // const getAllComics = async (offset = 0) => {\n    //     const res = await request(`${_apiBase}comics?issueNumber=1&limit=8&offset=${offset}&${_apiKey}`);\n    //     return res.data.results.map(_transformComics);\n    //  }\n\n    //  const getComic = async (id) => {\n    //     const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n    //     return _transformComics(res.data.results[0]);\n    //  };\n\n//    const _transformCharacter = (char) => {\n//         return {\n//             id: char.id,\n//             name: char.name,\n//             description: char.description  \n//                     ? `${char.description.slice(0, 210)}...` \n//                     : 'There is no description for this character',\n//             thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n//             homepage: char.urls[0].url,\n//             wiki: char.urls[1].url,\n//             comics: char.comics.items\n//         }\n//     }\n\n//     const _transformComics = (comics) => {\n//         return {\n//             id: comics.id,\n//             title: comics.title,\n//             description: comics.description || \"There is no description\",\n//             pageCount: comics.pageCount\n//                     ? `${comics.pageCount} p.`\n//                     : \"No information about the number of pages\",\n//             thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n//             language: comics.textObjects[0]?.language || \"en-us\",\n//             price: comics.prices[0].price\n//                     ? `${comics.prices[0].price}$`\n//                     : 'not available'\n//         };\n//     };\n\n    return {\n        clearError, \n        process, \n        setProcess,\n        getdata\n    }\n}\n\nexport default useMrPanchoService;\n"],"names":["IsMobileHomePage","useMediaQuery","query","overFlow","document","getElementById","close","querySelector","menu","menuItem","querySelectorAll","burger","addEventListener","checked","body","style","overflow","window","e","target","Array","from","forEach","item","AboutPage","data","setData","useState","tech","useSelector","state","aboutOption","exp","education","console","log","localStorage","setItem","JSON","stringify","concat","dispatch","useDispatch","getdata","process","setProcess","useMrPanchoService","useEffect","then","onLoadedTechStack","onLoadedMyExperience","onLoadedMyEducation","list","_jsxs","_Fragment","children","Helmet","_jsx","name","content","className","onClick","clickTech","clickExp","clickEducation","map","index","it","Object","entries","resources","logo","img","push","src","width","height","alt","photo","cardName","myTechStack","ulTechStack","positionAtWork","description","uldescription","ulDescription","request","clearError","useHttp","useCallback","async","url","method","arguments","length","undefined","headers","response","fetch","ok","Error","status","json"],"sourceRoot":""}