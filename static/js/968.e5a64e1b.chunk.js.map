{"version":3,"file":"static/js/968.e5a64e1b.chunk.js","mappings":"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","sources":["components/errorMessage/ErrorMessage.js","components/pages/ProjectsPage/ProjectsPage.js"],"sourcesContent":["import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit:'contain', margin: '0 auto'}} src={img} alt=\"Error\"/>\n    //    <img src={process.env.PUBLIC_URL + '/error.gif'} alt=\"Error\" />  - если надо взять из папки public \n    ) \n}\n\nexport default ErrorMessage;","import { useState, useEffect} from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport '../../../style/style.scss';\nimport './projectsPage.scss';\nimport ProjectData from '../../../Assets/projectData/projectData';\nimport {Link} from 'react-router-dom'\nimport useMrPanchoService from \"../../../services/MrPanchoService\";\nimport * as resources from '../../../resources';\nimport Spinner from \"../../spinner/Spinner\";\nimport ErrorMessage from \"../../errorMessage/ErrorMessage\";\nimport IsMobilePage from \"../../isMobile/isMobilePage\";\nimport {defaultSlide} from \"../../../FramerMotion/framerMotion.pages.configs\"\nimport { motion } from 'framer-motion';\n\n\n// {bringitup, marvelLogo, mogo, nativeJs}\n// const setContent = (process, Component, newItemLoading) => {\n//     switch (process) {\n//         case 'waiting':\n//             return <Spinner/>;\n//         case 'loading':\n//             return newItemLoading ? <Component/> : <Spinner/>;\n//         case 'confirmed':\n//             return Component;\n//         case 'error':\n//             return <ErrorMessage/>;\n//         default:\n//             throw new Error('Unexpected process state');\n//     }\n// }\n\nconst ProjectPage = () => {\n    const [data, setData] = useState([]);\n    \n    IsMobilePage();\n  \n    console.log('render-PROJECTS');\n    const {getdata, process, setProcess} =  useMrPanchoService();\n    useEffect(() => {\n        // 'https://projectdata-f0pl.onrender.com/cards'\n        // 'http://localhost:3000/cards'\n        // getdata('../../../Assets/db.json').then(onLoaded).then(() => setProcess('confirmed'))\n\n    }, [])\n    // const onLoaded = (list) => {\n    //     setData(list);  \n    // }\n   \n    function renderCards() {\n     const rez = ProjectData[0].cards.map((item, index) => {\n        function photo() {\n            let it;\n            Object.entries(resources).forEach(logo => {\n                if (logo[0] === item.img) it = logo[1];\n               });\n               return it;\n            } \n            const ulCardlist = item.technologyStack.map((item, index) => {\n               return (\n                <li key={index}>{item}</li>\n               )\n            })\n            const ulMainFeatures = item.mainFeatures.map((item, index)=> {\n                return (\n                 <li key={index}>{item}</li>\n                )\n             })\n            return (\n            <div key={index} className=\"ProjectPage_wrap\">\n                <div className=\"ProjectPage_card\">\n                <div className=\"Card_imageContainer\">\n                    {/* <img src={photo(logo)} style={{width: '300px', height: '150px' }} alt=\"marvelLogo\" /> */}\n                    <div className=\"Card_image\" style={{backgroundImage: `url(${photo()})`}}></div>\n                </div>\n                <div className=\"Card_content_bg\">\n                    <div className=\"Card_content\">\n                        <h2 className=\"Card_projectName\">{item.projectName}</h2>\n                        <div className=\"Card_listContainer\">\n                            <div className=\"Card_technologyStack\">\n                                <p>Technology stack:</p>\n                                <ul className=\"Card_list\">\n                                    {ulCardlist}\n                                </ul>\n                            </div>\n                            <div className=\"Card_mainFeatures\">\n                                <p>Main Features:</p>\n                                <ul className=\"Card_list\">\n                                   {ulMainFeatures}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"Card_btnContainer\">\n                        <Link className=\"d-flex justify-content-center btn btn-primary\" to={item.linkWebsite}>Go to the website</Link>\n                        <br/>\n                        <Link className=\"d-flex justify-content-center btn btn-primary\" to={item.linkGitHubRepo}>GitHub repo</Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n            ) \n        });\n        return (\n            rez\n            )  \n    }\n\n    return (\n        \n        <motion.div\n            variants={defaultSlide}\n            initial='hidden'\n            animate='visible'\n            exit='exit'\n            className='ProjectPage'\n        >\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Pavel Portfolio\"\n                />\n                <title>Pavel Portfolio</title>\n            </Helmet>\n            <div className=\"ProjectPage\">\n                <div className=\"ProjectPage_bg\">\n                    <h1> My projects </h1>\n                    <div className=\"ProjectPage_container\">\n                    {renderCards()}\n                    </div>\n                </div>\n            </div>\n        </motion.div>\n    )\n}\nexport default ProjectPage;\n\n"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","ProjectPage","data","setData","useState","IsMobilePage","console","log","getdata","process","setProcess","useMrPanchoService","useEffect","_jsxs","motion","div","variants","defaultSlide","initial","animate","exit","className","children","Helmet","name","content","ProjectData","cards","map","item","index","ulCardlist","technologyStack","ulMainFeatures","mainFeatures","backgroundImage","concat","it","Object","entries","resources","forEach","logo","photo","projectName","Link","to","linkWebsite","linkGitHubRepo"],"sourceRoot":""}