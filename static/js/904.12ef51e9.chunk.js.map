{"version":3,"file":"static/js/904.12ef51e9.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","components/pages/AboutPage/AboutPage.js"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport '../../../style/style.scss';\nimport './AboutPage.scss';\nimport ProjectData from '../../../Assets/projectData/projectData';\nimport * as resources from '../../../resources';\nimport useMrPanchoService from \"../../../services/MrPanchoService\";\nimport IsMobilePage from \"../../isMobile/isMobilePage\";\nimport { clickTech, clickExp, clickEducation } from '../../../actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {defaultSlide} from \"../../../FramerMotion/framerMotion.pages.configs\"\nimport { AnimatePresence, motion } from 'framer-motion';\n\nconst AboutPage = () => {\n    IsMobilePage();\n    const [data, setData] = useState([]);\n    const tech = useSelector(state => state.aboutOption.tech);\n    const exp = useSelector(state => state.aboutOption.exp);\n    const education = useSelector(state => state.aboutOption.education);\n    console.log('render-ABOUT');\n    localStorage.setItem('aboutMeOptions', JSON.stringify({\n        \"tech\": `${tech}`, \n        \"exp\": `${exp}`, \n        \"education\": `${education}`\n    }));\n    const dispatch = useDispatch();\n    const {getdata, process, setProcess} =  useMrPanchoService();\n\n    // useEffect(() => {\n    //     // 'https://projectdata-f0pl.onrender.com/cards'\n    //     // 'http://localhost:3000/cards'\n    //     // 'https://projectdata-f0pl.onrender.com/aboutMeCardsTechStack'\n    //     if (tech + '' === 'true') {\n    //         getdata('https://projectdata-f0pl.onrender.com/aboutMeCardsTechStack')\n    //         .then(onLoadedTechStack)\n    //         .then(() => setProcess('confirmed'))\n    //     } \n    // },[tech]) \n\n    // useEffect(() => {\n    //     // 'https://projectdata-f0pl.onrender.com/aboutMeCardsMyExperience'\n    //     if (exp + '' === 'true') {\n    //         getdata('https://projectdata-f0pl.onrender.com/aboutMeCardsMyExperience')\n    //         .then(onLoadedMyExperience)\n    //         .then(() => setProcess('confirmed'))\n    //     } \n    // },[exp])\n\n    // useEffect(() => {\n    //     // 'https://projectdata-f0pl.onrender.com/aboutMeCardsMyEducation'\n    //     if (education + '' === 'true') {\n    //         getdata('https://projectdata-f0pl.onrender.com/aboutMeCardsMyEducation')\n    //         .then(onLoadedMyEducation)\n    //         .then(() => setProcess('confirmed'))\n    //     } \n    // },[education])\n\n    // const onLoadedTechStack = (list) => {\n    //     setData(list);  \n    // }\n    // const onLoadedMyExperience = (list) => {\n    //     setData(list);  \n    // }\n    // const onLoadedMyEducation = (list) => {\n    //     setData(list);  \n    // }\n\n useEffect(() => {\n        if (tech + '' === 'true') {\n            const filterProjectData = ProjectData.filter(item => {\n                if(item.aboutMeCardsTechStack) {\n                  return item\n                } else return false\n             })\n             setData(Object.values(filterProjectData)[0].aboutMeCardsTechStack);\n             \n        } \n    },[tech]) \n\n    useEffect(() => {\n        if (exp + '' === 'true') {\n            const filterProjectData = ProjectData.filter(item => {\n                if(item.aboutMeCardsMyExperience) {\n                  return item\n                } else return false\n             })\n             setData(Object.values(filterProjectData)[0].aboutMeCardsMyExperience);\n        } \n    },[exp]) \n\n    useEffect(() => {\n        if (education + '' === 'true') {\n            const filterProjectData = ProjectData.filter(item => {\n                if(item.aboutMeCardsMyEducation) {\n                  return item\n                } else return false\n             })\n             setData(Object.values(filterProjectData)[0].aboutMeCardsMyEducation);\n        } \n    },[education]) \n\n    function renderCards() {\n        const rez = data.map((item, index) => {       \n           function photo() {\n               let it = [];\n               let styleImg = '';\n               Object.entries(resources).forEach(logo => {\n                if (item.cardName === \"Frameworks:\") {\n                    styleImg = `styleImg`;\n                } else {\n                    styleImg = `otherImg`;\n                } \n                    item.img.forEach(item => {\n                        if (logo[0] === item) it.push(logo[1])                \n                    })\n                });\n                return it.map((item, index )=> {\n                       return (\n                        <div key={index} className={styleImg}>\n                            <img src={item} alt=\"logo\"/> \n                        </div>                \n                       ) \n                    }) \n               } \n               function ulTechStack() {\n                const ulTechStack = item.myTechStack.map((item, index) => {\n                    return (\n                      <li key={index}>{item}</li>\n                    )\n                 })\n                 return ulTechStack;\n               }\n               \n               function ulDescription() {\n                   const uldescription = item.description.map((item, index) => {\n                        return (\n                         <li key={index}>{item}</li>\n                        )\n                     })\n                return uldescription;\n               }\n            \n               return (\n               <div key={index} className=\"AboutPage_wrap\">\n                   <div className=\"AboutPage_card\">\n                   <div className=\"AboutPage_imageContainer\">\n                       {/* <img src={photo(logo)} style={{width: '300px', height: '150px' }} alt=\"marvelLogo\" /> */}\n                       {/* <div className=\"Card_image\" style={{backgroundImage: `url(${photo()})`}}></div> */}\n                       {photo()}\n                   </div>\n                   <div className=\"AboutPage_Card_content_bg\">\n                       <div className=\"AboutPage_Card_content\">\n                           <h2 className=\"AboutPage_Card_projectName\">{item.cardName}</h2>\n                           <div className=\"AboutPage_Card_listContainer\">\n                               <div className=\"AboutPage_Card_technologyStack\">\n                                   {/* <p>Technology stack:</p> */}\n                                   <ul className=\"AboutPage_Card_list\">\n                                       {item.myTechStack ? ulTechStack() : null}\n                                   </ul>\n                               </div>\n                               <div className=\"AboutPage_Card_mainFeatures\">\n                                   <p>{item.positionAtWork ? item.positionAtWork : null }</p>\n                                   <p>{item.positionEducation ? item.positionEducation : null }</p>\n                                   <ul className=\"AboutPage_Card_list\">\n                                      {item.description ? ulDescription() : null}\n                                   </ul>\n                               </div>\n                           </div>\n                       </div>\n                   </div>\n               </div>\n           </div>\n               ) \n        \n           });\n        return ( rez ) \n        \n    }\n    return (\n        <motion.div\n            variants={defaultSlide}\n            initial='hidden'\n            animate='visible'\n            exit='exit'\n            className='AboutPage'\n        >\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Pavel Portfolio\"\n                />\n                <title>Pavel Portfolio</title>\n            </Helmet>\n            <div className=\"AboutPage\">\n                <div className=\"AboutPage_bg\">\n                <h1> About me </h1>\n                    <div className=\"AboutPage_text_buttons\">\n                        <button onClick={() => dispatch(clickTech())} \n                        className=\"d-flex justify-content-center btn btn-primary aboutPageBtn\">My Tech Stack</button>\n                        <button onClick={() => dispatch(clickExp())} className=\"d-flex justify-content-center btn btn-primary aboutPageBtn\">My Experiance</button>\n                        <button onClick={() => dispatch(clickEducation())} className=\"d-flex justify-content-center btn btn-primary aboutPageBtn\">My Education</button>\n                    </div>\n                    <AnimatePresence> {\n                       tech && (\n                            <motion.div\n                            variants={defaultSlide}\n                            initial='hidden'\n                            animate='visible'\n                            \n                            className='AboutPage_container'\n                        >\n                                    <div className=\"AboutPage_container\">\n                                    {renderCards()}\n                                    </div>\n                            </motion.div>\n                        )\n                    }\n                    </AnimatePresence>\n                    <AnimatePresence> {\n                       exp && (\n                            <motion.div\n                            variants={defaultSlide}\n                            initial='hidden'\n                            animate='visible'\n                           \n                            className='AboutPage_container'\n                        >\n                                    <div className=\"AboutPage_container\">\n                                    {renderCards()}\n                                    </div>\n                            </motion.div>\n                        )\n                    }\n                    </AnimatePresence>\n                    <AnimatePresence> {\n                       education && (\n                            <motion.div\n                            variants={defaultSlide}\n                            initial='hidden'\n                            animate='visible'\n                            \n                            className='AboutPage_container'\n                        >\n                                    <div className=\"AboutPage_container\">\n                                    {renderCards()}\n                                    </div>\n                            </motion.div>\n                        )\n                    }\n                    </AnimatePresence>\n                </div>\n            </div>\n        </motion.div>\n    )\n}\nexport default AboutPage;\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","_ref","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","forceRender","useContext","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","useState","useCallback","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","onExit","leftOverKeys","Array","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement","AboutPage","IsMobilePage","data","setData","tech","useSelector","state","aboutOption","exp","education","console","log","localStorage","setItem","JSON","stringify","dispatch","useDispatch","getdata","process","setProcess","useMrPanchoService","renderCards","item","index","_jsx","className","_jsxs","it","styleImg","Object","entries","resources","logo","cardName","img","src","alt","photo","myTechStack","ulTechStack","positionAtWork","positionEducation","description","uldescription","ulDescription","filterProjectData","ProjectData","aboutMeCardsTechStack","aboutMeCardsMyExperience","aboutMeCardsMyEducation","motion","div","variants","defaultSlide","animate","exit","Helmet","name","content","onClick","clickTech","clickExp","clickEducation"],"sourceRoot":""}