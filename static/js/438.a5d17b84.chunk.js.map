{"version":3,"file":"static/js/438.a5d17b84.chunk.js","mappings":"6PAYA,MAsQA,EAtQkBA,MAChBC,EAAAA,EAAAA,KACAC,aAAaC,QAAQ,OAAQ,SAC7B,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAC3BC,GAAOC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,YAAYH,OAChDI,GAAMH,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,YAAYC,MAC/CC,GAAYJ,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,YAAYE,YAE3DC,QAAQC,IAAI,gBACZZ,aAAaC,QACX,iBACAY,KAAKC,UAAU,CACbT,KAAK,GAADU,OAAKV,GACTI,IAAI,GAADM,OAAKN,GACRC,UAAU,GAADK,OAAKL,MAGlB,MAAMM,GAAWC,EAAAA,EAAAA,MAsFjB,SAASC,IAuEP,OAtEYhB,EAAKiB,KAAI,CAACC,EAAMC,KAqCxBC,EAAAA,EAAAA,KAAA,OAAiBC,UAAU,iBAAgBC,UACzCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2BAA0BC,SAtC/C,WACE,IAAIE,EAAK,GACLC,EAAW,GAWf,OAVAC,OAAOC,QAAQC,GAAWC,SAASC,IAE/BL,EADoB,gBAAlBP,EAAKa,SACC,WAEA,WAEVb,EAAKc,IAAIH,SAASX,IACZY,EAAK,KAAOZ,GAAMM,EAAGS,KAAKH,EAAK,GAAG,GACtC,IAEGN,EAAGP,KAAI,CAACC,EAAMC,KAEjBC,EAAAA,EAAAA,KAAA,OAAiBC,UAAWI,EAASH,UACnCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAqBa,IAAKhB,EAAMiB,IAAI,UAD3ChB,IAKhB,CAqBSiB,MAEHhB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,UACxCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6BAA4BC,SAAEJ,EAAKa,YACjDR,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+BAA8BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAgCC,UAE7CF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sBAAqBC,SAChCJ,EAAKmB,YA7BtB,WACE,MAAMC,EAAcpB,EAAKmB,YAAYpB,KAAI,CAACC,EAAMC,KACvCC,EAAAA,EAAAA,KAAA,MAAAE,SAAiBJ,GAARC,KAElB,OAAOmB,CACT,CAwBoCA,GAAgB,UAGxCf,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,KAAAE,SAAIJ,EAAKqB,eAAiBrB,EAAKqB,eAAiB,QAChDnB,EAAAA,EAAAA,KAAA,KAAAE,SACGJ,EAAKsB,kBAAoBtB,EAAKsB,kBAAoB,QAErDpB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sBAAqBC,SAChCJ,EAAKuB,YA/BtB,WACE,MAAMC,EAAgBxB,EAAKuB,YAAYxB,KAAI,CAACC,EAAMC,KACzCC,EAAAA,EAAAA,KAAA,MAAAE,SAAiBJ,GAARC,KAElB,OAAOuB,CACT,CA0BoCC,GAAkB,sBAvB1CxB,IAkChB,CACA,OAtHAyB,EAAAA,EAAAA,YAAU,KACR,GAAIzC,EAAO,KAAO,OAAQ,CACxB,MAAM0C,EAAaC,SAASC,eAAe,QACrCC,EAAoBC,EAAAA,EAAYC,QAAQhC,KACxCA,EAAKiC,uBACAjC,IAGXjB,EAAQyB,OAAO0B,OAAOJ,GAAmB,GAAGG,uBAC5CE,YAAW,KACTR,EAAWS,OAAO,GACjB,IACL,IACC,CAACnD,KAEJyC,EAAAA,EAAAA,YAAU,KACR,GAAIrC,EAAM,KAAO,OAAQ,CACvB,MAAMgD,EAAYT,SAASC,eAAe,OACpCC,EAAoBC,EAAAA,EAAYC,QAAQhC,KACxCA,EAAKsC,0BACAtC,IAGXjB,EAAQyB,OAAO0B,OAAOJ,GAAmB,GAAGQ,0BAC5CH,YAAW,KACTE,EAAUD,OAAO,GAChB,IACL,IACC,CAAC/C,KAEJqC,EAAAA,EAAAA,YAAU,KACR,GAAIpC,EAAY,KAAO,OAAQ,CAC7B,MAAMiD,EAAkBX,SAASC,eAAe,aAC1CC,EAAoBC,EAAAA,EAAYC,QAAQhC,KACxCA,EAAKwC,yBACAxC,IAGXjB,EAAQyB,OAAO0B,OAAOJ,GAAmB,GAAGU,yBAC5CL,YAAW,KACTI,EAAgBH,OAAO,GACtB,IACL,IACC,CAAC9C,KA4EFe,EAAAA,EAAAA,MAACoC,EAAAA,EAAOC,IAAG,CACTC,SAAUC,EAAAA,EACVC,QAAQ,SACRC,QAAQ,UACRC,KAAK,OACL5C,UAAU,YAAWC,SAAA,EAErBF,EAAAA,EAAAA,KAAC8C,EAAAA,GAAc,CAAA5C,UACbC,EAAAA,EAAAA,MAAC4C,EAAAA,GAAM,CAAA7C,SAAA,EACLF,EAAAA,EAAAA,KAAA,QAAMgD,KAAK,cAAcC,QAAQ,qBACjCjD,EAAAA,EAAAA,KAAA,SAAAE,SAAO,0BAGXF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBACJC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,UACEkD,GAAG,OACHC,QAASA,IAAMzD,GAAS0D,EAAAA,EAAAA,MACxBnD,UAAU,6DAA4DC,SACvE,mBAGDF,EAAAA,EAAAA,KAAA,UACEkD,GAAG,MACHC,QAASA,IAAMzD,GAAS2D,EAAAA,EAAAA,OACxBpD,UAAU,6DAA4DC,SACvE,mBAGDF,EAAAA,EAAAA,KAAA,UACEkD,GAAG,YACHC,QAASA,IAAMzD,GAAS4D,EAAAA,EAAAA,OACxBrD,UAAU,6DAA4DC,SACvE,qBAIHC,EAAAA,EAAAA,MAACoD,EAAAA,EAAe,CAACC,KAAK,OAAMtD,SAAA,CAE1B,SADCX,KAAKkE,MAAM/E,aAAagF,QAAQ,mBAAmB3E,MAElDiB,EAAAA,EAAAA,KAACuC,EAAAA,EAAOC,IAAG,CAETC,SAAUC,EAAAA,EACVC,QAAQ,SACRC,QAAQ,UACRC,KAAK,OACL5C,UAAU,sBAAqBC,UAE/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,SAAEN,OAPjChB,GASL,KAEJ,SADCW,KAAKkE,MAAM/E,aAAagF,QAAQ,mBAAmBvE,KAElDa,EAAAA,EAAAA,KAACuC,EAAAA,EAAOC,IAAG,CAETC,SAAUC,EAAAA,EACVC,QAAQ,SACRC,QAAQ,UACRC,KAAK,OACL5C,UAAU,sBAAqBC,UAE/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,SAAEN,OAPjChB,GASL,KAEJ,SADCW,KAAKkE,MAAM/E,aAAagF,QAAQ,mBAAmBtE,WAElDY,EAAAA,EAAAA,KAACuC,EAAAA,EAAOC,IAAG,CAETC,SAAUC,EAAAA,EACVC,QAAQ,SACRC,QAAQ,UACRC,KAAK,OACL5C,UAAU,sBAAqBC,UAE/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,SAAEN,OAPjChB,GASL,eAIC,C","sources":["components/pages/AboutPage/AboutPage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport \"../../../style/style.scss\";\nimport \"./AboutPage.scss\";\nimport ProjectData from \"../../../Assets/projectData/projectData\";\nimport * as resources from \"../../../resources\";\nimport IsMobilePage from \"../../isMobile/isMobilePage\";\nimport { clickTech, clickExp, clickEducation } from \"../../../actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { defaultSlide } from \"../../../FramerMotion/framerMotion.pages.configs\";\nimport { AnimatePresence, motion } from \"framer-motion\";\n\nconst AboutPage = () => {\n  IsMobilePage();\n  localStorage.setItem(\"page\", \"about\");\n  const [data, setData] = useState([]);\n  const tech = useSelector((state) => state.aboutOption.tech);\n  const exp = useSelector((state) => state.aboutOption.exp);\n  const education = useSelector((state) => state.aboutOption.education);\n\n  console.log(\"render-ABOUT\");\n  localStorage.setItem(\n    \"aboutMeOptions\",\n    JSON.stringify({\n      tech: `${tech}`,\n      exp: `${exp}`,\n      education: `${education}`,\n    })\n  );\n  const dispatch = useDispatch();\n  // const {getdata, process, setProcess} =  useMrPanchoService();\n  // useEffect(() => {\n  //     // 'https://projectdata-f0pl.onrender.com/cards'\n  //     // 'http://localhost:3000/cards'\n  //     // 'https://projectdata-f0pl.onrender.com/aboutMeCardsTechStack'\n  //     if (tech + '' === 'true') {\n  //         getdata('https://projectdata-f0pl.onrender.com/aboutMeCardsTechStack')\n  //         .then(onLoadedTechStack)\n  //         .then(() => setProcess('confirmed'))\n  //     }\n  // },[tech])\n\n  // useEffect(() => {\n  //     // 'https://projectdata-f0pl.onrender.com/aboutMeCardsMyExperience'\n  //     if (exp + '' === 'true') {\n  //         getdata('https://projectdata-f0pl.onrender.com/aboutMeCardsMyExperience')\n  //         .then(onLoadedMyExperience)\n  //         .then(() => setProcess('confirmed'))\n  //     }\n  // },[exp])\n\n  // useEffect(() => {\n  //     // 'https://projectdata-f0pl.onrender.com/aboutMeCardsMyEducation'\n  //     if (education + '' === 'true') {\n  //         getdata('https://projectdata-f0pl.onrender.com/aboutMeCardsMyEducation')\n  //         .then(onLoadedMyEducation)\n  //         .then(() => setProcess('confirmed'))\n  //     }\n  // },[education])\n\n  // const onLoadedTechStack = (list) => {\n  //     setData(list);\n  // }\n  // const onLoadedMyExperience = (list) => {\n  //     setData(list);\n  // }\n  // const onLoadedMyEducation = (list) => {\n  //     setData(list);\n  // }\n\n  useEffect(() => {\n    if (tech + \"\" === \"true\") {\n      const techButton = document.getElementById(\"tech\");\n      const filterProjectData = ProjectData.filter((item) => {\n        if (item.aboutMeCardsTechStack) {\n          return item;\n        } else return false;\n      });\n      setData(Object.values(filterProjectData)[0].aboutMeCardsTechStack);\n      setTimeout(() => {\n        techButton.focus();\n      }, 500);\n    }\n  }, [tech]);\n\n  useEffect(() => {\n    if (exp + \"\" === \"true\") {\n      const expButton = document.getElementById(\"exp\");\n      const filterProjectData = ProjectData.filter((item) => {\n        if (item.aboutMeCardsMyExperience) {\n          return item;\n        } else return false;\n      });\n      setData(Object.values(filterProjectData)[0].aboutMeCardsMyExperience);\n      setTimeout(() => {\n        expButton.focus();\n      }, 500);\n    }\n  }, [exp]);\n\n  useEffect(() => {\n    if (education + \"\" === \"true\") {\n      const educationButton = document.getElementById(\"education\");\n      const filterProjectData = ProjectData.filter((item) => {\n        if (item.aboutMeCardsMyEducation) {\n          return item;\n        } else return false;\n      });\n      setData(Object.values(filterProjectData)[0].aboutMeCardsMyEducation);\n      setTimeout(() => {\n        educationButton.focus();\n      }, 500);\n    }\n  }, [education]);\n\n  function renderCards() {\n    const rez = data.map((item, index) => {\n      function photo() {\n        let it = [];\n        let styleImg = \"\";\n        Object.entries(resources).forEach((logo) => {\n          if (item.cardName === \"Frameworks:\") {\n            styleImg = `styleImg`;\n          } else {\n            styleImg = `otherImg`;\n          }\n          item.img.forEach((item) => {\n            if (logo[0] === item) it.push(logo[1]);\n          });\n        });\n        return it.map((item, index) => {\n          return (\n            <div key={index} className={styleImg}>\n              <img className=\"img_projects_cards\" src={item} alt=\"logo\" />\n            </div>\n          );\n        });\n      }\n      function ulTechStack() {\n        const ulTechStack = item.myTechStack.map((item, index) => {\n          return <li key={index}>{item}</li>;\n        });\n        return ulTechStack;\n      }\n\n      function ulDescription() {\n        const uldescription = item.description.map((item, index) => {\n          return <li key={index}>{item}</li>;\n        });\n        return uldescription;\n      }\n\n      return (\n        <div key={index} className=\"AboutPage_wrap\">\n          <div className=\"AboutPage_card\">\n            <div className=\"AboutPage_imageContainer\">\n              {/* <img src={photo(logo)} style={{width: '300px', height: '150px' }} alt=\"marvelLogo\" /> */}\n              {/* <div className=\"Card_image\" style={{backgroundImage: `url(${photo()})`}}></div> */}\n              {photo()}\n            </div>\n            <div className=\"AboutPage_Card_content_bg\">\n              <div className=\"AboutPage_Card_content\">\n                <h2 className=\"AboutPage_Card_projectName\">{item.cardName}</h2>\n                <div className=\"AboutPage_Card_listContainer\">\n                  <div className=\"AboutPage_Card_technologyStack\">\n                    {/* <p>Technology stack:</p> */}\n                    <ul className=\"AboutPage_Card_list\">\n                      {item.myTechStack ? ulTechStack() : null}\n                    </ul>\n                  </div>\n                  <div className=\"AboutPage_Card_mainFeatures\">\n                    <p>{item.positionAtWork ? item.positionAtWork : null}</p>\n                    <p>\n                      {item.positionEducation ? item.positionEducation : null}\n                    </p>\n                    <ul className=\"AboutPage_Card_list\">\n                      {item.description ? ulDescription() : null}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    });\n    return rez;\n  }\n  return (\n    <motion.div\n      variants={defaultSlide}\n      initial=\"hidden\"\n      animate=\"visible\"\n      exit=\"exit\"\n      className=\"AboutPage\"\n    >\n      <HelmetProvider>\n        <Helmet>\n          <meta name=\"description\" content=\"Pavel Portfolio\" />\n          <title>Pavel Portfolio</title>\n        </Helmet>\n      </HelmetProvider>\n      <div className=\"AboutPage\">\n        <div className=\"AboutPage_bg\">\n          <h1> About me </h1>\n          <div className=\"AboutPage_text_buttons\">\n            <button\n              id=\"tech\"\n              onClick={() => dispatch(clickTech())}\n              className=\"d-flex justify-content-center btn btn-primary aboutPageBtn\"\n            >\n              My Tech Stack\n            </button>\n            <button\n              id=\"exp\"\n              onClick={() => dispatch(clickExp())}\n              className=\"d-flex justify-content-center btn btn-primary aboutPageBtn\"\n            >\n              My Experiance\n            </button>\n            <button\n              id=\"education\"\n              onClick={() => dispatch(clickEducation())}\n              className=\"d-flex justify-content-center btn btn-primary aboutPageBtn\"\n            >\n              My Education\n            </button>\n          </div>\n          <AnimatePresence mode=\"wait\">\n            {JSON.parse(localStorage.getItem(\"aboutMeOptions\")).tech ===\n            \"true\" ? (\n              <motion.div\n                key={data}\n                variants={defaultSlide}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                className=\"AboutPage_container\"\n              >\n                <div className=\"AboutPage_container\">{renderCards()}</div>\n              </motion.div>\n            ) : null}\n            {JSON.parse(localStorage.getItem(\"aboutMeOptions\")).exp ===\n            \"true\" ? (\n              <motion.div\n                key={data}\n                variants={defaultSlide}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                className=\"AboutPage_container\"\n              >\n                <div className=\"AboutPage_container\">{renderCards()}</div>\n              </motion.div>\n            ) : null}\n            {JSON.parse(localStorage.getItem(\"aboutMeOptions\")).education ===\n            \"true\" ? (\n              <motion.div\n                key={data}\n                variants={defaultSlide}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                className=\"AboutPage_container\"\n              >\n                <div className=\"AboutPage_container\">{renderCards()}</div>\n              </motion.div>\n            ) : null}\n          </AnimatePresence>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\nexport default AboutPage;\n"],"names":["AboutPage","IsMobilePage","localStorage","setItem","data","setData","useState","tech","useSelector","state","aboutOption","exp","education","console","log","JSON","stringify","concat","dispatch","useDispatch","renderCards","map","item","index","_jsx","className","children","_jsxs","it","styleImg","Object","entries","resources","forEach","logo","cardName","img","push","src","alt","photo","myTechStack","ulTechStack","positionAtWork","positionEducation","description","uldescription","ulDescription","useEffect","techButton","document","getElementById","filterProjectData","ProjectData","filter","aboutMeCardsTechStack","values","setTimeout","focus","expButton","aboutMeCardsMyExperience","educationButton","aboutMeCardsMyEducation","motion","div","variants","defaultSlide","initial","animate","exit","HelmetProvider","Helmet","name","content","id","onClick","clickTech","clickExp","clickEducation","AnimatePresence","mode","parse","getItem"],"sourceRoot":""}